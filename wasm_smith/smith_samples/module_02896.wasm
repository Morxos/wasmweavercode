(module
  (rec
    (type (;0;) (sub (func (param i32) (result f64))))
    (type (;1;) (sub (array i64)))
    (type (;2;) (array (mut i16)))
    (type (;3;) (func (param i32) (result i32)))
    (type (;4;) (array i8))
    (type (;5;) (sub (array i16)))
    (type (;6;) (func (param i31ref) (result i32 i64)))
    (type (;7;) (sub final 1 (array i64)))
    (type (;8;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut i16)) (field f32) (field (mut eqref)) (field i8) (field (mut i16)) (field i8) (field (mut i8)))))
    (type (;9;) (sub (array (mut i8))))
    (type (;10;) (func (param i64 f32) (result f32 nullexternref i64)))
    (type (;11;) (sub (array i8)))
    (type (;12;) (sub (array (mut i16))))
    (type (;13;) (sub (func (param f64))))
    (type (;14;) (array (mut i8)))
    (type (;15;) (func (param i32)))
    (type (;16;) (func (param f64) (result i32 f64 f32)))
    (type (;17;) (func (param i64)))
    (type (;18;) (sub (func (param externref))))
    (type (;19;) (sub (struct (field (mut i32)) (field i32) (field i8) (field i8) (field i8) (field i8) (field (mut i16)) (field f64) (field (mut i32)) (field f32) (field (mut nullfuncref)))))
    (type (;20;) (sub (func (param f32 i32) (result f32))))
    (type (;21;) (func (param (ref null 9))))
    (type (;22;) (func (param i64 f64) (result f32 f32 i64)))
    (type (;23;) (sub (array (mut i32))))
    (type (;24;) (array (mut i16)))
    (type (;25;) (array f32))
    (type (;26;) (sub (func)))
    (type (;27;) (sub (struct (field (mut structref)) (field (mut i16)) (field i8) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field i8))))
    (type (;28;) (array f64))
    (type (;29;) (sub (struct (field (mut f32)) (field (mut i8)) (field (mut i8)))))
    (type (;30;) (sub (func (param f32 i32 i64))))
    (type (;31;) (array i16))
    (type (;32;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut f64)) (field i64) (field (mut externref)) (field i16) (field f32) (field i8) (field (mut i8)) (field i64) (field i32) (field f32) (field i16) (field (mut i8)) (field i31ref) (field i16) (field i8) (field (mut i16)))))
    (type (;33;) (sub (func)))
    (type (;34;) (sub (array i8)))
    (type (;35;) (array (mut i8)))
    (type (;36;) (func (param i64) (result f64)))
    (type (;37;) (array (mut i8)))
    (type (;38;) (sub (struct (field f64) (field i8) (field i8) (field (mut f32)) (field i16) (field i8) (field (mut i8)) (field i32) (field (mut i8)) (field (mut i8)) (field i64) (field i16) (field (mut (ref null 37))) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field f64) (field (mut i32)))))
    (type (;39;) (sub (func (param anyref))))
    (type (;40;) (array i16))
    (type (;41;) (sub (array (mut i16))))
    (type (;42;) (sub (struct (field i16) (field i16))))
    (type (;43;) (sub (func)))
    (type (;44;) (array (mut i16)))
    (type (;45;) (func (result f64 i32)))
    (type (;46;) (sub (array i32)))
    (type (;47;) (func))
    (type (;48;) (func (param (ref null 38) f64) (result (ref null 22) f64)))
    (type (;49;) (sub (array i16)))
    (type (;50;) (array i8))
    (type (;51;) (struct (field i16) (field i16) (field i8) (field i16) (field (mut f32)) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field f32) (field (mut i8)) (field i16) (field i16) (field arrayref) (field i8)))
    (type (;52;) (sub (struct (field (mut i16)) (field (mut i64)) (field (mut i8)) (field i16) (field i8) (field i8) (field (mut i16)) (field i32) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field i16) (field (mut i8)) (field i64) (field (mut f64)) (field (mut i8)) (field f64) (field (mut i8)) (field (mut i8)))))
    (type (;53;) (sub final 30 (func (param f32 i32 i64))))
    (type (;54;) (sub (array (mut i8))))
  )
  (rec
    (type (;55;) (sub (struct (field i8) (field (mut i16)) (field f32) (field i16) (field i16) (field i16) (field i8) (field i8) (field (mut i16)) (field i64) (field (mut i8)) (field i16) (field i8) (field nullref) (field (mut i16)))))
    (type (;56;) (func (param f32)))
    (type (;57;) (sub (array i64)))
    (type (;58;) (array (mut i64)))
    (type (;59;) (func (param i64 i32) (result f64)))
  )
  (table (;0;) i64 1833 (ref null 30) ref.null 53)
  (tag (;0;) (type 33))
  (global (;0;) f32 f32.const 0x1.b65012p+76 (;=129367100000000000000000;))
  (global (;1;) i32 i32.const 2012000963 i32.const -1432522159 i32.const 777515969 i32.const 1015862730 i32.const 951868929 i32.const 1146528999 i32.const 1255903665 i32.add i32.sub i32.sub i32.mul i32.mul i32.sub i32.const -1387516632 i32.const 1055103721 i32.add i32.add)
  (global (;2;) (mut i64) i64.const 0)
  (global (;3;) (mut i32) i32.const 0)
  (global (;4;) (mut i32) i32.const 0)
  (export "" (global 1))
  (export "F" (table 0))
  (export " " (func 0))
  (export "<$" (func 0))
  (start 1)
  (func (;0;) (type 59) (param i64 i32) (result f64)
    (local i64 i32)
    call 1
    block (type 33) ;; label = @1
      f32.const 0x1.fffffep-120 (;=0.0000000000000000000000000000000000015046327;)
      i32.const 127
      table.size 0
      local.tee 2
      block (type 53) (param f32 i32 i64) ;; label = @2
        global.get 2
        i64.xor
        global.set 2
        global.get 3
        i32.xor
        global.set 3
        i32.reinterpret_f32
        global.get 4
        i32.xor
        global.set 4
      end
    end
    f64.const 0x1p-1021 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403;)
  )
  (func (;1;) (type 43)
    (local i32)
    nop
    br 0
    block (type 33) ;; label = @1
      global.get 0
      i32.trunc_f32_s
      br 0 (;@1;)
      i32.popcnt
      table.size 0
      block (type 17) (param i64) ;; label = @2
        table.size 0
        block (type 26) ;; label = @3
          table.size 0
          block (type 47) ;; label = @4
          end
          f64.const 0x1.e457bb0cda4fap+190 (;=2969012099189909800000000000000000000000000000000000000000;)
          i32.trunc_f64_u
          if (type 43) ;; label = @4
            call 1
            call 1
            local.get 0
            i32.popcnt
            block ;; label = @5
              global.get 1
              block (type 15) (param i32) ;; label = @6
                array.new_default 25
                i32.const -175492237
                try_table (type 33) ;; label = @7
                end
                br_if 6
                ref.null 46
                data.drop 0
                ref.as_non_null
                try_table (type 45) (result f64 i32) (catch_all 4 (;@2;)) (catch 0 1 (;@5;)) (catch_all 5 (;@1;)) (catch_all 4 (;@2;)) (catch_all 2 (;@4;)) (catch 0 6) (catch 0 5 (;@1;)) (catch 0 4 (;@2;)) (catch 0 6) ;; label = @7
                  local.get 0
                  f64.convert_i32_u
                  i32.trunc_f64_u
                  local.set 0
                  global.get 1
                  array.new_fixed 34 0
                  try_table (type 45) (result f64 i32) (catch 0 2 (;@5;)) (catch_all 4 (;@3;)) (catch 0 3 (;@4;)) (catch_all 3 (;@4;)) (catch_all 1 (;@6;)) ;; label = @8
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
  )
  (func (;2;) (type 17) (param i64))
  (data (;0;) "9")
)
