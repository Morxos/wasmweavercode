(module
  (rec
    (type (;0;) (struct (field f64) (field i16) (field i8) (field anyref) (field (mut i8)) (field i8)))
    (type (;1;) (struct))
    (type (;2;) (func (param f32 f32 f32 i64 nullexternref f32)))
    (type (;3;) (struct (field (mut i8)) (field i32) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field i64) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field i16) (field f64) (field (mut i8)) (field f64)))
    (type (;4;) (array (mut f32)))
    (type (;5;) (sub (array i16)))
    (type (;6;) (sub (array (mut i8))))
    (type (;7;) (struct (field (mut f32)) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i64)) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field f32)))
    (type (;8;) (func))
    (type (;9;) (sub (array i8)))
    (type (;10;) (array i16))
    (type (;11;) (struct (field (mut structref)) (field (mut f32)) (field i16) (field i8) (field (mut i31ref)) (field (mut i16))))
    (type (;12;) (array (mut i8)))
    (type (;13;) (func (param funcref externref)))
    (type (;14;) (array (mut i16)))
    (type (;15;) (sub (array i16)))
    (type (;16;) (sub (func (param i64 i64) (result i32 nullref i32))))
    (type (;17;) (func (result f64 f32)))
    (type (;18;) (struct (field (mut i8)) (field (mut f64)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field f64) (field i16) (field (mut i16)) (field (mut i8)) (field f32)))
    (type (;19;) (sub 6 (array (mut i8))))
    (type (;20;) (sub (array (mut i32))))
    (type (;21;) (sub (func (result i32))))
    (type (;22;) (sub (array i16)))
    (type (;23;) (sub (array i16)))
    (type (;24;) (sub (struct (field (mut i8)) (field i8) (field i16) (field (ref null 3)) (field externref) (field i8) (field i8) (field i8) (field i8) (field (mut f64)) (field i8) (field i16) (field (mut anyref)) (field (mut f32)) (field i8))))
    (type (;25;) (struct (field i64) (field (mut structref)) (field (mut i32)) (field f64) (field i16) (field (mut i8)) (field i64) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16))))
    (type (;26;) (sub (array (mut i16))))
    (type (;27;) (sub (func (result i64 i64))))
    (type (;28;) (func))
    (type (;29;) (array f64))
    (type (;30;) (sub (struct (field (mut structref)) (field i16) (field (mut i16)) (field i8) (field i16) (field (mut f32)) (field i8) (field i8) (field i64) (field i8))))
    (type (;31;) (sub (func (param i32) (result f32))))
    (type (;32;) (func (param f32)))
    (type (;33;) (struct (field i16) (field (mut i16)) (field i8) (field i8) (field i32) (field nullexternref) (field (mut i16)) (field i16) (field i16) (field i16) (field (mut f64)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i16)))
    (type (;34;) (sub (array (mut funcref))))
    (type (;35;) (sub (func (param i64))))
    (type (;36;) (sub (struct (field (mut f32)) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field i32) (field i8) (field i8))))
    (type (;37;) (sub (func)))
    (type (;38;) (sub (struct (field (mut i8)) (field (mut i16)))))
    (type (;39;) (sub (struct (field structref) (field i32) (field i8) (field (mut i8)) (field (mut i16)))))
    (type (;40;) (sub (struct (field (mut i16)) (field i8) (field (mut i8)) (field (mut i32)) (field (mut i16)) (field i8) (field (mut i8)) (field i32) (field i8) (field (mut i64)) (field externref) (field (mut i16)) (field structref))))
    (type (;41;) (func))
    (type (;42;) (sub (func (result i64 (ref null 38)))))
    (type (;43;) (func (param f32) (result f32)))
    (type (;44;) (sub (array (mut i16))))
    (type (;45;) (sub (array (mut f64))))
    (type (;46;) (func (param i32)))
    (type (;47;) (struct (field i16) (field i8) (field i16) (field (mut i16)) (field (mut i32)) (field i16) (field (mut i16)) (field i16) (field funcref) (field (mut i16)) (field i16) (field i16) (field (mut i64)) (field i8) (field i32) (field (mut i64)) (field i16)))
    (type (;48;) (array anyref))
    (type (;49;) (sub (array (mut i32))))
    (type (;50;) (array (mut i8)))
    (type (;51;) (sub (func (param i32 f32 externref) (result i32))))
    (type (;52;) (sub (func (param eqref arrayref i64 nullexternref) (result f64))))
    (type (;53;) (sub (func (result externref))))
    (type (;54;) (sub (func)))
    (type (;55;) (sub (func (param f32) (result i64 i32 f32))))
    (type (;56;) (sub (array (mut f64))))
    (type (;57;) (sub (array (mut i8))))
    (type (;58;) (sub (struct (field i8))))
    (type (;59;) (sub (array (mut i8))))
    (type (;60;) (struct (field i32) (field i8) (field i16) (field (mut i64)) (field (mut i16)) (field i8) (field i8) (field i16) (field (mut i16)) (field f32) (field (mut (ref null 30))) (field (mut i32)) (field (mut i32)) (field (mut i8)) (field i16) (field (mut f64)) (field (mut i16)) (field (mut f64)) (field i16) (field i16)))
    (type (;61;) (sub (struct)))
    (type (;62;) (struct (field (ref null 20)) (field (mut i8)) (field (mut i8)) (field i32) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field f32) (field (mut i8)) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut f64))))
    (type (;63;) (sub (array i16)))
  )
  (table (;0;) 16 anyref ref.null 1)
  (memory (;0;) 1 4375)
  (tag (;0;) (type 35) (param i64))
  (tag (;1;) (type 32) (param f32))
  (tag (;2;) (type 37))
  (export "" (memory 0))
  (export "1" (table 0))
  (elem (;0;) declare anyref)
  (elem (;1;) (table 0) (i32.const 0) (ref null 26))
  (elem (;2;) (table 0) (i32.const 3) (ref null 4))
  (elem (;3;) (table 0) (i32.const 0) eqref)
  (elem (;4;) declare (ref null 32) (ref.null 32) (ref.null 32))
  (elem (;5;) declare eqref (ref.null 61) (ref.null 56) (ref.null 63) (ref.null 7))
  (func (;0;) (type 16) (param i64 i64) (result i32 nullref i32)
    block (type 8) ;; label = @1
      f32.const 0x1.2e0004p-93 (;=0.00000000000000000000000000011911802;)
      i64.trunc_sat_f32_s
      local.set 0
      table.size 0
      if (type 17) (result f64 f32) ;; label = @2
        struct.new 61
        extern.convert_any
        table.size 0
        unreachable
        unreachable
      else
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
