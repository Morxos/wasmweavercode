(module
  (rec
    (type (;0;) (sub (func (param i31ref))))
    (type (;1;) (sub (func (param i32) (result i64))))
    (type (;2;) (sub (array (mut funcref))))
    (type (;3;) (sub (func)))
    (type (;4;) (sub (func (param i32) (result i64 f64))))
    (type (;5;) (func (result nullfuncref)))
    (type (;6;) (array (mut i16)))
    (type (;7;) (array i16))
    (type (;8;) (sub (struct (field i16) (field i64) (field (mut i8)) (field i8) (field i8) (field (mut i16)) (field (mut f64)) (field f32))))
    (type (;9;) (func (param i31ref f64 i64) (result f32)))
    (type (;10;) (array i64))
    (type (;11;) (array (mut i16)))
    (type (;12;) (sub (struct (field (mut f64)) (field i8) (field i8) (field i16) (field i64) (field f64) (field (mut i32)) (field (mut i8)) (field (ref null 8)) (field (mut i8)) (field (ref null 6)) (field (mut i32)) (field i16) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field i16) (field i16))))
    (type (;13;) (array i16))
    (type (;14;) (func (result nullfuncref)))
    (type (;15;) (struct (field i8) (field (mut i32)) (field i16) (field (mut i32)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field i8) (field i32)))
    (type (;16;) (struct (field (mut i16)) (field f64) (field i16) (field (mut f32)) (field (mut i32)) (field i8) (field (mut i8)) (field i16) (field i16) (field i16) (field i8) (field i16) (field (mut i8)) (field i8)))
    (type (;17;) (sub (array (mut i8))))
    (type (;18;) (struct (field i16) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field (mut i32)) (field i8) (field i16)))
    (type (;19;) (struct (field i16) (field (mut i16)) (field (mut f64)) (field f64) (field i16) (field (mut i8)) (field i8) (field (mut i16)) (field (mut externref)) (field i8) (field (mut i16)) (field i8) (field (mut i16))))
    (type (;20;) (sub (func (result nullref))))
    (type (;21;) (sub (struct (field (mut i31ref)) (field (mut f64)) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field i8) (field (mut i16)) (field i64) (field i32) (field (mut i64)) (field (mut i8)) (field i16) (field i32) (field i8) (field i64) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field f32))))
    (type (;22;) (sub (struct (field (mut f32)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)))))
    (type (;23;) (sub (struct (field (mut i64)) (field (mut i16)) (field i16) (field i32) (field i16) (field (mut i16)) (field i64))))
    (type (;24;) (func (param f64 f32 i32 i32 f64 f64 f32 nullfuncref) (result f32 i64 f32 f32)))
    (type (;25;) (struct (field eqref) (field i8) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field nullfuncref) (field i16) (field (mut i16)) (field i16) (field i8) (field i64) (field i16) (field i8) (field i16) (field (mut i16)) (field (mut i64)) (field i8) (field i8)))
    (type (;26;) (func (result f32 nullfuncref)))
    (type (;27;) (func (param i64 i32) (result f64 (ref null 8) f32 f32)))
    (type (;28;) (sub (struct (field (mut i16)) (field i64) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field i8) (field (mut i16)) (field f32) (field i64) (field (mut i8)) (field (mut i16)))))
    (type (;29;) (sub (func (param f64))))
    (type (;30;) (sub (array i8)))
    (type (;31;) (struct (field (mut i8)) (field (mut i32)) (field i16) (field (mut nullfuncref))))
    (type (;32;) (sub (func (param f64 funcref i32) (result f64))))
    (type (;33;) (sub (array i16)))
    (type (;34;) (sub (array i16)))
    (type (;35;) (sub (struct (field i16) (field f64) (field (mut i8)) (field i16) (field (mut f32)) (field i8) (field i16) (field i64) (field i16))))
    (type (;36;) (func (result i32)))
    (type (;37;) (sub (func (result i32))))
    (type (;38;) (sub (func)))
    (type (;39;) (array (mut i16)))
    (type (;40;) (struct (field (mut i16)) (field (mut i16)) (field i8) (field i16) (field (mut i32))))
    (type (;41;) (sub (func (param f64) (result i32 f32))))
    (type (;42;) (array i8))
    (type (;43;) (array (mut f32)))
    (type (;44;) (sub (array anyref)))
    (type (;45;) (sub (struct (field (mut i16)) (field (mut i16)) (field i8) (field (mut f64)) (field (mut i32)) (field i16) (field i8))))
    (type (;46;) (array i8))
    (type (;47;) (sub (struct (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field i8) (field i8) (field i8))))
    (type (;48;) (func (param f32)))
    (type (;49;) (sub (func (param externref) (result exnref))))
  )
  (import "" "" (global (;0;) (mut i32)))
  (table (;0;) i64 0 (ref null 49) ref.null 49)
  (tag (;0;) (type 3))
  (global (;1;) (mut i32) i32.const 0)
  (global (;2;) (mut i32) i32.const 0)
  (global (;3;) (mut i64) i64.const 0)
  (export "lP" (global 0))
  (export "" (table 0))
  (export "x" (func 0))
  (elem (;0;) declare anyref)
  (elem (;1;) exnref (ref.null exn))
  (elem (;2;) declare exnref)
  (elem (;3;) eqref)
  (func (;0;) (type 9) (param i31ref f64 i64) (result f32)
    loop (type 38) ;; label = @1
      try_table (type 3) (catch_all 0 (;@1;)) (catch 0 0 (;@1;)) (catch 0 0 (;@1;)) ;; label = @2
        ref.null 2
        loop (result f64) ;; label = @3
          try_table (result f64) (catch_all 1 (;@2;)) ;; label = @4
            block (type 36) (result i32) ;; label = @5
              f32.const -0x1.c231eep+93 (;=-17416077000000000000000000000;)
              i32.reinterpret_f32
              global.get 1
              i32.xor
              global.set 1
              i32.const -1456840550
            end
            global.get 2
            i32.xor
            global.set 2
            f64.const 0x1.79b8c1f4455adp+785 (;=300246931385739040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
          end
        end
        i64.reinterpret_f64
        global.get 3
        i64.xor
        global.set 3
        drop
      end
    end
    f32.const 0x1.376c58p-16 (;=0.00001856227;)
  )
  (func (;1;) (type 49) (param externref) (result exnref)
    (local i64 i64 i64)
    block (type 36) (result i32) ;; label = @1
      i32.const -509908343
      local.get 2
      table.size 0
      i64.eq
      if (result f32) ;; label = @2
        ref.null func
        struct.new_default 47
        try_table (type 37) (result i32) (catch_all_ref 2) (catch_ref 0 2) (catch_ref 0 2) (catch_all_ref 2) (catch_all_ref 2) (catch_ref 0 2) (catch_ref 0 2) (catch_ref 0 2) ;; label = @3
          struct.new_default 12
          throw 0
          ref.cast (ref 12)
          block ;; label = @4
            struct.new_default 45
            i64.const 8925497140234427373
            i64.ctz
            loop ;; label = @5
              block (type 36) (result i32) ;; label = @6
                local.get 3
                block ;; label = @7
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      else
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
