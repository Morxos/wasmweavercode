(module
  (rec
    (type (;0;) (func))
    (type (;1;) (sub (struct (field i16) (field i8) (field eqref) (field i64) (field i16) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut f32)) (field (mut f32)) (field (mut f32)) (field i8) (field (mut i16)) (field (mut i16)))))
    (type (;2;) (sub (array i64)))
    (type (;3;) (array (mut i16)))
    (type (;4;) (func (result i31ref f32)))
    (type (;5;) (array i8))
    (type (;6;) (sub (array (mut i8))))
    (type (;7;) (sub 6 (array (mut i8))))
    (type (;8;) (struct (field i64) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field f32) (field (mut f64)) (field (mut i64)) (field (mut f64)) (field i8) (field i8)))
    (type (;9;) (sub (func (param f64) (result f64))))
    (type (;10;) (sub (struct (field (mut i16)) (field (mut f32)) (field i16) (field (ref null 1)) (field (mut i8)) (field (mut i32)) (field (mut i16)) (field (mut i64)) (field (mut i32)) (field (mut i8)) (field i16) (field i16) (field i16) (field (mut i8)))))
    (type (;11;) (func (param f32)))
    (type (;12;) (sub (array (mut i16))))
    (type (;13;) (struct (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field (mut i64)) (field i16) (field i8) (field (mut f64)) (field nullexternref) (field i8) (field (mut i16))))
    (type (;14;) (sub (array i16)))
    (type (;15;) (func (param structref)))
    (type (;16;) (func))
    (type (;17;) (sub (array (mut i8))))
    (type (;18;) (array i8))
    (type (;19;) (func (result i32 arrayref i64)))
    (type (;20;) (array (mut f64)))
    (type (;21;) (sub (array i8)))
    (type (;22;) (array i16))
    (type (;23;) (sub (array i8)))
    (type (;24;) (sub (array (mut i16))))
  )
  (rec
    (type (;25;) (sub (func (result i32))))
    (type (;26;) (func))
    (type (;27;) (sub (func)))
    (type (;28;) (array i8))
    (type (;29;) (array i8))
    (type (;30;) (sub (func (param nullref) (result i64 i64 i64 f32 f64 i32))))
    (type (;31;) (sub (struct (field (mut i16)) (field (mut i8)) (field f64) (field (mut f64)) (field f32) (field (mut i8)) (field (mut i8)) (field i16) (field i8) (field i8) (field i16) (field i8))))
    (type (;32;) (array (mut i16)))
    (type (;33;) (sub (struct (field (ref null 1)) (field (mut f32)) (field (mut i16)) (field nullfuncref) (field (mut i8)) (field (mut i8)) (field i32) (field i8) (field i16) (field (mut i8)) (field f32))))
    (type (;34;) (sub (array (mut i8))))
    (type (;35;) (struct (field i8) (field (mut i8)) (field i16) (field i64) (field (mut i64)) (field i16) (field arrayref) (field i8) (field i16) (field i16) (field i16) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i16) (field f32) (field i8) (field i8)))
    (type (;36;) (func (param f64 (ref null 26) f32 f32 i64 i32 i32) (result i31ref)))
    (type (;37;) (func (result i64 (ref null 29))))
    (type (;38;) (sub (func (param f32 f64) (result (ref null 8)))))
    (type (;39;) (array i16))
  )
  (rec
    (type (;40;) (array (mut i8)))
    (type (;41;) (sub (func)))
    (type (;42;) (sub (struct)))
    (type (;43;) (sub 2 (array i64)))
    (type (;44;) (sub (array (mut i16))))
    (type (;45;) (sub 38 (func (param f32 f64) (result (ref null 8)))))
    (type (;46;) (sub (array i16)))
    (type (;47;) (func))
    (type (;48;) (array f32))
    (type (;49;) (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (ref null 4)) (field (mut i16)) (field i8) (field i8) (field i8) (field i8) (field f64) (field (mut i8)) (field i16) (field (mut i64))))
    (type (;50;) (sub (func)))
    (type (;51;) (array i16))
    (type (;52;) (sub (struct (field (mut i8)) (field (mut i8)) (field (mut i32)) (field i8) (field i16) (field (mut i32)))))
    (type (;53;) (sub (array (mut i8))))
  )
  (table (;0;) 0 293455 (ref null 45))
  (global (;0;) (mut i64) i64.const 0)
  (global (;1;) (mut i32) i32.const 0)
  (global (;2;) (mut i32) i32.const 0)
  (export "\u{a}" (table 0))
  (export "" (table 0))
  (export "\u{1b}\u{6}.\u{315}\u{e}\u{c}" (global 0))
  (export "\u{10}}" (global 1))
  (export "4" (global 2))
  (elem (;0;) declare eqref (ref.null 13) (ref.null 42) (ref.null 42))
  (elem (;1;) declare nullfuncref (ref.null nofunc) (ref.null nofunc) (ref.null nofunc) (ref.null nofunc))
  (elem (;2;) declare externref)
  (elem (;3;) declare (ref null 47) (ref.null nofunc) (ref.null nofunc))
  (func (;0;) (type 16)
    (local externref)
    data.drop 0
    f64.const -0x1.b7936f2320cd4p+125 (;=-73037076489798250000000000000000000000;)
    f64.abs
    i32.trunc_f64_u
    f32.const 0x1.766c1ep+75 (;=55254984000000000000000;)
    i64.const 8191
    f32.convert_i64_s
    f32.min
    ref.null 16
    local.get 0
    ref.cast nullexternref
    try_table (result i32) (catch_all 0) ;; label = @1
      f32.const 0x1.90b7cp-125 (;=0.000000000000000000000000000000000000036800116;)
      f64.const -0x1.e106c041a19e6p-637 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000032947440540478746;)
      loop (type 41) ;; label = @2
        local.get 0
        ref.cast (ref extern)
        br 2
        struct.new_default 35
        drop
        drop
      end
      i64.reinterpret_f64
      global.get 0
      i64.xor
      global.set 0
      i32.reinterpret_f32
      global.get 1
      i32.xor
      global.set 1
      i32.const -16
    end
    global.get 2
    i32.xor
    global.set 2
    drop
    drop
    i32.reinterpret_f32
    global.get 1
    i32.xor
    global.set 1
    global.get 2
    i32.xor
    global.set 2
  )
  (data (;0;) "\0aN")
)
