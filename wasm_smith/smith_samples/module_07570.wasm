(module
  (rec
    (type (;0;) (sub (struct (field i8) (field (mut i8)) (field i8) (field i8) (field (mut i32)))))
    (type (;1;) (func (param f32) (result i32 i32)))
    (type (;2;) (struct (field (mut i16)) (field (mut i31ref)) (field i32) (field (mut f32)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field structref) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut f64)) (field (mut nullexternref)) (field i8)))
    (type (;3;) (array (mut i16)))
    (type (;4;) (sub (struct (field i8) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field i64) (field (mut f64)) (field i16))))
    (type (;5;) (sub (func (param f32) (result nullfuncref i32 i31ref))))
    (type (;6;) (array f64))
    (type (;7;) (func (param (ref null 0) i64 f64)))
    (type (;8;) (sub (struct (field i8) (field i64) (field (mut f64)) (field (mut f64)) (field (mut i8)) (field f32) (field (mut i8)) (field (mut i16)) (field f32) (field f64) (field i32) (field i16) (field (mut i16)) (field i16) (field i8) (field i16) (field i8) (field (mut f32)) (field i8))))
    (type (;9;) (struct (field (mut f32)) (field f64) (field i8) (field i16) (field i8) (field (mut funcref)) (field i16) (field f32)))
    (type (;10;) (struct (field i8) (field (mut i8)) (field f64) (field i64) (field (mut i8)) (field i16) (field i8) (field f32) (field i64) (field (mut i16)) (field f32) (field i16) (field i16) (field i32) (field i64) (field i8) (field (mut i64)) (field (mut i16)) (field (mut i8))))
    (type (;11;) (struct (field i16) (field i8) (field i8) (field (mut f64)) (field i16) (field (mut i32)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8) (field i32) (field (mut i32)) (field (mut i16))))
    (type (;12;) (sub (func (param nullfuncref f64 (ref null 3)) (result exnref f32 i64))))
    (type (;13;) (sub (array (mut f64))))
    (type (;14;) (func))
    (type (;15;) (sub (array (mut i8))))
    (type (;16;) (sub (array (mut i8))))
    (type (;17;) (sub (array i32)))
    (type (;18;) (sub (func (param funcref f32 f32))))
    (type (;19;) (sub (array i8)))
    (type (;20;) (array (mut i8)))
    (type (;21;) (sub (array (mut i8))))
    (type (;22;) (sub (struct (field (mut i16)) (field (mut i8)))))
    (type (;23;) (sub (func (param i32 i64))))
    (type (;24;) (func (param f32)))
    (type (;25;) (array (mut i8)))
    (type (;26;) (func (param f64) (result f64)))
    (type (;27;) (func (param i32 f32 structref) (result f64)))
    (type (;28;) (array (mut f32)))
    (type (;29;) (struct (field (mut i8)) (field (mut i8)) (field i32) (field i16) (field (mut i8)) (field (mut i8)) (field i16) (field f64) (field i8) (field (mut i8)) (field f64) (field f32) (field (mut i64))))
    (type (;30;) (func (param f64) (result (ref null 29))))
    (type (;31;) (array (mut (ref null 11))))
    (type (;32;) (struct (field f64) (field i16) (field i8) (field i8) (field (mut i16)) (field i8) (field i16) (field i16) (field i16) (field f64) (field (mut i8)) (field (mut i8)) (field i8) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field i8)))
    (type (;33;) (sub (struct (field (mut i8)) (field (mut f64)) (field i16) (field i16) (field (mut i64)) (field i16) (field (mut i64)))))
    (type (;34;) (sub (array (mut i16))))
    (type (;35;) (sub (struct (field f64) (field (mut f64)) (field i16) (field f64) (field (mut i8)) (field anyref) (field (mut i8)) (field (mut i16)) (field i8) (field i8))))
    (type (;36;) (sub (array i8)))
    (type (;37;) (array i8))
    (type (;38;) (sub (func (param f32 i64) (result f64 f64 i64))))
    (type (;39;) (sub (array (mut i32))))
    (type (;40;) (func (result f64 externref)))
    (type (;41;) (sub (array (mut i16))))
    (type (;42;) (array (mut f64)))
    (type (;43;) (sub (struct (field i16) (field (mut i64)) (field nullfuncref) (field i16) (field f64) (field (mut i16)) (field (mut i8)) (field i31ref) (field i8) (field (mut i16)) (field (mut i16)) (field (mut (ref null 26))) (field i16) (field (mut i8)) (field i16) (field f32))))
    (type (;44;) (array (mut f32)))
    (type (;45;) (struct (field (mut i64)) (field i8)))
    (type (;46;) (sub (func)))
  )
  (rec
    (type (;47;) (array (mut i16)))
    (type (;48;) (array (mut i16)))
    (type (;49;) (sub (array (mut i16))))
    (type (;50;) (array i16))
  )
  (table (;0;) 103 539798 (ref null 17))
  (memory (;0;) 0 46994 shared)
  (elem (;0;) (table 0) (i32.const 0) (ref null 17))
  (func (;0;) (type 7) (param (ref null 0) i64 f64)
    f64.const 0x1.6f240002p-1043 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001521622776;)
    local.set 2
    f64.const -nan:0xfffefffffffff (;=NaN;)
    i64.trunc_sat_f64_s
    f64.convert_i64_u
    i32.trunc_f64_u
    i32.popcnt
    f32.convert_i32_u
    i32.const -1185166045
    br_table 0 0
    f64.promote_f32
    i64.trunc_sat_f64_u
    i32.wrap_i64
    f64.load align=4
    i32.trunc_sat_f64_u
    i32.popcnt
    ref.i31
    try_table (type 14) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) ;; label = @1
      f64.const -nan:0xffffffffeffff (;=NaN;)
      f64.sqrt
      memory.size
      i32.load8_u
      f32.load align=1
      i64.trunc_f32_s
      f32.convert_i64_s
      array.new_fixed 44 0
      elem.drop 0
      loop ;; label = @2
        try_table (type 46) (catch_all 2) (catch_all 0 (;@2;)) (catch_all 2) (catch_all 0 (;@2;)) (catch_all 2) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 2) (catch_all 0 (;@2;)) ;; label = @3
        end
        f64.const 0x1.fffffffffffffp-1016 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028480945388892175;)
        f64.ceil
        table.size 0
        if (type 14) ;; label = @3
          try_table (type 14) (catch_all 2 (;@1;)) (catch_all 3) (catch_all 3) (catch_all 3) (catch_all 0 (;@3;)) (catch_all 2 (;@1;)) (catch_all 1 (;@2;)) ;; label = @4
            ref.null 45
            br 1 (;@3;)
            ref.cast (ref none)
            i31.get_s
            f64.convert_i32_s
            f32.demote_f64
            f32.ceil
            block (type 24) (param f32) ;; label = @5
              f64.promote_f32
              f32.const 0x1.p-136 (;=0.00000000000000000000000000000000000000001148;)
              loop (result i64) ;; label = @6
                i64.const -36028797018963968
                i32.const -1548640571
                i64.load8_u
                i64.rotl
                try_table (type 46) (catch_all 6) ;; label = @7
                  i32.const 94
                  unreachable
                end
              end
              unreachable
            end
          end
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 23) (param i32 i64))
)
