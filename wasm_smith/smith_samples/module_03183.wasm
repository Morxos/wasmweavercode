(module
  (rec
    (type (;0;) (array (mut eqref)))
    (type (;1;) (array (mut i8)))
    (type (;2;) (struct))
    (type (;3;) (sub (struct (field i32) (field (mut i8)) (field (mut i16)) (field i8) (field (mut f32)) (field (mut i32)) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field (mut i32)) (field i16))))
    (type (;4;) (sub (func (param f32 i32 i32 i32) (result f64 i32 exnref))))
    (type (;5;) (array f64))
    (type (;6;) (sub (func)))
    (type (;7;) (func (param i64 funcref f32) (result i32 i32)))
    (type (;8;) (struct (field i8) (field (mut i8))))
    (type (;9;) (sub (array (mut i8))))
    (type (;10;) (sub (array i8)))
    (type (;11;) (sub final 4 (func (param f32 i32 i32 i32) (result f64 i32 exnref))))
    (type (;12;) (sub (func)))
    (type (;13;) (func (param i32) (result f32 f64)))
    (type (;14;) (array (mut i8)))
    (type (;15;) (sub (array (mut i8))))
    (type (;16;) (func (param f64 f64) (result i64 i64 f64)))
    (type (;17;) (func (param i64 f32) (result f32 nullfuncref structref f32)))
    (type (;18;) (sub (func (result nullfuncref i64))))
    (type (;19;) (struct (field i16) (field (mut i16)) (field i16)))
    (type (;20;) (sub (array i8)))
    (type (;21;) (struct (field (mut i32)) (field (mut f64)) (field i8) (field i16) (field i16) (field i32)))
    (type (;22;) (sub (struct (field i8) (field (mut i16)) (field i16) (field i8) (field i8) (field (mut f32)) (field (mut anyref)) (field structref) (field (mut i16)) (field i8) (field i16))))
    (type (;23;) (sub (array i8)))
    (type (;24;) (struct (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i8))))
    (type (;25;) (struct (field (mut f64)) (field (mut i8)) (field (mut i31ref)) (field (mut i8)) (field (mut f64)) (field i32)))
    (type (;26;) (func (param externref f64 f32 f32) (result (ref null 3))))
    (type (;27;) (sub (func (param funcref anyref externref))))
    (type (;28;) (sub (struct (field f64) (field i16) (field i16) (field (mut i8)) (field f64) (field (mut i16)) (field f32) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field (mut f64)))))
    (type (;29;) (sub (array (mut i64))))
    (type (;30;) (sub (array (mut i16))))
    (type (;31;) (struct (field (mut i8)) (field i8) (field (mut f64)) (field f64)))
    (type (;32;) (sub (array i64)))
    (type (;33;) (struct (field i8) (field i16) (field (mut i16)) (field (mut i64)) (field i16) (field i8) (field i16) (field (mut i32)) (field (mut i16))))
    (type (;34;) (sub (func (param f32 f32) (result i32))))
    (type (;35;) (func))
    (type (;36;) (sub (struct (field i16) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field i16) (field i8))))
    (type (;37;) (sub (struct (field i16) (field i8) (field i8) (field i16) (field f64) (field (mut i16)))))
    (type (;38;) (func))
    (type (;39;) (sub (struct (field anyref) (field (mut i8)) (field (mut i16)))))
    (type (;40;) (func (param f32)))
    (type (;41;) (sub (func (param i64 f64) (result nullref f32))))
    (type (;42;) (sub (struct (field i16) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field i8) (field (mut i16)) (field (mut arrayref)) (field (mut i64)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field (mut f32)) (field (mut f32)) (field i16))))
    (type (;43;) (array (mut i8)))
    (type (;44;) (array i8))
    (type (;45;) (struct (field (mut i8)) (field f64) (field (mut i8)) (field (mut i64)) (field i16) (field (mut i8)) (field f64) (field i16) (field i16) (field (mut i32)) (field (mut f64)) (field (mut i64)) (field (mut i8)) (field i8) (field i16) (field i16) (field (mut i8)) (field eqref)))
    (type (;46;) (array (mut i8)))
    (type (;47;) (func (param f64)))
    (type (;48;) (array i32))
    (type (;49;) (sub (func (result f32))))
    (type (;50;) (sub (func (param i64) (result f32))))
    (type (;51;) (func (param arrayref) (result i32 structref)))
    (type (;52;) (sub 28 (struct (field f64) (field i16) (field i16) (field (mut i8)) (field f64) (field (mut i16)) (field f32) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field (mut f64)) (field (mut f32)) (field i16) (field i32) (field i16) (field (mut i8)))))
    (type (;53;) (sub (func (param i64 f32))))
    (type (;54;) (func (param f32 f32)))
    (type (;55;) (sub (array (mut i8))))
    (type (;56;) (array (mut f32)))
    (type (;57;) (sub (func (param f32) (result f32 i32 i64 eqref))))
    (type (;58;) (sub (array (mut i32))))
    (type (;59;) (func (param structref (ref null 18) (ref null 24)) (result f32 eqref f32)))
    (type (;60;) (func (param f32 i32)))
    (type (;61;) (sub (func (result i32 f32))))
    (type (;62;) (sub (func (result i32 f64 f32 f32 i64 f64 i64))))
    (type (;63;) (struct (field i16) (field (mut i8)) (field (mut i32)) (field i16) (field i16) (field i64) (field i16) (field (mut i64)) (field f64) (field i8) (field (mut f32))))
    (type (;64;) (array i8))
    (type (;65;) (sub (array (mut i8))))
    (type (;66;) (sub (func (result i32))))
    (type (;67;) (sub (array i8)))
    (type (;68;) (struct (field (mut i16)) (field i8) (field (mut i16))))
    (type (;69;) (sub (struct (field (mut i16)) (field i8) (field (mut i16)) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field i16))))
  )
  (import "" "" (global (;0;) (mut i64)))
  (import "" "" (tag (;0;) (type 54) (param f32 f32)))
  (import "\u{5d7}\u{4f62}h" "" (func (;0;) (type 16)))
  (tag (;1;) (type 12))
  (start 3)
  (func (;1;) (type 18) (result nullfuncref i64)
    struct.new_default 39
    call 1
    i32.const 1451299897
    i64.extend_i32_s
    try_table ;; label = @1
      try_table (type 35) (catch 1 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) ;; label = @2
        try_table (type 61) (result i32 f32) ;; label = @3
          global.get 0
          struct.new_default 42
          br 2 (;@1;)
          struct.get_s 42 12
          try_table (type 6) (catch 1 2 (;@1;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch 1 1 (;@2;)) ;; label = @4
            return_call 1
            f32.const 0x1.cd1408p+24 (;=30217224;)
            f32.sqrt
            block ;; label = @5
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
    end
    unreachable
  )
  (func (;2;) (type 54) (param f32 f32))
  (func (;3;) (type 35))
  (func (;4;) (type 53) (param i64 f32))
)
