(module
  (rec
    (type (;0;) (sub (func (param f32 i64 f32 f32 nullfuncref) (result f64))))
    (type (;1;) (sub (func (param i32))))
    (type (;2;) (struct (field i16) (field i8) (field (mut i8)) (field i16)))
    (type (;3;) (struct (field (mut i16)) (field (mut i8)) (field i8) (field f64) (field i16) (field (mut i8)) (field i16)))
    (type (;4;) (struct (field i8) (field i64) (field i8) (field (mut f64)) (field i16) (field f64) (field (mut i8)) (field i16) (field (mut eqref)) (field (mut i64)) (field i8) (field i8) (field (mut f64)) (field (mut i8)) (field i8) (field f32) (field (mut i16)) (field f32)))
    (type (;5;) (sub (struct (field i16) (field f32))))
    (type (;6;) (array (mut i32)))
    (type (;7;) (struct (field i16) (field f32) (field (mut eqref)) (field i16) (field (mut f64)) (field i8) (field (mut i8)) (field i8)))
    (type (;8;) (sub (array (mut i16))))
    (type (;9;) (sub (func (result (ref null 5) i64 i64))))
    (type (;10;) (array (mut i8)))
    (type (;11;) (struct (field (mut i8)) (field (mut i16)) (field i8) (field (mut nullref)) (field (mut i16)) (field i32) (field (mut (ref null 7))) (field (mut f64)) (field (mut i64)) (field i64) (field (mut i8)) (field i8) (field i8) (field (mut i8)) (field i8)))
    (type (;12;) (array i8))
    (type (;13;) (sub (array i16)))
    (type (;14;) (array (mut i8)))
    (type (;15;) (sub (func)))
    (type (;16;) (sub (func)))
    (type (;17;) (sub (func (param f64 i64 f64))))
    (type (;18;) (func (param i32 i64 i32 i64)))
    (type (;19;) (sub (func (param f32 f64 f64))))
    (type (;20;) (sub 13 (array i16)))
    (type (;21;) (sub (struct (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field f32) (field i32) (field i16) (field i8) (field (mut f64)) (field (mut i32)) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field i16))))
    (type (;22;) (struct (field f64) (field (mut i16)) (field i64) (field (mut i16)) (field i8) (field f64) (field (mut i8)) (field (mut i16)) (field i32) (field (mut i8)) (field i8) (field i16) (field i16) (field i16)))
    (type (;23;) (sub (struct (field (mut i8)) (field (mut i16)) (field f64) (field i16) (field i16) (field f64) (field i8) (field i16) (field i8) (field i32) (field (mut i16)) (field i32) (field i8) (field (mut f32)) (field i16) (field (mut i32)) (field i16) (field i8) (field (mut i8)))))
    (type (;24;) (sub (struct (field i8) (field (mut i64)) (field i8) (field (mut i8)) (field i8) (field i64) (field (mut i16)) (field (mut nullfuncref)) (field i16) (field i64) (field i16) (field (mut i8)) (field i8) (field i16) (field i16))))
    (type (;25;) (func (param i64 i32)))
    (type (;26;) (sub (array i16)))
    (type (;27;) (struct (field i8) (field (mut i16)) (field i8)))
    (type (;28;) (struct (field i16) (field i16) (field eqref)))
    (type (;29;) (func (result i64)))
    (type (;30;) (sub (struct (field (mut i16)) (field i16) (field (mut i16)) (field i64) (field (mut i8)) (field i8) (field i8) (field i16) (field (mut i8)))))
    (type (;31;) (struct (field (mut i32)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field i8) (field (mut i16)) (field i16)))
    (type (;32;) (sub (func (param i32 i32) (result structref eqref))))
    (type (;33;) (sub (array (mut f32))))
    (type (;34;) (struct (field (mut (ref null 28))) (field (mut i64)) (field (mut f64)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i32)) (field i16) (field i16)))
    (type (;35;) (struct (field (mut i16))))
    (type (;36;) (sub (struct (field i16) (field (mut i8)) (field i32) (field i16) (field i16) (field i32) (field i64) (field (mut f32)) (field (mut i32)) (field i16))))
    (type (;37;) (array i8))
    (type (;38;) (sub (func (param f64 i31ref) (result i64 i64))))
    (type (;39;) (sub (array i8)))
    (type (;40;) (array (mut i16)))
    (type (;41;) (sub (func)))
    (type (;42;) (func (result (ref null 18))))
    (type (;43;) (array f64))
  )
  (table (;0;) i64 656 603104 funcref ref.null 17)
  (global (;0;) anyref ref.null 35)
  (global (;1;) (mut i32) i32.const -959275973)
  (start 0)
  (elem (;0;) declare (ref null 0) (ref.null nofunc))
  (elem (;1;) declare arrayref (ref.null array) (ref.null 40))
  (func (;0;) (type 16)
    loop (type 41) ;; label = @1
      br 0 (;@1;)
      i32.const 2139095039
      f32.convert_i32_u
      f64.const 0x1.11e9fa9fef37ap-486 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005355454588413326;)
      block (type 9) (result (ref null 5) i64 i64) ;; label = @2
        i64.const 536870911
        f32.const 0x1.p-141 (;=0.000000000000000000000000000000000000000000359;)
        struct.new_default 23
        extern.convert_any
        return_call 0
        br 1 (;@1;)
        ref.test (ref extern)
        loop (type 16) ;; label = @3
          i64.const 6331381845445428568
          try_table (type 41) (catch_all 2 (;@1;)) (catch_all 3) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 2 (;@1;)) (catch_all 0 (;@3;)) ;; label = @4
            f32.const -0x1.fffffep+124 (;=-42535293000000000000000000000000000000;)
            i32.trunc_sat_f32_s
            i32.extend8_s
            global.get 1
            i32.or
            block (type 42) (result (ref null 18)) ;; label = @5
              f32.const 0x1.p-146 (;=0.000000000000000000000000000000000000000000011;)
              i32.trunc_f32_u
              global.get 0
              return_call 0
              ref.as_non_null
              br 2 (;@3;)
              br_on_null 1 (;@4;)
              f64.const 0x1.69d5243e75109p+958 (;=3443527493607548000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
              f64.neg
              i32.trunc_f64_s
              br_if 1 (;@4;)
              table.size 0
              br 2 (;@3;)
              i32.const -268435456
              f64.const -0x1.189f65d8567cp-630 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002460285371812131;)
              i64.trunc_f64_s
              f64.const 0x1.p-1039 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000169759663277;)
              i64.trunc_f64_s
              i64.extend16_s
              call 0
              block (type 16) ;; label = @6
                block (type 16) ;; label = @7
                  f32.const -nan:0x7ffdff (;=NaN;)
                  data.drop 0
                  i32.const -1261947708
                  global.get 0
                  call 0
                  extern.convert_any
                  ref.as_non_null
                  br 7
                  loop (type 9) (result (ref null 5) i64 i64) ;; label = @8
                    block (type 42) (result (ref null 18)) ;; label = @9
                      ref.null 9
                      return_call 0
                      table.size 0
                      f64.reinterpret_i64
                      return_call 0
                      data.drop 1
                      i32.trunc_sat_f64_u
                      f32.const 0x1.a5b0ccp-117 (;=0.000000000000000000000000000000000009913899;)
                      f64.promote_f32
                      f64.sqrt
                      data.drop 0
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
  )
  (data (;0;) "")
  (data (;1;) "")
)
