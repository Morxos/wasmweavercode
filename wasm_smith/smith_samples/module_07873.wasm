(module
  (rec
    (type (;0;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut f64)))))
    (type (;1;) (sub (array (mut i8))))
    (type (;2;) (sub (array (mut structref))))
    (type (;3;) (sub (struct (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field f32) (field i8) (field i16) (field exnref) (field (mut nullref)) (field i16) (field nullfuncref) (field i16) (field (mut i8)) (field (mut f64)) (field i16) (field i8) (field (mut i16)) (field (mut i16)) (field i8))))
    (type (;4;) (array funcref))
    (type (;5;) (struct (field i8) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field i8) (field (mut externref)) (field (mut f32)) (field i16) (field (mut f32)) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut nullref)) (field i16)))
    (type (;6;) (sub (struct (field i64) (field (mut i16)) (field i16) (field i16) (field (mut i64)))))
    (type (;7;) (sub (array (mut i16))))
    (type (;8;) (sub (func (result f32))))
    (type (;9;) (sub (struct (field i8) (field i64) (field (mut i16)) (field i32) (field (mut i8)) (field i8) (field (mut i8)))))
    (type (;10;) (array (mut i16)))
    (type (;11;) (struct (field i16) (field (mut f64)) (field i16) (field f64) (field f32) (field i16) (field externref) (field i16) (field (mut i16)) (field i8) (field exnref) (field (mut i16))))
    (type (;12;) (array f64))
    (type (;13;) (sub (array i16)))
    (type (;14;) (struct (field (mut i16))))
    (type (;15;) (sub (func (result f64 f64 nullref f64 externref i64 nullref f64 f64))))
    (type (;16;) (sub (struct (field i8) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field i16) (field (mut i16)) (field i32) (field i8) (field (mut f64)) (field (mut i8)) (field f32) (field f64) (field (mut i16)) (field i16))))
    (type (;17;) (sub (struct (field (mut i8)) (field i16))))
    (type (;18;) (func (result i32 structref)))
    (type (;19;) (sub (func (result f32))))
    (type (;20;) (sub (func (result i32 f32 nullref f32))))
    (type (;21;) (array (mut i16)))
    (type (;22;) (sub (struct (field i8) (field i16) (field (mut i8)) (field i32) (field (mut i16)) (field i16) (field i16) (field i32) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field (mut i16)) (field (mut f32)))))
    (type (;23;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i8)) (field f32) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field i32) (field (mut i8)) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field i8))))
    (type (;24;) (sub (struct (field (mut f32)) (field (mut i16)) (field (mut i16)) (field f32) (field (mut f32)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut f64)) (field i8) (field structref) (field i16))))
    (type (;25;) (func))
    (type (;26;) (array (mut i16)))
    (type (;27;) (sub (struct (field i16) (field i64) (field (mut i16)) (field f32) (field (mut i8)) (field (mut nullfuncref)) (field f64) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)))))
    (type (;28;) (sub (func (param f64 (ref null 9)))))
    (type (;29;) (func (param i31ref (ref null 2)) (result i64 f64 f64)))
    (type (;30;) (struct (field i8) (field i32)))
    (type (;31;) (sub (array i8)))
    (type (;32;) (sub (func (param f64 i32 i32 i32))))
    (type (;33;) (func))
    (type (;34;) (sub (array i8)))
    (type (;35;) (func (param i64 i32 f64 nullref)))
    (type (;36;) (struct (field i16) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field i16) (field f64) (field (mut i8)) (field i8)))
    (type (;37;) (sub 13 (array i16)))
    (type (;38;) (sub (struct (field i16))))
    (type (;39;) (sub final 27 (struct (field i16) (field i64) (field (mut i16)) (field f32) (field (mut i8)) (field (mut nullfuncref)) (field f64) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut externref)))))
    (type (;40;) (sub (array i16)))
    (type (;41;) (struct (field i16) (field i8) (field f64) (field (mut i16))))
    (type (;42;) (array (mut i32)))
    (type (;43;) (struct (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut i32)) (field (mut i31ref)) (field (mut i16)) (field (mut i16)) (field (mut eqref))))
    (type (;44;) (sub (array i8)))
    (type (;45;) (array (mut i8)))
    (type (;46;) (array (mut (ref null 8))))
  )
  (tag (;0;) (type 33))
  (global (;0;) (mut f32) f32.const 0x1.1d309p-47 (;=0.000000000000007915604;))
  (global (;1;) (mut i32) i32.const 1852599106)
  (export "" (global 1))
  (export "1" (global 0))
  (elem (;0;) declare exnref)
  (elem (;1;) declare (ref null 38))
  (elem (;2;) (ref null 35) (ref.null 35))
  (func (;0;) (type 20) (result i32 f32 nullref f32)
    i64.const 4590814269428166055
    block (result (ref null 3)) ;; label = @1
      global.get 1
      if (type 15) (result f64 f64 nullref f64 externref i64 nullref f64 f64) ;; label = @2
        ref.null 25
        struct.new_default 41
        struct.new_default 9
        block (type 33) ;; label = @3
          ref.null exn
          f64.const -nan:0xfffffdfffffff (;=NaN;)
          i32.const 0
          f64.const 0x1.p-1028 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034766779039175;)
          struct.new_default 22
          call 0
          f32.const 0x1.ffffp-133 (;=0.00000000000000000000000000000000000000018367;)
          f32.eq
          elem.drop 0
          ref.i31
          call 0
          i64.trunc_sat_f32_s
          i64.clz
          i32.wrap_i64
          call 0
          i64.trunc_sat_f32_s
          try_table (type 18) (result i32 structref) (catch_all 0 (;@3;)) (catch 0 0 (;@3;)) (catch 0 0 (;@3;)) (catch 0 0 (;@3;)) (catch 0 0 (;@3;)) (catch 0 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) ;; label = @4
            ref.null 3
            f64.const 0x1p-1015 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002848094538889218;)
            i64.const -4510296500434584016
            i64.extend8_s
            i64.eqz
            i32.extend16_s
            struct.new_default 24
            call 0
            elem.drop 1
            f32.trunc
            ref.null eq
            global.get 0
            i32.trunc_f32_s
            if (type 20) (result i32 f32 nullref f32) ;; label = @5
              loop (type 19) (result f32) ;; label = @6
                return_call 0
                f32.neg
                ref.null extern
                ref.test (ref extern)
                i64.const 16777216
                nop
                f64.const -0x1p+993 (;=-83711609936427130000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                i64.reinterpret_f64
                try_table (type 18) (result i32 structref) (catch 0 3 (;@3;)) (catch_all 0 (;@6;)) (catch_all 0 (;@6;)) (catch 0 0 (;@6;)) (catch_all 3 (;@3;)) (catch_all 3 (;@3;)) (catch 0 0 (;@6;)) (catch 0 3 (;@3;)) (catch_all 0 (;@6;)) ;; label = @7
                  call 0
                  i64.trunc_sat_f32_s
                  i64.extend8_s
                  f64.reinterpret_i64
                  call 0
                  f32.const -0x1.0a686ap+122 (;=-5533075000000000000000000000000000000;)
                  unreachable
                end
                unreachable
              end
              unreachable
            else
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      else
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
