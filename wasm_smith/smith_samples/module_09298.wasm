(module
  (rec
    (type (;0;) (sub (array (mut i8))))
    (type (;1;) (sub (struct (field f64) (field i64) (field (mut f64)) (field (mut i16)) (field i32) (field i32) (field i16) (field i16) (field i16) (field (mut f64)) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i16)))))
    (type (;2;) (sub (func (param externref) (result i64 i64))))
    (type (;3;) (struct (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i32) (field i8) (field (mut i8))))
    (type (;4;) (sub (func (result f32 eqref i32))))
    (type (;5;) (sub (func (param f64))))
    (type (;6;) (func (param structref f64 f32 nullref f64 f64)))
    (type (;7;) (sub (array externref)))
    (type (;8;) (sub (struct (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field externref) (field nullref))))
    (type (;9;) (sub (func (param i64) (result f32 nullfuncref))))
    (type (;10;) (sub (array i16)))
    (type (;11;) (sub (struct (field f64) (field (mut i8)) (field i16) (field i16) (field i16) (field i32) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i8) (field i8))))
    (type (;12;) (array i8))
    (type (;13;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (ref null 7)) (field (ref null 11)) (field (mut eqref)))))
    (type (;14;) (func (param anyref f32)))
    (type (;15;) (sub (struct (field (mut i8)) (field (mut i8)) (field (mut i16)) (field f32) (field (mut i8)) (field (mut i16)))))
    (type (;16;) (sub (func)))
    (type (;17;) (sub (func (param i64 f32 funcref))))
    (type (;18;) (func (param i31ref i64)))
    (type (;19;) (func (param f64 i64)))
    (type (;20;) (array i8))
    (type (;21;) (sub (array (mut i16))))
    (type (;22;) (array i32))
    (type (;23;) (func (param i64) (result f32 i32 (ref null 21) f32 i64)))
    (type (;24;) (sub (array (mut i8))))
    (type (;25;) (sub (array (mut f64))))
    (type (;26;) (sub (array (mut i16))))
    (type (;27;) (sub (func (param anyref i64 i64 f32 eqref f32 nullref f64) (result i32))))
    (type (;28;) (array i8))
    (type (;29;) (sub (struct (field i8) (field i8) (field i64) (field i8) (field i16))))
    (type (;30;) (sub (struct (field (mut i8)))))
    (type (;31;) (sub (array i31ref)))
    (type (;32;) (sub (struct (field (mut i8)) (field i8) (field (mut i32)) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field i8) (field (mut i64)) (field f32) (field (mut i32)) (field i16))))
    (type (;33;) (sub (func)))
    (type (;34;) (sub (struct (field (mut i16)) (field i8))))
    (type (;35;) (sub (func)))
    (type (;36;) (sub (array (mut i32))))
    (type (;37;) (array i16))
    (type (;38;) (struct (field (mut i16)) (field (mut i32)) (field arrayref) (field (mut (ref null 2))) (field (mut i16)) (field i8) (field (mut i32))))
    (type (;39;) (sub (array i32)))
    (type (;40;) (sub (struct (field i8) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut f64)) (field (ref null 28)) (field (ref null 28)) (field i8) (field (mut i16)) (field (mut f32)) (field (mut i8)))))
    (type (;41;) (sub (struct (field (mut i8)) (field f64) (field i8) (field (mut i8)) (field nullfuncref) (field f64) (field (mut f64)) (field i8))))
  )
  (memory (;0;) i64 1234)
  (global (;0;) (mut i64) i64.const -5270385446411385819)
  (global (;1;) nullfuncref ref.null nofunc)
  (export "f" (global 1))
  (export "" (memory 0))
  (export "Z\u{1f}%" (memory 0))
  (start 3)
  (func (;0;) (type 18) (param i31ref i64)
    global.get 0
    f64.const 0x1.fffffffcp-1044 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001060997895;)
    f32.const 0x1.e4a0bap-113 (;=0.00000000000000000000000000000000018229673;)
    f64.promote_f32
    f64.ge
    i32.eqz
    array.new_fixed 12 0
    block (type 16) ;; label = @1
    end
    return_call 3
    f32.const -0x1.fffffep+124 (;=-42535293000000000000000000000000000000;)
    i64.trunc_sat_f32_u
    i64.const 7999906293515129313
    i64.and
    f32.convert_i64_s
    loop (type 4) (result f32 eqref i32) ;; label = @1
      try_table (result f32) (catch_all 1) (catch_all 0 (;@1;)) (catch_all 1) (catch_all 1) (catch_all 0 (;@1;)) ;; label = @2
        block (result f32) ;; label = @3
          br 3
          global.get 0
          i64.clz
          i32.load16_s offset=7411841948351736621 align=1
          i64.const -4398046511105
          i32.load8_s offset=29905254
          i32.lt_s
          call 3
          f64.convert_i32_s
          f64.neg
          f64.const -0x1.dc9a8867b10bep+536 (;=-418788810148915400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
          f32.const 0x1.30bc38p+33 (;=10225218000;)
          i32.trunc_f32_s
          i64.extend_i32_s
          return_call 2
          i32.wrap_i64
          block (type 33) ;; label = @4
            f32.const 0x1.p-130 (;=0.000000000000000000000000000000000000000734684;)
            global.get 1
            memory.size
            i64.ctz
            i64.load offset=30293398 align=1
            local.tee 1
            f32.convert_i64_s
            f32.sqrt
            f32.floor
            i64.trunc_sat_f32_u
            try_table (result f64) (catch_all 4) (catch_all 0 (;@4;)) (catch_all 4) (catch_all 4) (catch_all 0 (;@4;)) (catch_all 4) (catch_all 3 (;@1;)) (catch_all 4) (catch_all 4) ;; label = @5
              ref.null 9
              br_on_null 1 (;@4;)
              i32.const 1880877198
              f32.reinterpret_i32
              i32.reinterpret_f32
              i32.popcnt
              memory.size
              return_call 2
              i32.load16_u offset=73788741
              i32.or
              f64.convert_i32_u
              struct.new_default 41
              br 5
              ref.cast (ref 41)
              block (type 35) ;; label = @6
                nop
                ref.null 28
                loop (type 35) ;; label = @7
                  f32.const 0x1.f8p-144 (;=0.000000000000000000000000000000000000000000088;)
                  global.get 1
                  ref.is_null
                  array.new_default 39
                  ref.as_non_null
                  try_table (type 4) (result f32 eqref i32) (catch_all 6 (;@1;)) (catch_all 3 (;@4;)) ;; label = @8
                    struct.new_default 34
                    ref.as_non_null
                    br 8
                    block (type 33) ;; label = @9
                      call 2
                      f64.const 0x1.347fffp-1048 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000399557904;)
                      i64.trunc_sat_f64_u
                      i64.ctz
                      i32.load8_s offset=51610856
                      nop
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 5) (param f64))
  (func (;2;) (type 35))
  (func (;3;) (type 33))
)
