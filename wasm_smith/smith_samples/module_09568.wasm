(module
  (rec
    (type (;0;) (struct (field (mut i16)) (field (mut i8)) (field i8) (field (mut eqref)) (field (mut i16)) (field anyref)))
    (type (;1;) (sub (func (result i32))))
    (type (;2;) (sub (array (mut i8))))
    (type (;3;) (sub (array i8)))
    (type (;4;) (sub (struct (field (mut i16)))))
    (type (;5;) (sub (array i31ref)))
    (type (;6;) (func (param externref i32 f32)))
    (type (;7;) (sub (array (mut i16))))
    (type (;8;) (array (mut i8)))
    (type (;9;) (sub 3 (array i8)))
    (type (;10;) (sub (func (param i64))))
    (type (;11;) (struct (field i16) (field (mut f32)) (field (mut f64)) (field (mut i8)) (field i8)))
    (type (;12;) (sub (array (mut f64))))
    (type (;13;) (func (param f32 f64)))
    (type (;14;) (array i8))
    (type (;15;) (sub final 3 (array i8)))
    (type (;16;) (sub (array (mut i16))))
    (type (;17;) (func (result i64 f64 f64)))
    (type (;18;) (sub (struct (field i8) (field f32) (field (mut i64)) (field (mut i8)) (field i8) (field (mut i8)) (field i8) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field i16) (field (mut i64)) (field i16) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i64)) (field (mut i8)))))
    (type (;19;) (sub (func (param f64 f32 f32))))
    (type (;20;) (sub (func (param f32 i32 f64 f64))))
    (type (;21;) (array f64))
    (type (;22;) (func))
    (type (;23;) (array i16))
    (type (;24;) (sub (array f64)))
    (type (;25;) (sub (array f64)))
    (type (;26;) (sub (func)))
    (type (;27;) (array i32))
    (type (;28;) (array (mut i8)))
    (type (;29;) (array (mut i64)))
    (type (;30;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut f32)) (field i16))))
    (type (;31;) (struct (field i8) (field i8) (field i16) (field (mut i64)) (field i16) (field i8) (field i16) (field i8) (field (mut i8))))
    (type (;32;) (sub (func (result f64))))
    (type (;33;) (sub (array (mut i16))))
    (type (;34;) (func (param f32 i64) (result i32 i64)))
    (type (;35;) (func (param f64 i64)))
    (type (;36;) (sub (func)))
    (type (;37;) (sub (func (result i64 anyref))))
    (type (;38;) (func (param i64) (result i32)))
    (type (;39;) (sub 1 (func (result i32))))
    (type (;40;) (sub (struct (field (mut externref)) (field i8) (field (mut i16)) (field i8) (field (mut f32)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i64) (field i16) (field (mut (ref null 31))) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut f64)) (field i8))))
    (type (;41;) (sub (struct (field (mut f64)) (field (mut i8)) (field i8) (field i8) (field (mut i8)) (field (mut i64)) (field (mut i16)))))
    (type (;42;) (array i16))
    (type (;43;) (array i16))
    (type (;44;) (array (mut i8)))
    (type (;45;) (sub (struct (field (mut i8)) (field i8))))
    (type (;46;) (struct (field i32) (field (mut i8))))
    (type (;47;) (sub (array (mut i64))))
    (type (;48;) (sub (func (result f64))))
    (type (;49;) (sub (func (param i32))))
    (type (;50;) (func (param structref f32 (ref null 34))))
    (type (;51;) (array i64))
    (type (;52;) (array i8))
    (type (;53;) (array i64))
    (type (;54;) (sub (func (param i64) (result i32))))
    (type (;55;) (sub (array (mut i8))))
    (type (;56;) (func))
    (type (;57;) (sub (func (param f32 f32))))
    (type (;58;) (struct (field i16) (field (mut f64))))
    (type (;59;) (array i8))
    (type (;60;) (func (param f64)))
    (type (;61;) (func (result f32)))
    (type (;62;) (array (mut i8)))
    (type (;63;) (array (mut i16)))
    (type (;64;) (func (result exnref)))
    (type (;65;) (sub (func (param i32) (result i64 f64 f32 i32))))
    (type (;66;) (array (mut i8)))
    (type (;67;) (func (param (ref null 47))))
    (type (;68;) (struct (field i8) (field (mut i16)) (field f32) (field i64) (field eqref) (field i8) (field (mut i16)) (field i8) (field (mut i16)) (field (mut f64)) (field i8) (field (mut i64)) (field i16) (field anyref) (field f32)))
    (type (;69;) (sub (struct (field (mut f32)) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut i16)))))
    (type (;70;) (array (mut i8)))
    (type (;71;) (struct (field i16) (field (mut i8))))
    (type (;72;) (array i8))
    (type (;73;) (array (mut i64)))
    (type (;74;) (func))
    (type (;75;) (func (result f32)))
    (type (;76;) (sub (struct (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut i64)))))
    (type (;77;) (sub (func (param f64) (result f32 (ref null 7) i32))))
  )
  (tag (;0;) (type 57) (param f32 f32))
  (export "" (func 0))
  (export "8" (func 0))
  (start 0)
  (elem (;0;) (ref null 55))
  (func (;0;) (type 26)
    (local i64 i32)
    return
    return_call 0
    f32.const 0x1.2a33e6p-49 (;=0.000000000000002069197;)
    f32.abs
    loop (result f64) ;; label = @1
      br 0 (;@1;)
      f32.const 0x1.53d932p+93 (;=13147249000000000000000000000;)
      f64.const -0x1.3490ed9623ed6p+413 (;=-25497434860523960000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
      call 0
      i32.trunc_f64_u
      array.new_fixed 16 0
      br 0 (;@1;)
      struct.new_default 68
      call 0
      ref.cast (ref none)
      ref.test (ref none)
      f32.reinterpret_i32
      i32.trunc_sat_f32_s
      if (type 64) (result exnref) ;; label = @2
        return_call 0
        f64.const 0x1.f8db9d576fd19p+213 (;=25960810162885128000000000000000000000000000000000000000000000000;)
        f32.demote_f64
        i64.trunc_f32_u
        i64.eqz
        array.new_default 14
        ref.test (ref 14)
        br_if 2
        block ;; label = @3
          i32.const 16
          array.new_default 63
          struct.new_default 18
          block (type 56) ;; label = @4
          end
          return_call 0
          ref.test (ref none)
          i64.extend_i32_s
          i32.const -1044976974
          i32.ctz
          f32.const -nan:0x77ffff (;=NaN;)
          i64.trunc_sat_f32_u
          block (type 56) ;; label = @4
            try_table (type 74) (catch_all 0 (;@4;)) ;; label = @5
            end
            elem.drop 0
            return_call 0
            return_call 0
          end
          i64.clz
          f32.convert_i64_s
          elem.drop 0
          i64.trunc_f32_u
          loop (type 1) (result i32) ;; label = @4
            br 0 (;@4;)
            struct.new_default 69
            i64.const -3755309770999809564
            call 0
            unreachable
            unreachable
          end
          unreachable
        end
        unreachable
      else
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
