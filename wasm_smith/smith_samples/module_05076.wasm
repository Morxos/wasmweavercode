(module
  (rec
    (type (;0;) (func (result f64)))
    (type (;1;) (sub (array structref)))
    (type (;2;) (sub (func (result i64 i64))))
    (type (;3;) (sub (array nullfuncref)))
    (type (;4;) (array i16))
    (type (;5;) (sub (func (result f32 f64 i64))))
    (type (;6;) (array exnref))
    (type (;7;) (array f32))
    (type (;8;) (struct (field (mut i32)) (field i8) (field i16) (field (mut f32)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field (mut f64)) (field (mut i8)) (field (mut i64)) (field f32)))
    (type (;9;) (struct (field (mut arrayref)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field f32) (field (mut i8))))
    (type (;10;) (func))
    (type (;11;) (func))
    (type (;12;) (func (result i64)))
    (type (;13;) (sub (func)))
    (type (;14;) (struct (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field i8) (field (mut i8)) (field f64) (field i8) (field i32) (field (mut i64)) (field i32) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i8))))
    (type (;15;) (array i16))
    (type (;16;) (sub (func (param f32 i32))))
    (type (;17;) (sub (array i8)))
    (type (;18;) (array (ref null 11)))
    (type (;19;) (struct (field (mut i16)) (field (mut i8)) (field (mut i64)) (field (mut i8)) (field (mut nullfuncref)) (field (mut i8)) (field i16) (field f64) (field nullfuncref) (field (mut i64)) (field f32) (field (mut i16)) (field i8) (field i8) (field i16) (field (mut i32)) (field (mut i16)) (field (mut i16)) (field (mut i8))))
    (type (;20;) (func))
    (type (;21;) (sub (func (result f32))))
    (type (;22;) (struct (field i8) (field (mut i64)) (field i8) (field (mut f64)) (field (mut i8)) (field f32) (field i8) (field (mut i32)) (field i16) (field (mut f64)) (field i16) (field i8)))
    (type (;23;) (sub (array i16)))
    (type (;24;) (array i16))
    (type (;25;) (sub (struct (field i8))))
    (type (;26;) (sub (array (mut i16))))
    (type (;27;) (array i8))
    (type (;28;) (struct (field funcref) (field i16) (field f32) (field i8) (field i32) (field (mut anyref)) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field i8) (field arrayref) (field (ref null 19))))
    (type (;29;) (sub (struct)))
    (type (;30;) (sub (array i16)))
    (type (;31;) (sub (array (mut i8))))
    (type (;32;) (sub (func (param arrayref i32 f64))))
    (type (;33;) (sub (func (param i32 i32 f32))))
    (type (;34;) (struct (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i32)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field f64) (field i8) (field i16)))
    (type (;35;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i16)))))
    (type (;36;) (func (result i32 i32)))
    (type (;37;) (sub (array i16)))
    (type (;38;) (sub (struct (field f64) (field (mut i16)) (field i16) (field i8) (field f32) (field i64) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field i64) (field i16) (field i32) (field (mut i8)) (field (mut i64)) (field (mut f32)) (field (mut f64)))))
    (type (;39;) (array (mut i32)))
    (type (;40;) (func (param i64 (ref null 27) i64 f32 f32 i32) (result f32 eqref)))
    (type (;41;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i32)) (field f64) (field (mut f64)) (field i32) (field i16) (field (ref null 35)) (field (mut i32)) (field nullref) (field (mut i8)) (field i16) (field arrayref) (field i16) (field f32) (field i16) (field i16) (field i16))))
    (type (;42;) (sub (func (param f64 f64 i32) (result f32 (ref null 32)))))
    (type (;43;) (sub (struct (field (mut anyref)) (field i8) (field (mut i16)) (field i16) (field i8) (field i8) (field f32) (field i16) (field f64) (field (mut i16)) (field (mut i8)))))
    (type (;44;) (func (param i32 f32) (result f64)))
    (type (;45;) (sub (func (param i32 f32 f64 i64 i32) (result i32))))
    (type (;46;) (sub (struct (field (mut i64)) (field i64) (field i16))))
    (type (;47;) (sub (struct (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field (mut (ref null 32))))))
    (type (;48;) (sub (array (ref null 10))))
    (type (;49;) (sub (struct (field i16) (field (mut i8)) (field (mut f64)))))
    (type (;50;) (sub (array (mut f32))))
  )
  (rec
    (type (;51;) (sub (func)))
    (type (;52;) (sub (array (mut i8))))
    (type (;53;) (func (param f64) (result f64)))
    (type (;54;) (sub (func (param f64))))
    (type (;55;) (func (param i64 nullref (ref null 40)) (result f32)))
    (type (;56;) (sub (func)))
    (type (;57;) (sub 31 (array (mut i8))))
    (type (;58;) (struct (field (mut i8)) (field i8)))
    (type (;59;) (array i8))
    (type (;60;) (sub (struct (field (mut i16)) (field i16) (field i32) (field (mut i32)) (field (mut i16)) (field (mut anyref)) (field i8) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field i16))))
    (type (;61;) (func))
    (type (;62;) (struct (field (mut i16)) (field (mut i16)) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field (mut f32)) (field i8) (field i8) (field i16)))
    (type (;63;) (sub (func (param f32))))
    (type (;64;) (sub (array i8)))
  )
  (import "\u{12}\u{4}" "" (func (;0;) (type 63)))
  (import "\u{f}" "" (tag (;0;) (type 11)))
  (import "G" "" (tag (;1;) (type 63) (param f32)))
  (memory (;0;) 2737 3979)
  (elem (;0;) declare anyref (ref.null 31) (ref.null 18))
  (func (;1;) (type 36) (result i32 i32)
    (local i32)
    nop
    f32.const -0x1p+1 (;=-2;)
    i64.trunc_f32_u
    i64.extend32_s
    struct.new 29
    struct.new_default 60
    loop (type 13) ;; label = @1
      try_table (type 5) (result f32 f64 i64) (catch 0 0 (;@1;)) ;; label = @2
        try_table (type 21) (result f32) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) ;; label = @3
          call 1
          i32.rem_s
          i32.load offset=68066121 align=2
          local.set 0
          i64.const 860417232549653468
          br 2 (;@1;)
          i64.ctz
          ref.null 10
          nop
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
