(module
  (rec
    (type (;0;) (array (mut i8)))
    (type (;1;) (func (param f32)))
    (type (;2;) (sub (func (result i32))))
    (type (;3;) (struct (field i8) (field i32) (field (mut i8)) (field i16) (field (mut i64)) (field i8) (field (mut eqref)) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8))))
    (type (;4;) (sub 2 (func (result i32))))
    (type (;5;) (array (mut i64)))
    (type (;6;) (sub (array i64)))
    (type (;7;) (sub (array (mut i16))))
    (type (;8;) (struct (field (mut i16)) (field i32) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut f32)) (field (mut f32)) (field (mut i8)) (field i8)))
    (type (;9;) (sub (array f64)))
    (type (;10;) (sub (array i8)))
    (type (;11;) (array f64))
    (type (;12;) (func (result i64)))
    (type (;13;) (struct))
    (type (;14;) (sub (func)))
    (type (;15;) (sub (struct (field (mut i8)) (field i16) (field (mut (ref null 8))) (field (mut arrayref)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i32)) (field i8) (field (mut i64)) (field (mut i64)) (field exnref) (field (mut i8)) (field i8) (field (mut i16)) (field nullfuncref) (field i16) (field (mut anyref)))))
    (type (;16;) (struct (field (mut i32)) (field i8) (field i64) (field (mut i16)) (field (mut anyref))))
    (type (;17;) (struct (field (mut i16)) (field i16) (field (ref null 14)) (field i8) (field (mut i16)) (field i16) (field (mut f32))))
    (type (;18;) (struct (field (mut i64)) (field (mut i8)) (field i8) (field (mut i64)) (field i64) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut f32)) (field i8) (field (mut i16)) (field i8) (field i64) (field i8) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i8)))
    (type (;19;) (sub (func (param f32 f32))))
    (type (;20;) (array (mut i16)))
    (type (;21;) (func (param i31ref i32 i32 f32)))
    (type (;22;) (array (mut i8)))
    (type (;23;) (sub (array (mut i8))))
    (type (;24;) (sub (array (mut i8))))
    (type (;25;) (sub (struct (field i8) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field i8) (field (mut i16)))))
    (type (;26;) (func))
    (type (;27;) (sub (array eqref)))
    (type (;28;) (struct (field i8) (field i31ref) (field i16) (field (mut i16)) (field f64)))
    (type (;29;) (struct (field (mut i8)) (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut f32)) (field i16) (field (mut i64)) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field i16) (field i8) (field i16) (field (mut i8)) (field i16) (field (mut i16))))
    (type (;30;) (sub (func)))
    (type (;31;) (sub (array (mut i8))))
    (type (;32;) (sub (array (mut i8))))
    (type (;33;) (sub (func)))
    (type (;34;) (func))
    (type (;35;) (sub (func (result i64 f64))))
    (type (;36;) (sub (struct (field i32) (field i8))))
    (type (;37;) (sub (func)))
    (type (;38;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i16)))))
    (type (;39;) (struct (field (mut i8)) (field (mut i16)) (field (mut i8))))
    (type (;40;) (func))
    (type (;41;) (array (mut i8)))
    (type (;42;) (struct (field (mut i64))))
    (type (;43;) (array i16))
    (type (;44;) (sub (func (result f32 i64))))
    (type (;45;) (sub (array i8)))
    (type (;46;) (sub (func)))
    (type (;47;) (sub (struct (field i8) (field (mut i8)) (field (mut i16)) (field i64) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field i16))))
  )
  (table (;0;) 1975 (ref null 14) ref.null nofunc)
  (memory (;0;) 0)
  (tag (;0;) (type 14))
  (func (;0;) (type 4) (result i32)
    (local f32)
    return_call 1
    if (type 35) (result i64 f64) ;; label = @1
      ref.null 22
      i32.const 327360797
      f64.convert_i32_s
      i64.const 6172233823740016020
      call 0
      i32.load align=2
      array.new 5
      loop (type 30) ;; label = @2
        local.get 0
        i64.trunc_sat_f32_s
        struct.new 42
        ref.as_non_null
        f64.const -0x1.6c508855cb062p-261 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000003840676419222194;)
        call 0
        f32.load align=2
        f32.floor
        f64.const -nan:0xfffe000000000 (;=NaN;)
        f64.trunc
        f64.floor
        i32.const -32768
        br_table 0 (;@2;) 0 (;@2;)
        nop
        i64.reinterpret_f64
        f32.convert_i64_u
        return_call 1
        i64.extend_i32_u
        i64.const -4973549645655241105
        i64.rotl
        local.get 0
        return_call 0
        f32.convert_i32_s
        f64.promote_f32
        ref.null 0
        loop (type 14) ;; label = @3
          i32.const -2048
          i32.clz
          br 0 (;@3;)
          call 0
          i64.extend_i32_s
          f64.const 0x1.fffffffffep-1035 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005432309224866;)
          f64.trunc
          struct.new_default 25
          struct.new 13
          br_on_null 0 (;@3;)
          memory.size
          memory.size
          f32.convert_i32_s
          br 1 (;@2;)
          f32.const 0x1.2a3a62p+82 (;=5633369000000000000000000;)
          memory.size
          block (type 2) (result i32) ;; label = @4
            br 2 (;@2;)
            i32.const 8388608
            f32.convert_i32_s
            i64.trunc_sat_f32_u
            i64.ctz
            try_table (type 14) (catch_all 1 (;@3;)) (catch 0 1 (;@3;)) (catch_all 1 (;@3;)) (catch 0 2 (;@2;)) (catch 0 1 (;@3;)) (catch_all 2 (;@2;)) (catch 0 2 (;@2;)) (catch 0 1 (;@3;)) ;; label = @5
              loop (type 44) (result f32 i64) ;; label = @6
                struct.new 13
                table.size 0
                f32.load offset=656319256
                i64.trunc_sat_f32_s
                f64.const 0x1.p-1030 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008691694759794;)
                table.size 0
                f64.load offset=2993847434 align=2
                br 1 (;@5;)
                memory.size
                i32.extend16_s
                table.get 0
                try_table (type 26) (catch_all 0 (;@6;)) (catch_all 1 (;@5;)) (catch 0 4 (;@2;)) (catch 0 0 (;@6;)) (catch_all 4 (;@2;)) (catch_all 0 (;@6;)) (catch 0 4 (;@2;)) (catch_all 1 (;@5;)) ;; label = @7
                  local.get 0
                  local.tee 0
                  i64.const -8684409110316092665
                  f64.const 0x1.ffffep-1055 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000518065;)
                  return_call 1
                  f64.convert_i32_s
                  f64.le
                  struct.new_default 36
                  try_table (catch_all 4 (;@3;)) (catch 0 4 (;@3;)) (catch 0 1 (;@6;)) (catch_all 0 (;@7;)) (catch 0 5 (;@2;)) (catch_all 2 (;@5;)) (catch_all 4 (;@3;)) (catch 0 4 (;@3;)) (catch_all 2 (;@5;)) (catch_all 5 (;@2;)) ;; label = @8
                    try_table (type 44) (result f32 i64) (catch_all 1 (;@7;)) (catch 0 0 (;@8;)) (catch 0 1 (;@7;)) (catch_all 1 (;@7;)) ;; label = @9
                      i32.const 127
                      f64.convert_i32_s
                      f64.ceil
                      struct.new 13
                      loop (type 2) (result i32) ;; label = @10
                        ref.null array
                        table.size 0
                        ref.null extern
                        ref.null 1
                        throw 0
                        ref.test (ref null 1)
                        unreachable
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    else
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 2) (result i32)
    unreachable
  )
)
