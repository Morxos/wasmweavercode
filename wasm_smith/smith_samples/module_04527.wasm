(module
  (rec
    (type (;0;) (array i16))
    (type (;1;) (sub (struct (field i8) (field (mut f64)) (field (mut i8)) (field i64) (field i16) (field i16) (field i16) (field f64) (field (mut i8)) (field f32) (field i8) (field i8) (field (mut i8)) (field i8) (field i16) (field (mut i16)) (field i16) (field (mut i64)))))
    (type (;2;) (sub (func)))
    (type (;3;) (sub (func (param f64 i32 i32 i32 f32))))
    (type (;4;) (func (param structref) (result i32)))
    (type (;5;) (sub (func (result f32 i64))))
    (type (;6;) (func (param i64)))
    (type (;7;) (array i16))
    (type (;8;) (struct (field (mut i8))))
    (type (;9;) (struct (field (mut i8)) (field (mut f32)) (field i16) (field (mut structref)) (field i16) (field (mut i32)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field (mut i8)) (field i32) (field (mut i31ref)) (field (mut i8)) (field (mut i16)) (field anyref)))
    (type (;10;) (func (result f64)))
    (type (;11;) (struct (field i64) (field (mut i8)) (field i16) (field i16) (field i16)))
    (type (;12;) (func (result i64 i64 i64)))
    (type (;13;) (sub (array (mut i8))))
    (type (;14;) (sub (struct (field f32) (field (mut i32)))))
    (type (;15;) (sub (func (param f64 i64 (ref null 10)) (result externref i32))))
    (type (;16;) (array (mut i16)))
    (type (;17;) (sub (func)))
    (type (;18;) (func (param (ref null 14) f64)))
    (type (;19;) (sub (func (param arrayref i32 i64 i32 f64 (ref null 13)) (result anyref f64))))
    (type (;20;) (struct (field (mut i8)) (field f64) (field (mut i8)) (field (mut f64)) (field (mut f64)) (field (mut i64)) (field i8) (field (mut f32)) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i64)) (field (mut i8))))
    (type (;21;) (func))
    (type (;22;) (sub (array i8)))
    (type (;23;) (sub (array i64)))
    (type (;24;) (sub 15 (func (param f64 i64 funcref) (result externref i32))))
    (type (;25;) (func (result f32)))
    (type (;26;) (sub (func)))
    (type (;27;) (sub (struct (field i31ref) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut funcref)) (field (mut i16)) (field (mut i8)) (field (mut (ref null 18))) (field (mut i64)) (field i8) (field (mut i8)))))
    (type (;28;) (sub (struct (field i64) (field (mut i8)) (field (mut i16)) (field i8) (field i32) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field (ref null 3)))))
    (type (;29;) (array (mut i16)))
    (type (;30;) (sub (func (param f64) (result f32))))
    (type (;31;) (sub (func)))
    (type (;32;) (sub (struct (field (mut i16)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i32) (field i16) (field (mut i64)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut anyref)))))
    (type (;33;) (sub (func (result f32))))
    (type (;34;) (struct (field i16) (field (mut i16)) (field (mut f32))))
    (type (;35;) (array f32))
    (type (;36;) (func))
    (type (;37;) (sub (func (result f64 i64 i64 (ref null 34) i32 (ref null 23) f64))))
    (type (;38;) (sub (struct (field i8) (field i16) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field f64) (field (mut i16)) (field i8) (field (mut i8)) (field i32) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field i16) (field (mut f64)) (field i8) (field i8) (field (mut i64)) (field i16))))
    (type (;39;) (sub (array i8)))
    (type (;40;) (struct (field (mut i8)) (field i16)))
    (type (;41;) (sub (func (result f64))))
    (type (;42;) (array (mut i8)))
    (type (;43;) (sub final 27 (struct (field nullref) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut funcref)) (field (mut i16)) (field (mut i8)) (field (mut (ref null 18))) (field (mut i64)) (field i8) (field (mut i8)) (field i16) (field (ref null 3)) (field i32))))
    (type (;44;) (func))
    (type (;45;) (struct (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field i8) (field i16) (field i16) (field i8) (field (mut i8)) (field i8) (field i8) (field i64) (field i8) (field (mut i32)) (field i32) (field (mut i16))))
    (type (;46;) (sub (func (result i64))))
    (type (;47;) (sub (array (mut i16))))
    (type (;48;) (sub (struct (field i16) (field (mut i32)) (field (mut i16)) (field externref) (field i16) (field (mut i8)) (field i8) (field i8) (field (mut f32)) (field (ref null 18)))))
    (type (;49;) (sub (array i32)))
    (type (;50;) (sub (func (result i64 i64 f32))))
    (type (;51;) (sub (func)))
    (type (;52;) (struct (field (mut i8)) (field f32) (field (mut i64)) (field i16) (field i16) (field i32) (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field i8) (field i8) (field (mut i8)) (field (mut i64)) (field (mut f32))))
    (type (;53;) (array (mut i16)))
    (type (;54;) (struct (field i32) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field i8) (field f64) (field (mut i8)) (field i64) (field (mut i16)) (field (mut i8)) (field f32) (field i16) (field (mut i8)) (field i8) (field i8) (field i16)))
    (type (;55;) (struct (field i8) (field i64)))
    (type (;56;) (array arrayref))
    (type (;57;) (array eqref))
  )
  (rec
    (type (;58;) (array i8))
    (type (;59;) (array (mut i8)))
    (type (;60;) (func (param i64) (result f64)))
    (type (;61;) (sub (func)))
    (type (;62;) (func))
    (type (;63;) (sub (func)))
    (type (;64;) (array (mut f32)))
    (type (;65;) (sub (array i32)))
    (type (;66;) (sub (struct (field i16) (field (mut i8)) (field (mut i16)))))
  )
  (table (;0;) i64 35 (ref null 3) ref.null 3)
  (func (;0;) (type 60) (param i64) (result f64)
    block (type 2) ;; label = @1
      loop (result f32) ;; label = @2
        i64.const -8388608
        f64.reinterpret_i64
        loop (type 37) (result f64 i64 i64 (ref null 34) i32 (ref null 23) f64) ;; label = @3
          i64.const 6595742743802703997
          local.set 0
          table.size 0
          call 0
          f64.trunc
          loop (type 12) (result i64 i64 i64) ;; label = @4
            f64.const 0x1.fffffcp-1052 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041445225;)
            f64.sqrt
            block (type 44) ;; label = @5
              f64.const -0x1.b50720ebdb81p-548 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018528127072600175;)
              i64.trunc_sat_f64_u
              return_call 0
              loop (type 2) ;; label = @6
                nop
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
