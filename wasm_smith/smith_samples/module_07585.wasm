(module
  (rec
    (type (;0;) (func (result exnref)))
    (type (;1;) (sub (func)))
    (type (;2;) (sub (array (mut i16))))
    (type (;3;) (struct (field (mut f64))))
    (type (;4;) (struct (field arrayref) (field (mut i8)) (field i8) (field i8) (field i16) (field i8) (field (mut f32)) (field i8) (field (mut i8))))
    (type (;5;) (sub (struct (field (mut i16)) (field i16) (field (mut nullref)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field (mut i16)))))
    (type (;6;) (array (mut i16)))
    (type (;7;) (array i32))
    (type (;8;) (array (mut i8)))
    (type (;9;) (func (param i64 i32 externref (ref null 4) i64 i31ref f64) (result f32 nullref)))
    (type (;10;) (func))
    (type (;11;) (sub (struct (field (mut i16)) (field f32) (field i8) (field (mut i32)) (field (mut f32)) (field i8) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field i32) (field (mut f32)) (field (mut f32)) (field (mut i16)) (field f64) (field i8) (field i8) (field i64) (field i16))))
    (type (;12;) (sub (array i8)))
    (type (;13;) (sub (struct (field i16) (field i8) (field i16) (field (mut i32)) (field i64) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field i8) (field i8) (field i8) (field i16) (field i16) (field (mut i16)) (field i16))))
    (type (;14;) (sub (array i16)))
    (type (;15;) (sub 12 (array i8)))
    (type (;16;) (array (mut i32)))
    (type (;17;) (sub (func (param i32 f32))))
    (type (;18;) (sub (struct (field (mut i8)) (field (mut f32)) (field (mut f32)) (field f32) (field (mut i8)) (field (mut i32)) (field (mut i64)) (field (mut i8)) (field nullref) (field f32) (field i8) (field i8))))
    (type (;19;) (struct (field i16) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field i64) (field (mut i8)) (field (mut i16)) (field i64)))
    (type (;20;) (array i32))
    (type (;21;) (sub (func (param eqref i32 f64 f32) (result (ref null 10)))))
    (type (;22;) (sub (struct (field i16) (field (mut i16)) (field (mut i8)))))
    (type (;23;) (struct (field (mut f32)) (field structref) (field (mut i32)) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field (ref null 16)) (field (mut i16))))
    (type (;24;) (sub (func (result i64))))
    (type (;25;) (array (mut i8)))
    (type (;26;) (struct (field i16) (field (mut i16)) (field f64) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16))))
    (type (;27;) (sub (struct (field (mut i64)) (field i8) (field f64) (field (mut i16)) (field i8) (field (mut i16)) (field i32) (field (mut i8)) (field (mut i8)) (field i8))))
    (type (;28;) (array i64))
    (type (;29;) (sub (struct (field i16) (field i64) (field f64) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field i64) (field (mut i32)) (field (mut i8)))))
    (type (;30;) (sub (array (mut i8))))
    (type (;31;) (sub (array (mut i16))))
    (type (;32;) (struct (field i16) (field (mut i8)) (field i8) (field (mut i16)) (field funcref) (field i64) (field (mut i16)) (field (mut i16))))
    (type (;33;) (sub (struct (field i32) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field (ref null 21)) (field (mut f32)) (field (mut i16)))))
    (type (;34;) (sub (struct (field (mut i8)) (field i64) (field i64) (field i16) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field f64) (field (mut (ref null 30))) (field (mut i64)) (field (mut i8)))))
    (type (;35;) (sub final 30 (array (mut i8))))
    (type (;36;) (array i8))
    (type (;37;) (sub (func)))
    (type (;38;) (array (mut i16)))
    (type (;39;) (func (result i32 i32 f32 f32 i64 i32 nullref)))
    (type (;40;) (array (mut i8)))
    (type (;41;) (func (result (ref null 25) i64 (ref null 3) (ref null 15) i64 f64)))
    (type (;42;) (sub (array i8)))
    (type (;43;) (sub (func (param i32))))
    (type (;44;) (struct (field i16) (field (mut i64)) (field (mut i16)) (field (mut i16))))
    (type (;45;) (func (param i32)))
    (type (;46;) (sub (array i16)))
    (type (;47;) (struct (field i16) (field f32) (field (mut i8)) (field i16) (field (mut i64)) (field i8) (field i8) (field (mut i64)) (field i16) (field (mut i16)) (field (mut i16))))
    (type (;48;) (sub (array i16)))
  )
  (tag (;0;) (type 45) (param i32))
  (start 1)
  (func (;0;) (type 43) (param i32)
    try_table (type 0) (result exnref) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) ;; label = @1
      local.get 0
      i32.clz
      i32.clz
      if (result f32) ;; label = @2
        ref.null 33
        ref.as_non_null
        nop
        loop ;; label = @3
        end
        loop (type 37) ;; label = @3
          loop (type 24) (result i64) ;; label = @4
            block (type 41) (result (ref null 25) i64 (ref null 3) (ref null 15) i64 f64) ;; label = @5
              struct.new_default 26
              struct.new_default 33
              call 1
              try_table (type 41) (result (ref null 25) i64 (ref null 3) (ref null 15) i64 f64) (catch_all 1 (;@4;)) (catch_all 5) ;; label = @6
                return_call 1
                call 1
                try_table (type 24) (result i64) (catch_all 6) (catch_all 3 (;@3;)) (catch_all 3 (;@3;)) (catch_all_ref 5 (;@1;)) (catch_all 6) (catch_all_ref 5 (;@1;)) ;; label = @7
                  call 1
                  call 1
                  loop (type 24) (result i64) ;; label = @8
                    struct.new_default 19
                    return_call 1
                    loop (type 37) ;; label = @9
                      try_table (type 39) (result i32 i32 f32 f32 i64 i32 nullref) (catch_all 1 (;@8;)) (catch_all_ref 8 (;@1;)) (catch_all 1 (;@8;)) (catch_all 0 (;@9;)) (catch_all 9) (catch_all 5 (;@4;)) (catch_all 0 (;@9;)) ;; label = @10
                        f64.const -0x1.5e4947e1f8bdep+222 (;=-9222362013303572000000000000000000000000000000000000000000000000000;)
                        i32.trunc_sat_f64_u
                        f64.convert_i32_u
                        f64.abs
                        i64.trunc_f64_u
                        array.new_fixed 28 0
                        ref.cast (ref none)
                        extern.convert_any
                        block (type 37) ;; label = @11
                          struct.new_default 11
                          extern.convert_any
                          return_call 1
                          ref.null 16
                          br_on_null 0 (;@11;)
                          extern.convert_any
                          ref.cast externref
                          i32.const 963008071
                          f32.convert_i32_s
                          i64.const 4756222752055140358
                          local.get 0
                          i32.extend8_s
                          br 8 (;@3;)
                          struct.new_default 5
                          br 0 (;@11;)
                          local.get 0
                          return_call 1
                          if ;; label = @12
                            br 3 (;@9;)
                            loop (result i64) ;; label = @13
                              block (result f32) ;; label = @14
                                block (type 10) ;; label = @15
                                  local.get 0
                                  i64.extend_i32_u
                                  block (type 41) (result (ref null 25) i64 (ref null 3) (ref null 15) i64 f64) ;; label = @16
                                    call 1
                                    local.get 0
                                    i32.clz
                                    if ;; label = @17
                                      i64.const 0
                                      unreachable
                                    end
                                    unreachable
                                  end
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      else
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 10))
)
