(module
  (rec
    (type (;0;) (func (result f64)))
    (type (;1;) (sub (array (mut f64))))
    (type (;2;) (array (mut i32)))
    (type (;3;) (array (mut i16)))
    (type (;4;) (sub (struct (field i16) (field i8) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field f64) (field i64) (field (mut (ref null 2))) (field i8) (field f32) (field (mut i16)) (field (mut i8)) (field i8))))
    (type (;5;) (array i16))
    (type (;6;) (struct))
    (type (;7;) (sub (func (result f64 i32))))
    (type (;8;) (sub (struct (field (mut i8)))))
    (type (;9;) (struct (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field i32) (field (mut i8)) (field (mut i8)) (field i32) (field (mut i64)) (field (mut i8)) (field structref) (field (mut i8)) (field (mut anyref)) (field i64)))
    (type (;10;) (sub (struct (field i16) (field f64) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field anyref) (field (mut f32)) (field (mut i8)))))
    (type (;11;) (func))
    (type (;12;) (struct (field (mut i64)) (field (mut i16)) (field i16) (field i16) (field (mut i32)) (field f64) (field (mut f32)) (field f64) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field i32) (field i8)))
    (type (;13;) (sub (struct (field f32) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i64) (field (mut i64)) (field i8) (field eqref) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field (mut i64)))))
    (type (;14;) (sub (func (param i32 i64 f64) (result f32))))
    (type (;15;) (sub (struct (field i8) (field i32) (field (mut i8)) (field i16) (field i8) (field i16) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut i16)) (field (mut i32)) (field i8) (field f64) (field (mut i8)) (field f64) (field i8) (field f32) (field (mut i8)))))
    (type (;16;) (func (param i64)))
    (type (;17;) (sub (struct (field f32) (field (mut i8)) (field (mut i31ref)) (field i8) (field i16) (field (mut f64)) (field i8) (field (mut i64)) (field i64) (field i8) (field (mut i16)) (field f32) (field (mut f64)) (field i16) (field i32) (field (mut i32)) (field (mut i64)) (field i8) (field i8) (field (mut i16)))))
    (type (;18;) (sub (struct (field i16) (field f32) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i16)) (field f32) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (ref null 7)) (field (mut i8)) (field i16))))
    (type (;19;) (func (result f32)))
    (type (;20;) (sub (struct (field (mut i16)) (field i8) (field i16) (field f32) (field (mut i16)) (field (mut i32)) (field (mut f32)) (field f32) (field (mut i8)) (field (mut eqref)) (field i8))))
    (type (;21;) (array (mut i16)))
    (type (;22;) (array (mut i64)))
    (type (;23;) (array i16))
  )
  (rec
    (type (;24;) (sub 10 (struct (field i16) (field f64) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (ref null 3)) (field (mut f32)) (field (mut i8)) (field i16) (field nullfuncref))))
    (type (;25;) (sub (struct (field (mut i8)) (field i8) (field (mut i16)) (field (mut i16)) (field i16))))
    (type (;26;) (sub (array i8)))
    (type (;27;) (struct (field (mut f64)) (field i16) (field (mut i32)) (field i16) (field (mut i16)) (field (mut i64)) (field f32) (field i8) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field (mut f32)) (field i64) (field (mut f32)) (field f64) (field (mut i8)) (field i32) (field (mut i8))))
    (type (;28;) (func (param f32 i32 f64 i32) (result i32 i64)))
    (type (;29;) (struct (field f32) (field (mut i8)) (field (mut i16))))
    (type (;30;) (sub (struct (field (mut i16)) (field (mut i8)) (field (ref null 27)) (field (mut i8)))))
    (type (;31;) (sub (struct)))
    (type (;32;) (sub (struct (field (ref null 14)) (field (mut exnref)) (field i16) (field (mut i32)) (field i16) (field (mut f32)) (field i8) (field (mut i8)) (field i16) (field funcref) (field (mut i16)) (field f32))))
  )
  (memory (;0;) i64 5291 112155737302955)
  (tag (;0;) (type 16) (param i64))
  (global (;0;) f32 f32.const 0x1.f3df6cp-3 (;=0.24407849;))
  (start 0)
  (func (;0;) (type 11)
    f64.const 0x1.8427a239c7ep+483 (;=37866304496226615000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
    i64.trunc_sat_f64_s
    i64.ctz
    f64.load offset=260814789 align=4
    f64.abs
    br 0
    block (result f64) ;; label = @1
      i64.const 4096
      i32.load offset=10080430312263338184
      struct.new 31
      block (type 7) (result f64 i32) ;; label = @2
        try_table (catch_all 2) (catch_all 2) (catch_all 2) (catch_all 2) ;; label = @3
          loop (type 7) (result f64 i32) ;; label = @4
            global.get 0
            loop (type 11) ;; label = @5
              call 0
              block (type 19) (result f32) ;; label = @6
                call 0
                f32.const -0x1.a44a1p-79 (;=-0.000000000000000000000002716056;)
                i32.reinterpret_f32
                br_if 6
                br 6
                struct.new_default 4
                f32.const 0x1.p-144 (;=0.000000000000000000000000000000000000000000045;)
                struct.new_default 17
                struct.new 6
                try_table (catch_all 6) (catch_all 1 (;@5;)) (catch_all 1 (;@5;)) (catch_all 2 (;@4;)) (catch_all 3 (;@3;)) ;; label = @7
                  loop (type 0) (result f64) ;; label = @8
                    struct.new 6
                    ref.test (ref none)
                    if (type 0) (result f64) ;; label = @9
                      loop ;; label = @10
                        struct.new_default 31
                        ref.as_non_null
                        extern.convert_any
                        ref.cast nullexternref
                        f32.const 0x1.560002p-86 (;=0.000000000000000000000000017266589;)
                        f64.const 0x1p-959 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020522684006491881;)
                        memory.size
                        memory.grow
                        block ;; label = @11
                          f32.const 0x1.ep-146 (;=0.000000000000000000000000000000000000000000021;)
                          loop (result i32) ;; label = @12
                            try_table (type 11) ;; label = @13
                              memory.size
                              i64.load16_s offset=290815369 align=1
                              memory.grow
                              i32.load8_u offset=206903790
                              f32.convert_i32_u
                              f64.const 0x1p-1022 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014;)
                              f64.trunc
                              i32.trunc_f64_s
                              i32.const -1339121737
                              if ;; label = @14
                                memory.size
                                i32.wrap_i64
                                call 1
                                f32.floor
                                loop (type 11) ;; label = @15
                                end
                                br 8 (;@6;)
                                i32.extend16_s
                                return_call 0
                                array.new_fixed 21 0
                                array.len
                                i32.shr_u
                                global.get 0
                                i32.trunc_sat_f32_u
                                br 1 (;@13;)
                                br_if 6 (;@8;)
                                i64.const -70368744177664
                                i64.clz
                                i32.load16_s offset=247023400 align=1
                                nop
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    else
                      unreachable
                    end
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 19) (result f32)
    unreachable
  )
)
