(module
  (rec
    (type (;0;) (sub (func (param anyref))))
    (type (;1;) (sub (func (param f64) (result f32))))
    (type (;2;) (array (mut i16)))
    (type (;3;) (sub (array i8)))
    (type (;4;) (func (result i32)))
    (type (;5;) (func (param (ref null 4)) (result i64)))
    (type (;6;) (array (mut i32)))
    (type (;7;) (struct (field (mut i16)) (field (mut funcref)) (field i8) (field i16) (field i32) (field (mut i16)) (field (mut i16))))
    (type (;8;) (func (result i32)))
    (type (;9;) (sub (array (mut i16))))
    (type (;10;) (sub (func (param i32 f64 eqref) (result i32 f32 i32))))
    (type (;11;) (sub (func (param f32 nullref eqref anyref))))
    (type (;12;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i32)) (field i8) (field (mut i8)) (field nullref) (field (mut i16)))))
    (type (;13;) (sub (array (mut f64))))
    (type (;14;) (sub (struct (field i16) (field (mut i32)) (field (mut f64)) (field i16) (field (mut i8)) (field (mut i8)))))
    (type (;15;) (struct (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i16)))
    (type (;16;) (func))
    (type (;17;) (func (param f32)))
    (type (;18;) (sub (func (param i64))))
    (type (;19;) (sub (func (param f64 i64 f32 i32) (result f32))))
    (type (;20;) (sub (struct (field (mut i16)) (field i64) (field i8))))
    (type (;21;) (sub (func (param f64 i32 f32) (result f32 nullfuncref nullfuncref))))
    (type (;22;) (sub (array (mut i8))))
    (type (;23;) (struct (field i64) (field i16) (field (mut i8)) (field f32) (field (mut i16)) (field f64) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field (mut (ref null 7))) (field (mut i16)) (field (mut i8)) (field (mut i8))))
    (type (;24;) (func (param eqref) (result f32 i32 f32)))
    (type (;25;) (sub (struct (field i16) (field i32) (field i16) (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field f32) (field (mut i32)) (field i16))))
    (type (;26;) (sub (array (mut i8))))
    (type (;27;) (func))
    (type (;28;) (array i16))
    (type (;29;) (array i8))
    (type (;30;) (sub (func (param f32 i64 i32) (result i32))))
    (type (;31;) (func (param i32 (ref null 6)) (result f32 i32 i64 (ref null 21))))
    (type (;32;) (sub (struct (field i8) (field (mut i16)) (field i64) (field (mut structref)) (field (mut (ref null 29))) (field (mut i8)) (field (mut i8)) (field i16) (field i8) (field i8) (field i16))))
    (type (;33;) (sub (func)))
    (type (;34;) (sub (array f32)))
    (type (;35;) (sub (array (mut i8))))
    (type (;36;) (sub (func)))
    (type (;37;) (array (mut i64)))
    (type (;38;) (sub (func (result f32 i32))))
    (type (;39;) (func (param i32)))
  )
  (table (;0;) 34 (ref null 29))
  (memory (;0;) 7877 24038)
  (global (;0;) (mut i32) i32.const 0)
  (global (;1;) (mut i32) i32.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (export "5" (func 0))
  (start 0)
  (func (;0;) (type 36)
    memory.size
    i32.load8_s offset=166529641
    br 0
    if (type 4) (result i32) ;; label = @1
      i32.const 2032061242
      memory.grow
      i32.extend8_s
      f32.const -nan:0x7ffffc (;=NaN;)
      i64.trunc_f32_u
      loop (type 36) ;; label = @2
        table.size 0
        call 0
        f32.load offset=29288925 align=1
        memory.size
        if (type 17) (param f32) ;; label = @3
          struct.new_default 7
          f64.const -nan:0xffffffffffffd (;=NaN;)
          i64.trunc_f64_s
          block (type 36) ;; label = @4
            return_call 0
            call 0
          end
          return_call 0
          ref.null 13
          loop (type 4) (result i32) ;; label = @4
            try_table (type 38) (result f32 i32) (catch_all 2 (;@2;)) (catch_all 0 (;@4;)) (catch_all 1 (;@3;)) (catch_all 0 (;@4;)) (catch_all 2 (;@2;)) (catch_all 1 (;@3;)) (catch_all 2 (;@2;)) (catch_all 2 (;@2;)) (catch_all 0 (;@4;)) (catch_all 1 (;@3;)) ;; label = @5
              struct.new_default 12
              extern.convert_any
              loop (type 33) ;; label = @6
                block (type 8) (result i32) ;; label = @7
                  i64.const 256
                  loop ;; label = @8
                    try_table (type 33) (catch_all 8) (catch_all 2 (;@6;)) (catch_all 2 (;@6;)) (catch_all 2 (;@6;)) (catch_all 2 (;@6;)) (catch_all 0 (;@8;)) ;; label = @9
                      loop ;; label = @10
                        i32.const -32769
                        i32.ctz
                        array.new_fixed 35 0
                        ref.cast (ref 35)
                        br 7 (;@3;)
                        block (type 4) (result i32) ;; label = @11
                          memory.size
                          i64.load8_s offset=149632290
                          loop (type 16) ;; label = @12
                            f32.const -0x1.573a38p-123 (;=-0.00000000000000000000000000000000000012608184;)
                            struct.new_default 20
                            br_on_null 8 (;@4;)
                            f64.const -0x1p+897 (;=-1056589062271330500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                            memory.size
                            f64.convert_i32_s
                            f64.eq
                            i64.load offset=493321590
                            try_table (type 4) (result i32) (catch_all 0 (;@12;)) (catch_all 6 (;@6;)) (catch_all 2 (;@10;)) (catch_all 12) (catch_all 12) (catch_all 6 (;@6;)) (catch_all 12) ;; label = @13
                              i64.const -32768
                              f32.convert_i64_u
                              ref.null extern
                              ref.cast (ref extern)
                              ref.test (ref extern)
                              i64.load32_s offset=35316913
                              i32.const 516227070
                              i32.load8_s offset=261987541
                              array.new_default 6
                              ref.test (ref 6)
                              i64.extend_i32_s
                              loop (type 33) ;; label = @14
                                f64.const 0x1.p-1069 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016;)
                                array.new_fixed 13 0
                                call 0
                                return_call 0
                                ref.test (ref none)
                                br 1 (;@13;)
                                i32.const 65535
                                array.new_default 26
                                ref.test (ref 26)
                                i32.load8_s offset=214042399
                                i32.eqz
                                i32.load8_s offset=412005956
                                i32.extend8_s
                                br_if 12 (;@2;)
                                f32.demote_f64
                                i32.reinterpret_f32
                                i32.extend8_s
                                try_table (type 39) (param i32) ;; label = @15
                                  br 15
                                  loop (type 4) (result i32) ;; label = @16
                                    try_table (type 4) (result i32) (catch_all 0 (;@16;)) (catch_all 12 (;@4;)) (catch_all 7 (;@9;)) (catch_all 10 (;@6;)) ;; label = @17
                                      i64.const -2049
                                      i64.extend8_s
                                      i64.const 7928874945889347484
                                      i32.const 268642432
                                      i32.const -262145
                                      i64.load32_s offset=125081262 align=2
                                      i64.ctz
                                      block (type 4) (result i32) ;; label = @18
                                        loop (type 33) ;; label = @19
                                          f64.const -0x1.831bda49bc5d4p-839 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000412502624650281;)
                                          loop (type 38) (result f32 i32) ;; label = @20
                                            return_call 0
                                            memory.size
                                            f32.load offset=328608114
                                            table.size 0
                                          end
                                          global.get 0
                                          i32.xor
                                          global.set 0
                                          i32.reinterpret_f32
                                          global.get 1
                                          i32.xor
                                          global.set 1
                                          i64.reinterpret_f64
                                          global.get 2
                                          i64.xor
                                          global.set 2
                                        end
                                        i32.const -131072
                                      end
                                      drop
                                      drop
                                      drop
                                      drop
                                      drop
                                      i32.const 0
                                    end
                                  end
                                  unreachable
                                end
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                    end
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        else
          unreachable
        end
      end
      unreachable
    else
      unreachable
    end
    unreachable
  )
)
