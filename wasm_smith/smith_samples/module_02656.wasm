(module
  (rec
    (type (;0;) (sub (struct (field i8) (field (mut i16)))))
    (type (;1;) (sub final 0 (struct (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field i8))))
    (type (;2;) (array i16))
    (type (;3;) (sub (struct (field i16) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i64)) (field i16) (field i8) (field i8) (field i8) (field i8) (field (mut i16)) (field i8) (field f64) (field f64))))
    (type (;4;) (sub (struct (field i8) (field i32) (field (ref null 0)) (field i8) (field i16) (field i8) (field i16) (field i8) (field (mut i8)) (field (mut i8)))))
    (type (;5;) (array i8))
    (type (;6;) (sub (array i8)))
    (type (;7;) (func (param f64) (result i32 arrayref)))
    (type (;8;) (sub 6 (array i8)))
    (type (;9;) (sub (array (mut i64))))
    (type (;10;) (array (mut i16)))
    (type (;11;) (array i32))
    (type (;12;) (func (param f64)))
    (type (;13;) (sub (struct (field f64) (field (mut i16)) (field i8) (field i8) (field (mut f32)) (field i16) (field f64) (field (mut i16)) (field (mut i8)) (field anyref) (field i16) (field i16))))
    (type (;14;) (func (result f64 f64)))
    (type (;15;) (func (param structref f32 i64 f32 i64 anyref) (result externref)))
    (type (;16;) (sub (array (mut i16))))
    (type (;17;) (func (result f32 f32 f64)))
    (type (;18;) (array (mut i16)))
    (type (;19;) (sub (struct (field (mut i16)) (field (mut f32)) (field f32) (field (mut i8)))))
    (type (;20;) (array (mut i16)))
    (type (;21;) (struct (field (mut i16)) (field (mut i16)) (field (mut i8))))
    (type (;22;) (sub (array (mut i16))))
    (type (;23;) (sub (func)))
    (type (;24;) (sub (struct)))
    (type (;25;) (sub (struct (field (ref null 1)) (field f64) (field f64) (field (mut f64)) (field i16) (field (mut i8)))))
    (type (;26;) (sub (struct (field (mut i16)) (field (mut i16)) (field i16) (field i8))))
    (type (;27;) (sub (struct (field i16) (field (mut i16)) (field (mut (ref null 21))) (field i8) (field (mut i8)) (field (mut i64)) (field (mut f64)) (field (mut i8)) (field f32) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field (mut i64)) (field i32))))
    (type (;28;) (func (param f64 i32 i32 nullref f32 f32)))
    (type (;29;) (sub (struct (field nullref) (field f64) (field (mut i8)) (field arrayref) (field i8) (field (mut i8)) (field i32) (field (mut i8)) (field (mut i16)) (field i8) (field i64) (field (mut i32)) (field i16) (field (mut (ref null 23))) (field f64) (field (mut i16)) (field i16) (field (mut i64)) (field (mut f64)))))
    (type (;30;) (func (result i32)))
    (type (;31;) (struct (field (mut i8)) (field (mut i16)) (field (mut i32)) (field (mut i64)) (field (mut i32)) (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field i32) (field (mut i16)) (field i8) (field i8) (field (mut (ref null 20))) (field (mut i64)) (field (mut f32))))
    (type (;32;) (sub (func)))
    (type (;33;) (array (mut i8)))
    (type (;34;) (sub (struct (field i8) (field (mut i8)) (field f32))))
    (type (;35;) (array (mut i8)))
    (type (;36;) (func (param i64 i32)))
    (type (;37;) (array (mut i8)))
    (type (;38;) (sub (struct (field i8) (field i8) (field i32) (field (mut i64)) (field i8) (field (mut (ref null 19))) (field (mut i8)) (field i8) (field i8) (field nullfuncref) (field i8) (field i16) (field (mut i8)) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field (mut i8)))))
    (type (;39;) (struct (field i16) (field f64) (field (mut f32)) (field i8) (field i16) (field (mut i64)) (field (mut i16)) (field f32) (field i16) (field (mut i16))))
    (type (;40;) (func))
    (type (;41;) (sub (func (param f64 f32) (result (ref null 37)))))
    (type (;42;) (sub (func (param f32) (result f64 f32))))
    (type (;43;) (sub (array i32)))
  )
  (export "[" (func 0))
  (export "" (func 0))
  (elem (;0;) declare eqref (ref.null 2))
  (elem (;1;) declare eqref)
  (elem (;2;) exnref)
  (elem (;3;) declare (ref null 15) (ref.null 15))
  (elem (;4;) declare eqref (ref.null 16))
  (func (;0;) (type 12) (param f64)
    (local f64 (ref null 28) f32 f64 f64 i32 f64 i64 i32)
    struct.new_default 19
    ref.as_non_null
    f64.const -nan:0xfffffffff8000 (;=NaN;)
    i64.const -4073883086858598278
    f32.convert_i64_s
    local.set 3
    i32.trunc_f64_s
    block (type 30) (result i32) ;; label = @1
      loop ;; label = @2
        i64.const 256
        try_table (catch_all 0 (;@2;)) (catch_all 2) (catch_all 0 (;@2;)) (catch_all 2) (catch_all 2) (catch_all 2) ;; label = @3
        end
        i64.eqz
        br_if 2
        f32.const -nan:0x3fffff (;=NaN;)
        br 0 (;@2;)
        f32.abs
        f64.const -nan:0xffdffffffffff (;=NaN;)
        call 0
        unreachable
        nop
        f64.const 0x1.ffffffffffep-1031 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000086916947597933;)
        try_table (type 17) (result f32 f32 f64) ;; label = @3
          br 1 (;@2;)
          struct.new 24
          ref.null struct
          i64.const -17
          i64.extend8_s
          f64.reinterpret_i64
          i64.trunc_sat_f64_s
          ref.null 31
          loop (result f64) ;; label = @4
            block (type 14) (result f64 f64) ;; label = @5
              struct.new 24
              br_on_null 3 (;@2;)
              loop ;; label = @6
                i64.const -8796093022208
                i64.ctz
                br 2 (;@4;)
                i64.extend16_s
                block (type 23) ;; label = @7
                  i32.const -1275068416
                  i64.const 140737488355327
                  f64.convert_i64_s
                  f64.ceil
                  nop
                  i64.trunc_sat_f64_u
                  i64.ctz
                  i64.extend16_s
                  loop (result f64) ;; label = @8
                    i32.const -257
                    loop (result f64) ;; label = @9
                      loop (type 30) (result i32) ;; label = @10
                        i64.const 16384
                        f32.const 0x1.fc2614p+50 (;=2234861800000000;)
                        i64.trunc_f32_s
                        i64.rotl
                        f64.convert_i64_u
                        f64.abs
                        ref.null 28
                        struct.new 24
                        br 3 (;@7;)
                        return
                        extern.convert_any
                        ref.test externref
                        i32.extend16_s
                        i32.const -536870912
                        i32.ctz
                        i32.xor
                        f32.convert_i32_s
                        local.get 6
                        i64.extend_i32_s
                        f32.const -nan:0x7bffff (;=NaN;)
                        i64.const 72057594037927935
                        try_table (type 17) (result f32 f32 f64) (catch_all 3 (;@7;)) (catch_all 10) (catch_all 1 (;@9;)) ;; label = @11
                          f64.const 0x1.486a1092p-1043 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001361120693;)
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
