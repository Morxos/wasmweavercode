(module
  (rec
    (type (;0;) (sub (func (param i64 i64) (result f64))))
    (type (;1;) (func))
    (type (;2;) (sub (struct (field (mut f32)) (field i8) (field f64) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field (mut i8)))))
    (type (;3;) (sub (func (result i64 i31ref))))
    (type (;4;) (sub (array (mut structref))))
    (type (;5;) (sub (array i32)))
    (type (;6;) (array (mut i8)))
    (type (;7;) (sub (func (param f32) (result anyref))))
    (type (;8;) (sub (array i16)))
    (type (;9;) (struct (field i8) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field i16) (field i16) (field i8) (field (mut exnref)) (field (mut i16)) (field (mut i64)) (field f64) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i64))))
    (type (;10;) (struct))
    (type (;11;) (sub (struct (field (mut i32)) (field i8) (field (mut f64)) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i32)) (field i16) (field (mut f32)) (field i16))))
    (type (;12;) (sub (array (mut i8))))
    (type (;13;) (sub (struct (field (mut i16)) (field i16) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field i8))))
    (type (;14;) (struct (field (mut eqref)) (field i16)))
    (type (;15;) (func (result i31ref)))
    (type (;16;) (func))
    (type (;17;) (sub (struct (field i16) (field (mut i16)) (field i64) (field i8) (field (mut i16)) (field (mut i8)))))
    (type (;18;) (array f64))
    (type (;19;) (array f32))
    (type (;20;) (struct (field i8) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8))))
    (type (;21;) (struct (field i16) (field (mut nullfuncref)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field f32) (field (ref null 5)) (field nullfuncref) (field (mut i16))))
    (type (;22;) (array (mut i16)))
    (type (;23;) (sub (func)))
    (type (;24;) (sub (func)))
    (type (;25;) (array i16))
    (type (;26;) (func (result i32 (ref null 11))))
    (type (;27;) (func (param f64 i64 f64 f32 i64)))
    (type (;28;) (sub (array f32)))
    (type (;29;) (sub (array (mut (ref null 9)))))
    (type (;30;) (sub (func (param f64 f32) (result nullref eqref))))
    (type (;31;) (struct (field (mut i8)) (field i16) (field (mut i16)) (field i64) (field i8) (field i8) (field i32) (field i8) (field (mut i8)) (field (mut i16)) (field i16) (field i32) (field i8) (field i64) (field (mut i8)) (field i16) (field i8) (field i16) (field i16) (field (mut i8))))
    (type (;32;) (func))
  )
  (memory (;0;) i64 142 89569979059696)
  (global (;0;) (mut i32) i32.const -75172456 i32.const 498689094 i32.const -2052337216 i32.const 2019018868 i32.const 204073771 i32.const -128954986 i32.const 595764942 i32.add i32.add i32.add i32.const 1656564316 i32.sub i32.sub i32.sub i32.add i32.const -1943463187 i32.sub)
  (global (;1;) (mut i32) i32.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (global (;3;) (mut i64) i64.const 0)
  (global (;4;) (mut i32) i32.const 0)
  (export "" (memory 0))
  (export "\u{10}" (memory 0))
  (elem (;0;) declare anyref)
  (elem (;1;) declare nullfuncref (ref.null nofunc) (ref.null nofunc) (ref.null nofunc))
  (func (;0;) (type 15) (result i31ref)
    (local i64)
    try_table (type 16) ;; label = @1
      global.get 0
      f32.convert_i32_u
      i32.trunc_f32_s
      br_table 0 (;@1;) 0 (;@1;)
    end
    i32.const 1079079699
    f32.convert_i32_u
    i32.trunc_f32_u
    if (type 3) (result i64 i31ref) ;; label = @1
      loop (type 15) (result i31ref) ;; label = @2
        return_call 0
        try_table (type 24) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) ;; label = @3
        end
        br_on_cast_fail 2 i31ref nullref
        elem.drop 1
        loop (type 24) ;; label = @3
          f32.const -0x1.3be594p+119 (;=-820114950000000000000000000000000000;)
          br 1 (;@2;)
          array.new_fixed 28 0
          call 0
          try_table (type 26) (result i32 (ref null 11)) (catch_all 0 (;@3;)) (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) ;; label = @4
            i32.const 1431655765
            try_table (type 26) (result i32 (ref null 11)) (catch_all 1 (;@3;)) (catch_all 1 (;@3;)) (catch_all 2 (;@2;)) (catch_all 2 (;@2;)) (catch_all 1 (;@3;)) (catch_all 2 (;@2;)) ;; label = @5
              local.get 0
              i64.load offset=7224273 align=4
              i32.load16_u offset=4050183
              f32.reinterpret_i32
              f32.const -nan:0x7fffff (;=NaN;)
              f32.copysign
              memory.size
              local.tee 0
              nop
              struct.new 10
              struct.new_default 11
              i32.const -1639830784
              ref.i31
              i31.get_u
              elem.drop 1
              local.get 0
              i32.load16_s offset=5660498 align=1
              f32.reinterpret_i32
              i32.trunc_f32_u
              f32.convert_i32_s
              i32.trunc_f32_u
              block (type 15) (result i31ref) ;; label = @6
                f32.const 0x1.1bfffep-126 (;=0.000000000000000000000000000000000000013040639;)
                f32.nearest
                array.new_fixed 28 0
                block (type 32) ;; label = @7
                  i32.const -736316509
                  loop (result (ref null 5)) ;; label = @8
                    f32.const 0x1.16a81ap-53 (;=0.00000000000000012084806;)
                    f32.neg
                    local.get 0
                    f64.load offset=3600910
                    i64.trunc_sat_f64_s
                    i64.extend8_s
                    struct.new_default 14
                    global.get 0
                    i32.popcnt
                    try_table (type 24) (catch_all 1 (;@7;)) (catch_all 1 (;@7;)) (catch_all 6 (;@2;)) (catch_all 0 (;@8;)) ;; label = @9
                    end
                    i32.clz
                    i32.extend8_s
                    br_table 0 (;@8;) 1 (;@7;) 5 (;@3;) 6 (;@2;) 5 (;@3;)
                    ref.cast (ref none)
                    local.get 0
                    br 0 (;@8;)
                    i64.popcnt
                    f64.load offset=4273009 align=1
                    memory.size
                    call 0
                    ref.as_non_null
                    br_on_non_null 8
                    elem.drop 1
                    i64.load32_s offset=2663100 align=2
                    block (type 24) ;; label = @9
                      struct.new_default 9
                      try_table (type 1) (catch_all 0 (;@9;)) (catch_all 0 (;@9;)) (catch_all 1 (;@8;)) (catch_all 2 (;@7;)) ;; label = @10
                        return_call 0
                        i31.get_u
                        i32.ctz
                        nop
                        f64.const -0x1.e50ff082bd9c4p-936 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000032619821663539144;)
                        memory.size
                        f32.const 0x1.56d5ap-83 (;=0.00000000000000000000000013846974;)
                        nop
                        ref.null 30
                        i64.const -3650218934111730748
                        struct.new 10
                        memory.size
                        try_table (type 24) (catch_all 7 (;@3;)) (catch_all 7 (;@3;)) ;; label = @11
                          block (result i64) ;; label = @12
                            memory.size
                            br 4 (;@8;)
                            f64.load offset=7263843
                            memory.size
                            i64.extend16_s
                            i32.wrap_i64
                            global.get 1
                            i32.xor
                            global.set 1
                            i64.reinterpret_f64
                            global.get 2
                            i64.xor
                            global.set 2
                            i64.const 137438953471
                          end
                          global.get 3
                          i64.xor
                          global.set 3
                        end
                        global.get 3
                        i64.xor
                        global.set 3
                        drop
                        global.get 3
                        i64.xor
                        global.set 3
                        drop
                        i32.reinterpret_f32
                        global.get 4
                        i32.xor
                        global.set 4
                        global.get 3
                        i64.xor
                        global.set 3
                        i64.reinterpret_f64
                        global.get 2
                        i64.xor
                        global.set 2
                        global.get 1
                        i32.xor
                        global.set 1
                      end
                      drop
                    end
                    global.get 3
                    i64.xor
                    global.set 3
                    i64.reinterpret_f64
                    global.get 2
                    i64.xor
                    global.set 2
                    drop
                    global.get 3
                    i64.xor
                    global.set 3
                    i32.reinterpret_f32
                    global.get 4
                    i32.xor
                    global.set 4
                    ref.null 5
                  end
                  drop
                  global.get 1
                  i32.xor
                  global.set 1
                end
                drop
                drop
                ref.null i31
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
      end
      unreachable
    else
      unreachable
    end
    unreachable
  )
)
