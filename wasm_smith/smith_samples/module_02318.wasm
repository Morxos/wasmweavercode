(module
  (rec
    (type (;0;) (struct (field i32) (field (mut i16)) (field (mut funcref)) (field (mut i16)) (field i16) (field (mut i64)) (field i8) (field (mut i32)) (field (mut f64))))
    (type (;1;) (array (mut i16)))
    (type (;2;) (sub (func (result i32 i31ref f64 f32))))
    (type (;3;) (sub (array f32)))
    (type (;4;) (sub (func (result f32))))
    (type (;5;) (struct (field i16)))
    (type (;6;) (sub (struct (field (mut f64)) (field i8) (field (mut i8)) (field f64) (field i16) (field f64) (field (mut i32)) (field i8) (field structref) (field (mut i8)) (field (mut i8)) (field (mut f64)))))
    (type (;7;) (struct (field i32) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field i8) (field i16) (field (mut nullfuncref))))
    (type (;8;) (sub (array i16)))
    (type (;9;) (struct (field i64) (field (mut i32)) (field (mut i32)) (field i8) (field (mut i16))))
    (type (;10;) (array (mut i16)))
    (type (;11;) (sub (struct (field i8) (field (mut i8)) (field f32) (field (mut (ref null 2))) (field i8) (field (mut i64)) (field i64) (field (mut exnref)) (field i8))))
    (type (;12;) (array (mut i16)))
    (type (;13;) (array (mut i8)))
    (type (;14;) (func (param i64 i32)))
  )
  (rec
    (type (;15;) (func (param f64)))
    (type (;16;) (struct (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field i16) (field (mut f32)) (field eqref)))
    (type (;17;) (sub (array (mut i8))))
    (type (;18;) (struct (field (mut i16)) (field i8) (field i8)))
    (type (;19;) (array f64))
    (type (;20;) (sub (func (param f32 funcref) (result i64))))
    (type (;21;) (struct (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field f32) (field i16) (field (mut i8)) (field f64) (field (mut i16)) (field i16) (field (mut i64)) (field (mut i8)) (field i16) (field f64) (field (mut (ref null 2))) (field i16) (field i16) (field i16) (field (mut i8)) (field f32)))
    (type (;22;) (sub (struct)))
    (type (;23;) (sub (func)))
    (type (;24;) (sub (func)))
    (type (;25;) (sub (array i32)))
    (type (;26;) (sub final 20 (func (param f32 funcref) (result i64))))
    (type (;27;) (array (mut i32)))
    (type (;28;) (sub (array (mut i32))))
    (type (;29;) (func (result i64 f64 f64 i32)))
    (type (;30;) (sub (func)))
    (type (;31;) (sub (array f64)))
    (type (;32;) (struct (field f32) (field (mut i8)) (field (mut i8)) (field f32) (field i16)))
    (type (;33;) (sub (func (result (ref null 24) i64 exnref (ref null 22) (ref null 14)))))
    (type (;34;) (func))
    (type (;35;) (struct (field (mut f32)) (field i16) (field i8) (field i16)))
    (type (;36;) (sub (array i32)))
  )
  (import "d\u{8}/" "" (memory (;0;) i64 12256 246522849164263 shared))
  (tag (;0;) (type 23))
  (global (;0;) (mut i32) i32.const 0)
  (global (;1;) (mut i64) i64.const 0)
  (global (;2;) (mut i32) i32.const 0)
  (global (;3;) (mut i64) i64.const 0)
  (export "\u{501}" (func 2))
  (start 0)
  (elem (;0;) funcref (ref.null nofunc))
  (func (;0;) (type 34)
    (local f32 i32 i32)
    struct.new 22
    elem.drop 0
    extern.convert_any
    br 0
    f32.const -0x1.993198p-46 (;=-0.000000000000022714815;)
    f32.sqrt
    f32.ceil
    f32.abs
    i64.trunc_sat_f32_u
    f64.load offset=2343153574284843031
    i64.const 1178690354750763589
    block (type 2) (result i32 i31ref f64 f32) ;; label = @1
      return_call 0
      block (type 33) (result (ref null 24) i64 exnref (ref null 22) (ref null 14)) ;; label = @2
        struct.new 22
        try_table (type 24) (catch_all 2) (catch_all 2) (catch 0 2) (catch 0 2) ;; label = @3
        end
        ref.test (ref none)
        local.get 0
        local.tee 0
        i32.const -908645143
        i64.extend_i32_u
        f64.load offset=242388026 align=1
        f64.ceil
        f32.const 0x1.ffcp-139 (;=0.000000000000000000000000000000000000000002868;)
        struct.new 22
        ref.test (ref none)
        struct.new_default 6
        ref.test (ref 6)
        array.new_fixed 8 1
        try_table (type 33) (result (ref null 24) i64 exnref (ref null 22) (ref null 14)) (catch 0 2) (catch_all 2) (catch_all 2) (catch_all 2) (catch 0 2) (catch_all 2) (catch 0 2) ;; label = @3
          try_table (type 24) (catch 0 3) (catch 0 3) (catch 0 3) (catch_all 3) (catch 0 3) (catch_all 3) (catch_all 3) (catch_all 3) (catch_all 3) (catch_all 3) ;; label = @4
          end
          elem.drop 0
          i32.const 1398500612
          i64.extend_i32_u
          i32.load offset=296733979 align=2
          global.get 0
          i32.xor
          global.set 0
          ref.null 24
          i64.const -2147483649
          ref.null exn
          ref.null 22
          ref.null 14
        end
        drop
        drop
        drop
        global.get 1
        i64.xor
        global.set 1
        drop
        drop
        global.get 0
        i32.xor
        global.set 0
        i32.reinterpret_f32
        global.get 2
        i32.xor
        global.set 2
        i64.reinterpret_f64
        global.get 3
        i64.xor
        global.set 3
        i32.reinterpret_f32
        global.get 2
        i32.xor
        global.set 2
        global.get 0
        i32.xor
        global.set 0
        ref.null 24
        i64.const -1025
        ref.null exn
        ref.null 22
        ref.null 14
      end
      drop
      drop
      drop
      global.get 1
      i64.xor
      global.set 1
      drop
      i32.const 1642070426
      ref.null i31
      f64.const 0x1.ffffffff8p-1041 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084879831634;)
      f32.const 0x1.p-141 (;=0.000000000000000000000000000000000000000000359;)
    end
    i32.reinterpret_f32
    global.get 2
    i32.xor
    global.set 2
    i64.reinterpret_f64
    global.get 3
    i64.xor
    global.set 3
    drop
    global.get 0
    i32.xor
    global.set 0
    global.get 1
    i64.xor
    global.set 1
    i64.reinterpret_f64
    global.get 3
    i64.xor
    global.set 3
    drop
  )
  (func (;1;) (type 15) (param f64)
    (local f32)
    br 0
    memory.size
    i64.load32_u offset=66744342 align=1
    block (type 29) (result i64 f64 f64 i32) ;; label = @1
      block (type 2) (result i32 i31ref f64 f32) ;; label = @2
        loop (type 4) (result f32) ;; label = @3
          br 0 (;@3;)
          local.get 1
          local.tee 1
          i32.trunc_sat_f32_s
          f32.convert_i32_s
          f32.ceil
          f32.neg
          try_table (type 4) (result f32) (catch 0 3) (catch 0 3) (catch_all 3) (catch 0 3) ;; label = @4
            ref.null none
            br_on_null 1 (;@3;)
            array.len
            f32.const -0x1.2da294p+28 (;=-316287300;)
            i32.reinterpret_f32
            return_call 0
            i32.ge_u
            if (type 29) (result i64 f64 f64 i32) ;; label = @5
              memory.size
              call 2
              f32.sqrt
              f32.ceil
              block (type 24) ;; label = @6
              end
              i32.const 2078736368
              throw 0
              f64.const 0x1.7effff8p-1045 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000396838072;)
              i64.const 7284874408214484955
              local.get 1
              f32.sqrt
              throw 0
              br 5
              f32.trunc
              f32.sqrt
              f32.store offset=15517620990823372631 align=2
              f64.sqrt
              call 1
              i32.extend16_s
              f32.reinterpret_i32
              ref.null func
              struct.new 22
              return_call 0
              f32.const -0x1.8c5ba6p-25 (;=-0.000000046142144;)
              i32.reinterpret_f32
              f64.convert_i32_u
              i32.trunc_f64_s
              i32.extend8_s
              i32.extend16_s
              i32.popcnt
              i64.const 8796093022207
              f64.convert_i64_s
              f32.demote_f64
              return_call 0
              local.tee 1
              array.new_fixed 3 0
              struct.new 22
              local.get 0
              local.set 0
              ref.as_non_null
              i64.const -1152921504606846976
              return_call 0
              memory.size
              i64.add
              i32.load align=1
              unreachable
            else
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;2;) (type 2) (result i32 i31ref f64 f32)
    unreachable
  )
)
