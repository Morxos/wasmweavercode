(module
  (rec
    (type (;0;) (struct (field f32) (field i64) (field i64) (field (mut f64)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i31ref)) (field f32) (field (mut f64)) (field i8) (field (mut i8))))
    (type (;1;) (func))
    (type (;2;) (sub (array f32)))
    (type (;3;) (struct (field i16) (field i16) (field i64) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field (mut nullexternref)) (field i8) (field (mut i64)) (field (mut i8)) (field i8) (field i64) (field i8) (field (mut i16))))
    (type (;4;) (func (result i64)))
    (type (;5;) (sub (struct (field i8) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field (mut f64)) (field i16) (field i64) (field (mut i16)) (field (mut i8)) (field i16) (field i32) (field (mut i16)) (field i16) (field i8))))
    (type (;6;) (sub (array (mut i16))))
    (type (;7;) (sub (func (param i64 f64 i64))))
    (type (;8;) (sub (array i32)))
    (type (;9;) (struct (field (mut i16)) (field i16) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field i8) (field i8) (field i16) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field (mut i8))))
    (type (;10;) (sub (func (param i64))))
    (type (;11;) (sub (struct (field i16) (field f32) (field i8) (field (mut i64)) (field i64) (field i8) (field f32) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field (mut i8)))))
    (type (;12;) (sub (func (result i32))))
    (type (;13;) (sub (array (mut i8))))
    (type (;14;) (struct (field (mut i8)) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field f64) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field i16) (field (mut i8))))
    (type (;15;) (func))
    (type (;16;) (struct (field i8) (field i8) (field f64)))
    (type (;17;) (struct (field i16) (field f32) (field (mut i16)) (field f32) (field i8) (field (mut i16)) (field (mut i8))))
    (type (;18;) (sub (func (param externref))))
    (type (;19;) (array (mut i8)))
    (type (;20;) (sub (array (ref null 12))))
    (type (;21;) (struct (field (mut i32)) (field (mut i8)) (field i16) (field i32) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field eqref) (field i8) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field i16) (field i16) (field (mut i32)) (field i8) (field i16) (field (mut i64)) (field i8)))
    (type (;22;) (func (param f32)))
    (type (;23;) (sub (array (mut anyref))))
    (type (;24;) (array f32))
    (type (;25;) (sub (array (mut f32))))
    (type (;26;) (sub (func)))
    (type (;27;) (sub (array f32)))
    (type (;28;) (array (mut i8)))
    (type (;29;) (sub (struct (field (mut i8)) (field i16) (field i16) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i16) (field i16) (field (mut eqref)) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field i8) (field (mut i32)) (field i64) (field i16))))
    (type (;30;) (func))
    (type (;31;) (struct (field i16) (field (mut f32)) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field i64) (field i8) (field i16) (field (mut i8)) (field (mut i8)) (field i16) (field (mut f32)) (field (mut i16)) (field (mut i32)) (field i8) (field (mut f64)) (field (mut i8))))
    (type (;32;) (struct (field i16) (field i8) (field i64) (field i8) (field i8) (field f32) (field f32) (field (mut i8)) (field arrayref) (field i8) (field (mut i8))))
    (type (;33;) (sub (struct (field f64) (field i8) (field (mut i8)) (field i16) (field (mut f64)) (field i16) (field i8) (field (mut i8)) (field (mut i32)) (field f32) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut structref)) (field (mut i16)) (field i8))))
    (type (;34;) (sub (struct (field i16) (field i8) (field i8) (field i64) (field (mut i8)) (field i8) (field i64) (field (mut f64)) (field i16) (field (mut i64)) (field i8) (field (mut i16)) (field (mut structref)))))
    (type (;35;) (func (result f64)))
    (type (;36;) (sub (array i16)))
  )
  (table (;0;) i64 7429 170313 arrayref)
  (tag (;0;) (type 30))
  (tag (;1;) (type 10) (param i64))
  (tag (;2;) (type 1))
  (tag (;3;) (type 15))
  (tag (;4;) (type 10) (param i64))
  (export "\u{1f}" (func 1))
  (export "#Kt\u{7f}_s\u{67a}/#FI" (func 1))
  (func (;0;) (type 26)
    (local i64)
    loop (type 1) ;; label = @1
      data.drop 0
      f32.const -0x1.fdfdfcp+126 (;=-169473950000000000000000000000000000000;)
      ref.null struct
      try_table (type 4) (result i64) (catch_all 0 (;@1;)) (catch_all 1) (catch 3 0 (;@1;)) (catch 3 1) (catch_all 1) (catch 0 0 (;@1;)) (catch_all 0 (;@1;)) ;; label = @2
        try_table (result f64) (catch 0 1 (;@1;)) (catch 2 2) (catch 1 0 (;@2;)) (catch_all 2) (catch 0 2) (catch 1 0 (;@2;)) (catch 2 1 (;@1;)) (catch 2 2) (catch_all 1 (;@1;)) (catch 1 0 (;@2;)) ;; label = @3
          return
          f32.const -0x1.c0aa8p+77 (;=-264845670000000000000000;)
          f32.abs
          i64.trunc_sat_f32_u
          i64.eqz
          array.new_default 2
          i32.const -1878980107
          array.new_default 25
          array.len
          f32.convert_i32_s
          struct.new_default 33
          i64.const -2049
          loop (type 35) (result f64) ;; label = @4
            call 1
            local.get 0
            table.get 0
            f64.const -0x1.a4624c26d25b6p-818 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009394414829363254;)
            f64.ceil
            f64.floor
            loop (type 35) (result f64) ;; label = @5
              table.size 0
              table.size 0
              call 0
              nop
              table.size 0
              f32.convert_i64_s
              local.get 0
              f32.convert_i64_s
              f64.const 0x1.5f0f2e74be0c1p+993 (;=114795857050262410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
              table.size 0
              f64.const -inf (;=-inf;)
              f64.const -nan:0xff7ffffffffff (;=NaN;)
              f64.gt
              if (result f32) ;; label = @6
                i64.const 3596398514973047713
                i64.eqz
                f64.const -0x1.fffffffffffffp+960 (;=-19490628022799996000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                data.drop 0
                try_table (type 12) (result i32) (catch 3 6) (catch 3 2 (;@4;)) (catch 3 5 (;@1;)) (catch 4 4 (;@2;)) (catch 3 6) ;; label = @7
                  f64.const -0x1.70c2ce89acd71p+84 (;=-27862790666605000000000000;)
                  struct.new_default 3
                  ref.test (ref none)
                  i32.extend16_s
                  struct.new_default 32
                  br_on_null 7
                  nop
                  unreachable
                end
                unreachable
              else
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
  )
  (func (;1;) (type 4) (result i64)
    unreachable
  )
  (data (;0;) "\9fX9\18n\d5")
)
