(module
  (rec
    (type (;0;) (func (param f32 f32 f32 i64 f64 i64 arrayref f64 i64) (result i32 f64)))
    (type (;1;) (sub (func (param externref))))
    (type (;2;) (struct (field (mut i16)) (field i31ref) (field i8) (field i16) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut externref)) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field i64) (field i16)))
    (type (;3;) (func))
    (type (;4;) (sub (struct (field i8) (field i8) (field (mut i64)) (field (mut i16)) (field (mut f32)) (field (mut i16)))))
    (type (;5;) (array i16))
    (type (;6;) (func (param i64 f64) (result f32)))
    (type (;7;) (sub (struct (field (mut i8)) (field (mut i32)) (field i8) (field i16) (field f64) (field (mut i8)) (field i8) (field i8) (field i8))))
    (type (;8;) (array i8))
    (type (;9;) (sub (struct (field i8) (field (mut i16)) (field i8))))
    (type (;10;) (sub 4 (struct (field i8) (field i8) (field (mut i64)) (field (mut i16)) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field nullfuncref) (field i16))))
    (type (;11;) (array i32))
    (type (;12;) (sub (func)))
    (type (;13;) (sub (func)))
    (type (;14;) (sub (struct (field (mut i32)) (field (mut i32)) (field f32) (field i8) (field i8) (field (mut i16)))))
    (type (;15;) (struct (field (mut f64)) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field anyref) (field i16) (field (mut f32)) (field f64) (field i64)))
    (type (;16;) (array (mut i16)))
    (type (;17;) (array f64))
    (type (;18;) (sub (struct (field (mut i16)) (field i8) (field i64) (field funcref) (field (mut i16)) (field (ref null 11)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field i8) (field anyref) (field (mut i8)) (field (mut i8)) (field (mut i32)) (field i16) (field (mut i8)))))
    (type (;19;) (struct (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut (ref null 3))) (field (mut i8)) (field i16)))
    (type (;20;) (struct (field (mut i64)) (field (mut i16)) (field (mut i16)) (field i16) (field f32) (field i8) (field (mut i8)) (field (mut i16)) (field i8)))
    (type (;21;) (sub (array i32)))
    (type (;22;) (sub (array (mut i64))))
    (type (;23;) (sub (struct (field i16) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i16) (field i64))))
    (type (;24;) (struct (field (mut i8)) (field i16) (field i8) (field f64) (field (mut i16)) (field f64) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i32)) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut exnref)) (field (mut i16)) (field (mut i8))))
    (type (;25;) (sub (array (mut i8))))
    (type (;26;) (func (result i32)))
    (type (;27;) (array i31ref))
    (type (;28;) (struct (field (mut i16)) (field (mut i32)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (ref null 18)) (field f64) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field i8) (field (mut i16)) (field (mut i16)) (field i32) (field (mut i16)) (field (mut i16)) (field (mut i8))))
    (type (;29;) (sub (func (param f32))))
    (type (;30;) (struct (field externref) (field (mut (ref null 12))) (field i8) (field (mut i8)) (field i8) (field i64) (field (mut funcref)) (field i8) (field i32) (field i32) (field i16) (field (mut i8)) (field i16) (field i8) (field i16)))
    (type (;31;) (sub (func (param (ref null 4) structref i32))))
    (type (;32;) (sub (struct (field (mut i32)) (field i64) (field i32) (field i16) (field f32) (field (mut i16)) (field (mut i8)) (field (mut i32)) (field f64) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (ref null 25)) (field (mut i16)) (field (mut i16)) (field (mut (ref null 16))) (field (mut i32)) (field i32))))
    (type (;33;) (sub (func (param externref f32 i32))))
    (type (;34;) (struct (field (mut i8)) (field (mut i8)) (field exnref) (field (mut (ref null 24))) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field f32) (field (mut i16)) (field i64) (field i8) (field (mut i8)) (field (mut nullexternref))))
    (type (;35;) (sub (func (result i64))))
    (type (;36;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field (mut i64)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field nullref) (field (mut i8)) (field (mut i16)))))
    (type (;37;) (sub final 14 (struct (field (mut i32)) (field (mut i32)) (field f32) (field i8) (field i8) (field (mut i16)) (field (mut nullexternref)) (field (mut i16)) (field i16) (field (mut nullfuncref)))))
    (type (;38;) (sub 9 (struct (field i8) (field (mut i16)) (field i8) (field (mut f32)) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field (mut i8)))))
    (type (;39;) (sub (func)))
    (type (;40;) (sub (array i16)))
    (type (;41;) (sub (array i16)))
    (type (;42;) (array (mut i32)))
    (type (;43;) (func (param i32)))
    (type (;44;) (sub (func (param f32))))
  )
  (table (;0;) 86 anyref ref.null 22)
  (memory (;0;) i64 0)
  (tag (;0;) (type 39))
  (tag (;1;) (type 44) (param f32))
  (global (;0;) (mut f32) f32.const -0x1.827fdp+13 (;=-12367.977;))
  (start 5)
  (func (;0;) (type 35) (result i64)
    block (type 12) ;; label = @1
    end
    block (type 35) (result i64) ;; label = @1
      return_call 0
      i32.wrap_i64
      nop
      i64.extend_i32_u
      i64.load32_s align=2
      f64.reinterpret_i64
      block (type 12) ;; label = @2
        try_table (type 13) (catch 0 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch 0 0 (;@2;)) ;; label = @3
          ref.null 37
          i32.const -3
          ref.null 27
          extern.convert_any
          block (type 35) (result i64) ;; label = @4
            ref.null 8
            ref.test (ref 8)
            i64.const -8796093022209
            memory.size
            i32.load8_u
            i64.const -72057594037927936
            i64.ctz
            i64.extend8_s
            f64.reinterpret_i64
            f64.floor
            f64.nearest
            i32.trunc_f64_s
            i32.mul
            if (type 35) (result i64) ;; label = @5
              loop ;; label = @6
                block (type 39) ;; label = @7
                  global.get 0
                  f32.ceil
                  data.drop 0
                  br 4 (;@3;)
                  i64.trunc_sat_f32_s
                  return
                  try_table (type 26) (result i32) (catch 0 0 (;@7;)) (catch_all 0 (;@7;)) ;; label = @8
                    try_table (result f64) (catch 0 5 (;@3;)) ;; label = @9
                      f32.const 0x0p+0 (;=0;)
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
              end
              unreachable
            else
              unreachable
            end
            unreachable
          end
          unreachable
        end
      end
      unreachable
    end
  )
  (func (;1;) (type 3))
  (func (;2;) (type 1) (param externref))
  (func (;3;) (type 44) (param f32))
  (func (;4;) (type 43) (param i32))
  (func (;5;) (type 13))
  (data (;0;) "\f1$C")
  (data (;1;) "")
)
