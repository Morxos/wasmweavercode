(module
  (rec
    (type (;0;) (func (param f32) (result f64 f32)))
    (type (;1;) (func (param f64 f64)))
    (type (;2;) (sub (struct)))
    (type (;3;) (struct (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut nullref)) (field i16) (field i64) (field (mut i16)) (field (mut f64)) (field i32) (field f32) (field (mut i16)) (field f64) (field i8)))
    (type (;4;) (sub (array i8)))
    (type (;5;) (sub (struct (field i8) (field (mut i8)) (field (mut i8)) (field i32) (field (mut i16)) (field f32) (field f32) (field i8) (field i8) (field (mut i16)))))
    (type (;6;) (func (param nullexternref) (result f64)))
    (type (;7;) (sub (struct (field i16) (field (mut i8)) (field (mut f32)) (field i8) (field f64) (field (mut i64)) (field (mut i64)) (field (mut i8)) (field i64) (field (mut i8)) (field i64) (field i16) (field i32) (field (mut i16)) (field f32) (field (mut i8)))))
    (type (;8;) (struct (field i64) (field i32) (field i16) (field (mut i8)) (field i16)))
    (type (;9;) (array f32))
    (type (;10;) (struct (field i16) (field (mut i8))))
    (type (;11;) (func (result f64)))
    (type (;12;) (struct (field (mut i8)) (field i8) (field (mut f32)) (field i16) (field (mut i64)) (field i8) (field f64) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field (mut i64)) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field anyref)))
    (type (;13;) (sub 4 (array i8)))
    (type (;14;) (func (result i64 f32 i64 i64 i64 i32 f32 i64)))
    (type (;15;) (struct (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field f64) (field (mut i16))))
    (type (;16;) (sub (array i8)))
    (type (;17;) (array (mut arrayref)))
    (type (;18;) (sub (struct (field (mut f64)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field f32) (field (mut i8)) (field i32) (field (mut i8)) (field i8) (field i16) (field (mut i16)) (field i16) (field f64) (field (mut i16)) (field (mut i8)))))
    (type (;19;) (sub 7 (struct (field i16) (field (mut i8)) (field (mut f32)) (field i8) (field f64) (field (mut i64)) (field (mut i64)) (field (mut i8)) (field i64) (field (mut i8)) (field i64) (field i16) (field i32) (field (mut i16)) (field f32) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field i16) (field externref))))
    (type (;20;) (struct (field (mut i16)) (field i16) (field f32) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut nullref)) (field i64) (field i32) (field i32) (field i8) (field (mut i16)) (field i64)))
    (type (;21;) (sub (array (mut i8))))
    (type (;22;) (sub (func (param f32))))
    (type (;23;) (struct (field f32) (field i8) (field i31ref) (field i8) (field (mut f64)) (field i8) (field i16) (field i8) (field i8) (field i8) (field (mut f32)) (field (mut (ref null 17))) (field (mut i8)) (field (mut i8))))
    (type (;24;) (func (param f32 structref)))
    (type (;25;) (func (result f32 f64)))
    (type (;26;) (sub (func)))
    (type (;27;) (func))
    (type (;28;) (struct (field i8) (field i64) (field i16) (field (mut i64)) (field i64) (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field i8) (field i64) (field (mut i16)) (field (ref null 13)) (field f32) (field f64) (field f64) (field (mut f64))))
    (type (;29;) (sub (func (param f32 f64) (result i64))))
    (type (;30;) (sub (func (param f32 (ref null 7)) (result i31ref i64))))
    (type (;31;) (sub (struct (field i8) (field (mut i8)) (field (mut i8)) (field i32) (field i8) (field i8) (field f64) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)))))
    (type (;32;) (sub (array i64)))
    (type (;33;) (struct (field i8) (field (mut i8)) (field i8) (field nullexternref) (field i16) (field i8) (field (mut i8)) (field (mut i32)) (field (ref null 32)) (field (mut i8)) (field f64) (field i31ref) (field f64) (field (mut i32)) (field (mut i8)) (field i8) (field i16)))
  )
  (import "mD" "" (tag (;0;) (type 27)))
  (import "" "" (global (;0;) (mut i32)))
  (import "" "" (func (;0;) (type 30)))
  (table (;0;) i64 2159 (ref null 3) ref.null 3)
  (tag (;1;) (type 1) (param f64 f64))
  (tag (;2;) (type 24) (param f32 structref))
  (tag (;3;) (type 22) (param f32))
  (tag (;4;) (type 26))
  (tag (;5;) (type 26))
  (tag (;6;) (type 26))
  (tag (;7;) (type 22) (param f32))
  (tag (;8;) (type 24) (param f32 structref))
  (global (;1;) (mut i32) i32.const -1005152703 i32.const 21634057 i32.const -1216656225 i32.const 232267888 i32.const 1649154367 i32.const -804572468 i32.const -171483040 i32.add i32.add i32.sub i32.const -1249274319 i32.sub i32.mul i32.mul i32.add i32.const 1798975199 i32.sub)
  (export "" (func 1))
  (export "1" (table 0))
  (export "y" (global 1))
  (start 1)
  (elem (;0;) (table 0) (i64.const 414) (ref null 3) (ref.null none) (ref.null none))
  (func (;1;) (type 27)
    global.get 0
    elem.drop 0
    f32.convert_i32_u
    f32.sqrt
    loop (type 27) ;; label = @1
      br 0 (;@1;)
      loop (type 27) ;; label = @2
        f64.const 0x1.0cb0b8498e205p-1015 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002989278946342494;)
        global.get 0
        ref.null exn
        ref.test (ref exn)
        i32.rotl
        br_table 0 (;@2;) 1 (;@1;) 2 0 (;@2;)
        loop (type 25) (result f32 f64) ;; label = @3
          f64.const -0x1.0975afff1bb1bp+681 (;=-10403649408061020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
          loop ;; label = @4
            ref.null 32
            elem.drop 0
            loop (type 11) (result f64) ;; label = @5
              f32.const -nan:0x600000 (;=NaN;)
              i32.trunc_sat_f32_u
              array.new_fixed 16 0
              br_on_null 2 (;@3;)
              br_on_null 1 (;@4;)
              ref.as_non_null
              struct.new_default 12
              global.get 1
              f64.convert_i32_s
              f64.trunc
              ref.null 32
              struct.new_default 23
              struct.get_u 23 13
              f32.convert_i32_s
              i64.trunc_sat_f32_s
              block (type 14) (result i64 f32 i64 i64 i64 i32 f32 i64) ;; label = @6
                struct.new_default 23
                elem.drop 0
                try_table (type 27) (catch 4 4 (;@2;)) ;; label = @7
                  f32.const -0x1.47b2eep-42 (;=-0.00000000000029105513;)
                  f32.const -nan:0x7ffffb (;=NaN;)
                  i32.trunc_f32_s
                  global.get 1
                  return_call 1
                  i32.div_u
                  br_table 0 (;@7;) 2 (;@5;) 3 (;@4;) 4 (;@3;) 5 (;@2;) 6 (;@1;) 7 3 (;@4;)
                  i32.reinterpret_f32
                  i32.popcnt
                  struct.new_default 12
                  struct.new 2
                  f32.const 0x1.dcbd46p-26 (;=0.000000027749882;)
                  loop (type 26) ;; label = @8
                    br 6 (;@2;)
                    ref.null exn
                    global.get 0
                    block ;; label = @9
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
    end
    unreachable
  )
)
