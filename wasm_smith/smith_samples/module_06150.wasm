(module
  (rec
    (type (;0;) (func (result f32 i32 structref f32 exnref externref)))
    (type (;1;) (sub (struct (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field (mut f32)) (field i16) (field (mut i16)) (field i8) (field (mut f32)) (field i32) (field f32) (field i16) (field (mut i32)) (field (mut i16)) (field i8))))
    (type (;2;) (array (mut i16)))
    (type (;3;) (sub (struct (field (mut i32)) (field i32) (field i16) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field funcref) (field (mut exnref)))))
    (type (;4;) (sub (array i16)))
    (type (;5;) (sub (struct (field (mut i8)) (field (mut nullfuncref)))))
    (type (;6;) (sub (struct (field (mut i32)) (field i16) (field i8) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8) (field f32))))
    (type (;7;) (array f32))
    (type (;8;) (func))
    (type (;9;) (array anyref))
    (type (;10;) (struct (field i64) (field i8) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field i16) (field i8) (field (mut f32)) (field i8) (field i8) (field (mut i64)) (field (mut i16)) (field (mut i64)) (field f32) (field i8) (field (mut i8))))
    (type (;11;) (struct (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8)) (field i32) (field (mut i16)) (field f32) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut i32)) (field i8) (field i16) (field (mut i32))))
    (type (;12;) (sub (array (mut i8))))
    (type (;13;) (sub (array (mut i8))))
    (type (;14;) (func (result f32 f32)))
    (type (;15;) (sub (array i8)))
    (type (;16;) (sub (func (param i64))))
    (type (;17;) (struct (field (mut f64)) (field i16) (field i16) (field i16) (field i8) (field i16) (field (mut i8)) (field (mut f32))))
    (type (;18;) (struct (field i8) (field (mut i8)) (field (mut i16)) (field f32)))
    (type (;19;) (sub (array (mut i8))))
    (type (;20;) (func (param (ref null 9))))
    (type (;21;) (struct (field i16) (field (mut i8)) (field i16) (field i32) (field i16) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field i8) (field i8) (field i16) (field (mut i32)) (field i16) (field (mut i8)) (field i16) (field i8) (field (mut i32)) (field (mut i16))))
    (type (;22;) (sub (array (mut i16))))
    (type (;23;) (struct (field f32) (field (mut f32)) (field (mut i8)) (field i8) (field f32) (field (mut i8)) (field f32) (field i8) (field (mut f32)) (field i16) (field (mut i8)) (field (mut f32)) (field i32) (field (mut (ref null 8))) (field f64) (field i8) (field (mut i32)) (field (mut i16))))
    (type (;24;) (struct (field (mut i16)) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)) (field (ref null 18)) (field (mut i8)) (field i8)))
    (type (;25;) (sub (func (result f64 i32 i32 f32 f32))))
    (type (;26;) (array i16))
    (type (;27;) (sub (struct (field i8) (field i8) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i16)) (field anyref) (field i16) (field i32) (field f64))))
    (type (;28;) (sub (array f64)))
    (type (;29;) (sub (func (param i64 i32) (result (ref null 5)))))
    (type (;30;) (sub (func (result f64 f32 f64 f32 (ref null 2) f64 f64 i64))))
    (type (;31;) (sub (struct (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field (mut f64)) (field i16) (field (mut i32)) (field i16) (field i16))))
    (type (;32;) (sub (struct (field i16) (field (mut f32)) (field (mut i16)) (field i8) (field i8) (field (mut i32)) (field f32) (field (mut f32)) (field i16) (field i64) (field (mut i8)) (field i16) (field (mut i16)))))
    (type (;33;) (sub (struct (field (mut i8)) (field i8) (field (mut f64)) (field (mut i16)) (field i8) (field i8) (field (mut f64)) (field i16) (field i8) (field i16))))
    (type (;34;) (func (param f64)))
    (type (;35;) (array (mut i16)))
    (type (;36;) (array f64))
    (type (;37;) (sub (array (mut i32))))
    (type (;38;) (struct (field (mut i8)) (field (mut arrayref)) (field (mut i16)) (field (mut i64)) (field i8) (field (mut i16)) (field i32) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut f32)) (field (mut f64)) (field i16) (field (mut i16)) (field i64) (field f64)))
    (type (;39;) (func (param i64)))
    (type (;40;) (sub (struct (field (mut i64)) (field (mut i16)) (field i16))))
    (type (;41;) (func))
    (type (;42;) (struct (field (mut i8))))
    (type (;43;) (func (result f64 i32 i32 i32)))
    (type (;44;) (array (mut i16)))
    (type (;45;) (array i16))
    (type (;46;) (struct (field i16) (field (mut i8)) (field (mut i16)) (field f32) (field f64) (field i64) (field i8) (field (mut i8)) (field (mut i16)) (field structref) (field (mut i16)) (field i8) (field (mut i8)) (field (mut f32)) (field i8) (field (mut i16)) (field i64)))
  )
  (import "" "" (func (;0;) (type 25)))
  (import "" "" (table (;0;) i64 2080 736958 nullref))
  (memory (;0;) i64 5 114336298077468)
  (tag (;0;) (type 41))
  (tag (;1;) (type 41))
  (func (;1;) (type 16) (param i64)
    f32.const 0x1.a69fc4p-89 (;=0.000000000000000000000000002667133;)
    f32.ceil
    i32.trunc_f32_u
    i32.extend16_s
    table.size 0
    i32.wrap_i64
    i64.extend_i32_s
    data.drop 0
    return_call 1
    data.drop 0
    br 0
    table.size 0
    struct.new_default 10
    try_table (type 25) (result f64 i32 i32 f32 f32) (catch 0 0) (catch 0 0) (catch 0 0) (catch 0 0) (catch 1 0) (catch 0 0) (catch 1 0) (catch_all 0) (catch_all 0) ;; label = @1
      struct.new_default 33
      ref.cast (ref none)
      local.get 0
      i64.extend16_s
      i64.clz
      f64.load offset=293583 align=4
      f32.const 0x1.ffffp-133 (;=0.00000000000000000000000000000000000000018367;)
      i32.trunc_sat_f32_s
      i32.clz
      i64.extend_i32_u
      try_table (type 16) (param i64) (catch 1 1) (catch_all 1) (catch 1 1) ;; label = @2
        i64.extend32_s
        call 0
        i64.const 274877906944
        ref.null 21
        table.size 0
        i64.load32_s offset=3834 align=1
        i64.ctz
        block (type 25) (result f64 i32 i32 f32 f32) ;; label = @3
          try_table (type 0) (result f32 i32 structref f32 exnref externref) (catch 1 1 (;@2;)) (catch 0 1 (;@2;)) (catch_all 3) ;; label = @4
            f64.const 0x0p+0 (;=0;)
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) (i64.const 37) "")
)
