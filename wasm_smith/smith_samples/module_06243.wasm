(module
  (rec
    (type (;0;) (sub (struct (field (mut i64)) (field (mut anyref)) (field f64) (field f64) (field (mut f64)) (field i32) (field i16) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field i16) (field (mut i8)) (field (mut f64)) (field (mut i32)) (field (mut i8)))))
    (type (;1;) (sub (func (result i32 i32 i64 i32 i32))))
    (type (;2;) (sub (array i8)))
    (type (;3;) (struct (field (mut i8)) (field f64) (field i8) (field i64) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field i16) (field i8) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i16)) (field i32) (field i8) (field (mut f64)) (field (mut i8)) (field f64)))
    (type (;4;) (sub (struct (field (mut i8)) (field i32) (field i8) (field i16) (field i64) (field i8) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i32)))))
    (type (;5;) (sub final 4 (struct (field (mut i8)) (field i32) (field i8) (field i16) (field i64) (field i8) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field (mut f64)) (field i32))))
    (type (;6;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i32)) (field i16) (field (mut i8)) (field f32))))
    (type (;7;) (struct (field (mut f32)) (field exnref) (field i8) (field i32) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field i32)))
    (type (;8;) (struct (field f64) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut externref)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i64) (field (mut anyref)) (field (mut i8)) (field (mut i8))))
    (type (;9;) (array f64))
    (type (;10;) (func (result f64)))
    (type (;11;) (sub (func (param eqref f32 f32 f64) (result i32 f64))))
    (type (;12;) (func (result exnref f64)))
    (type (;13;) (sub (func)))
    (type (;14;) (sub (struct (field i8) (field (mut funcref)) (field i8) (field (mut f32)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field i16) (field i16))))
    (type (;15;) (sub (struct (field (mut i32)) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field i8) (field i32) (field f32) (field (mut nullref)) (field (mut i16)) (field i16) (field i16) (field i64) (field i8) (field i16))))
    (type (;16;) (func (result eqref)))
    (type (;17;) (struct (field f64) (field i16) (field (mut i8)) (field i16) (field i8) (field (mut i16)) (field i16) (field (mut f32)) (field eqref) (field f32) (field (mut i8)) (field (mut i16)) (field i8) (field (mut f64)) (field (mut i8)) (field (mut i16))))
    (type (;18;) (array (mut f64)))
    (type (;19;) (array i16))
    (type (;20;) (sub (array i16)))
    (type (;21;) (sub (array i8)))
    (type (;22;) (func (param f32 i32) (result f64)))
    (type (;23;) (sub (array (mut i31ref))))
    (type (;24;) (array (mut f64)))
    (type (;25;) (func))
    (type (;26;) (array i8))
    (type (;27;) (sub (array (mut i8))))
    (type (;28;) (array i16))
    (type (;29;) (sub (func (result (ref null 18)))))
    (type (;30;) (sub (func (param f32) (result i64 i32))))
    (type (;31;) (struct (field (mut i16)) (field i64) (field (mut i16)) (field i8) (field i8) (field (mut f32)) (field (mut i16)) (field f64) (field i16) (field (mut f64)) (field anyref) (field (mut i16)) (field i8) (field i16) (field i16) (field i32) (field (mut i8)) (field (mut anyref))))
    (type (;32;) (array (mut i8)))
    (type (;33;) (array (mut i8)))
    (type (;34;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut f32)) (field i32) (field (mut i8)) (field (mut i16)) (field nullref) (field (mut i16)) (field f32))))
    (type (;35;) (sub (array (mut i8))))
    (type (;36;) (array (mut i16)))
    (type (;37;) (array (mut f64)))
    (type (;38;) (func (param structref) (result f32)))
    (type (;39;) (sub (func (result eqref exnref f64))))
    (type (;40;) (sub (func (result f64 i64))))
    (type (;41;) (func (param f32)))
    (type (;42;) (sub final 23 (array (mut i31ref))))
    (type (;43;) (sub (array (mut i8))))
    (type (;44;) (struct (field i16) (field i16) (field i16) (field i16) (field (mut i8)) (field (mut arrayref)) (field (ref null 41)) (field (mut i8)) (field (mut i8)) (field (mut i8))))
    (type (;45;) (array i16))
    (type (;46;) (struct (field (mut i16))))
    (type (;47;) (sub (func (param f32) (result i32 f64 funcref f32))))
    (type (;48;) (sub (struct (field i8) (field (mut i16)) (field (mut f64)) (field i16))))
    (type (;49;) (array (mut i8)))
    (type (;50;) (sub (array (mut i16))))
    (type (;51;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut externref)) (field f64) (field f64) (field i16) (field i16) (field (mut i16)) (field (mut eqref)) (field f32) (field i64) (field f64) (field f64) (field (mut f64)) (field (mut i16)))))
    (type (;52;) (func (result nullexternref)))
    (type (;53;) (sub (struct (field i8) (field (mut f64)) (field i8) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i64)) (field f64) (field i32) (field (mut i32)) (field (mut f32)) (field (mut f32)) (field i16) (field (ref null 46)) (field (mut i8)) (field (mut i32)))))
    (type (;54;) (struct (field i8)))
    (type (;55;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i8)))))
    (type (;56;) (sub (array i16)))
    (type (;57;) (sub (struct (field i8) (field i8) (field (mut (ref null 1))) (field anyref) (field i16) (field i16) (field f32))))
    (type (;58;) (sub (func (param f64) (result f64 i64))))
    (type (;59;) (sub (func)))
    (type (;60;) (struct (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field i64) (field i8) (field i16) (field i8) (field (mut i8)) (field i16) (field i8) (field i8)))
    (type (;61;) (sub (array i16)))
    (type (;62;) (sub (func)))
    (type (;63;) (array (mut i16)))
    (type (;64;) (sub (array eqref)))
  )
  (import "@" "" (func (;0;) (type 41)))
  (table (;0;) i64 14 (ref null 59) ref.null 59)
  (memory (;0;) i64 0)
  (tag (;0;) (type 62))
  (tag (;1;) (type 59))
  (elem (;0;) (ref null 41) (ref.func 0))
  (elem (;1;) declare funcref)
  (func (;1;) (type 25))
)
