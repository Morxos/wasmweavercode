(module
  (rec
    (type (;0;) (func (param funcref i32 i64 f64 i32 i64 exnref)))
    (type (;1;) (array (mut i8)))
    (type (;2;) (sub (func (param f64) (result i64 i64 i64))))
    (type (;3;) (array nullref))
    (type (;4;) (sub (array (mut i16))))
    (type (;5;) (sub (func (param f64 f64))))
    (type (;6;) (sub (array (mut nullref))))
    (type (;7;) (array i8))
    (type (;8;) (sub (struct (field (mut i32)) (field (mut i16)) (field i16) (field (mut i8)) (field f32) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)))))
    (type (;9;) (func (param eqref i64)))
    (type (;10;) (array i8))
    (type (;11;) (sub (struct (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field i8) (field (mut i32)) (field i8) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i8)))))
    (type (;12;) (func))
    (type (;13;) (sub (struct (field (mut i32)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut anyref)) (field i16) (field i32) (field i16) (field (mut i16)) (field (mut i32)) (field i32) (field i32) (field (mut i64)))))
    (type (;14;) (struct (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field i64) (field (mut i16)) (field (mut i16)) (field arrayref) (field (mut i16)) (field (mut f64)) (field i8) (field (mut i16)) (field i32) (field (mut f32)) (field i8)))
    (type (;15;) (sub (func)))
    (type (;16;) (sub 13 (struct (field (mut i32)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut anyref)) (field i16) (field i32) (field i16) (field (mut i16)) (field (mut i32)) (field i32) (field i32) (field (mut i64)) (field (mut i8)) (field i8))))
    (type (;17;) (array (mut i16)))
    (type (;18;) (sub (struct)))
    (type (;19;) (struct (field (mut f32)) (field i16) (field i8) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field i16) (field i8) (field (mut i8))))
    (type (;20;) (sub (struct (field i8) (field i16) (field (mut f64)) (field i8) (field i32) (field (mut i8)) (field i8))))
    (type (;21;) (struct (field i16) (field i16) (field (mut i64)) (field exnref) (field i8) (field eqref) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field i8) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field i32) (field i64)))
    (type (;22;) (sub (func (param i64))))
    (type (;23;) (sub (func (param f32) (result i32))))
    (type (;24;) (array i16))
    (type (;25;) (struct (field (mut f64)) (field (mut i8)) (field i8) (field i16) (field (mut i16)) (field f64) (field (ref null 21)) (field i16) (field (mut i16)) (field f32) (field i16)))
    (type (;26;) (array (mut i8)))
    (type (;27;) (sub (struct (field i16) (field (mut f64)) (field i32) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field f32) (field i64) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field f64) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i32)))))
    (type (;28;) (sub (array (mut i8))))
    (type (;29;) (sub (struct (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field f32) (field (mut i8)) (field i16) (field (mut f32)) (field (mut i32)) (field (mut i8)))))
    (type (;30;) (sub (array (ref null 9))))
    (type (;31;) (sub (func (param eqref i32) (result i64))))
    (type (;32;) (struct (field i8) (field f32) (field (mut i32)) (field (mut i32)) (field (mut i32))))
  )
  (import "" "" (table (;0;) 25 nullref))
  (memory (;0;) 0)
  (global (;0;) i32 i32.const -1969755056)
  (export "3\u{1}]" (func 2))
  (elem (;0;) (table 0) (global.get 0) nullref (ref.null none))
  (elem (;1;) declare (ref null 16))
  (elem (;2;) (table 0) (i32.const 0) nullref (ref.null none) (ref.null none))
  (func (;0;) (type 5) (param f64 f64)
    br 0
    memory.size
    loop (type 12) ;; label = @1
      f64.const 0x1p-991 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004778309726736481;)
      f64.nearest
      f64.sqrt
      i32.trunc_f64_s
      i32.load
      ref.i31
      memory.size
      return_call 2
      if ;; label = @2
        try_table (type 15) (catch_all 1 (;@1;)) (catch_all 2) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) ;; label = @3
          f64.const -0x1.c554b7d7172dp-878 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008786971000914554;)
          ref.null 27
          f32.const -nan:0x3fffff (;=NaN;)
          struct.new_default 14
          i32.const -131073
          if (result f32) ;; label = @4
            data.drop 0
            data.drop 0
            table.size 0
            array.new_default 6
            ref.test (ref 6)
            local.get 1
            i64.trunc_sat_f64_u
            f64.const 0x1.515bd87c6ac05p-107 (;=0.000000000000000000000000000000008121617014003533;)
            f64.neg
            f64.ceil
            f64.neg
            table.size 0
            table.get 0
            try_table (type 15) (catch_all 2 (;@2;)) (catch_all 3 (;@1;)) (catch_all 3 (;@1;)) (catch_all 1 (;@3;)) (catch_all 2 (;@2;)) (catch_all 2 (;@2;)) ;; label = @5
              elem.drop 1
              f64.const -nan:0xfffff7fffffff (;=NaN;)
              f64.abs
              i32.trunc_f64_u
              f64.convert_i32_s
              return_call 2
              f64.ceil
              local.set 0
              br 3 (;@2;)
              try_table (result i32) (catch_all 0 (;@5;)) (catch_all 3 (;@2;)) (catch_all 0 (;@5;)) (catch_all 3 (;@2;)) (catch_all 0 (;@5;)) (catch_all 2 (;@3;)) (catch_all 4 (;@1;)) (catch_all 5) (catch_all 0 (;@5;)) ;; label = @6
                i32.const -134217728
                br_table 1 (;@5;) 3 (;@3;) 4 (;@2;) 5 (;@1;) 6 4 (;@2;)
                global.get 0
                i32.const 1609927824
                data.drop 1
                data.drop 0
                i32.load16_u align=1
                i32.rotl
                return_call 2
                f64.load align=4
                i32.trunc_f64_s
                if (type 12) ;; label = @7
                  br 4 (;@3;)
                  i32.const 1048576
                  i64.load align=2
                  i64.popcnt
                  br 7
                  return_call 2
                  struct.new 18
                  struct.new 18
                  f64.const -nan:0xffffffffff800 (;=NaN;)
                  i64.trunc_f64_s
                  ref.null 25
                  data.drop 0
                  try_table (catch_all 7) (catch_all 2 (;@5;)) (catch_all 0 (;@7;)) (catch_all 4 (;@3;)) ;; label = @8
                  end
                  br_on_null 4 (;@3;)
                  br 5 (;@2;)
                  f64.const -nan:0xf000000000000 (;=NaN;)
                  br 2 (;@5;)
                  call 2
                  f64.neg
                  data.drop 0
                  data.drop 1
                  struct.new_default 18
                  block (type 12) ;; label = @8
                    br 0 (;@8;)
                    elem.drop 0
                    memory.size
                    i64.load offset=2103698575 align=4
                    block (type 12) ;; label = @9
                      br 8 (;@1;)
                      loop ;; label = @10
                        table.size 0
                        f32.const -0x1.33113ep-69 (;=-0.0000000000000000000020320013;)
                        i32.trunc_f32_s
                        unreachable
                        unreachable
                      end
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          else
            unreachable
          end
          unreachable
        end
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 9) (param eqref i64))
  (func (;2;) (type 15))
  (data (;0;) "")
  (data (;1;) "")
)
