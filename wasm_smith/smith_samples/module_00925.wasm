(module
  (rec
    (type (;0;) (array i16))
    (type (;1;) (sub (array i8)))
    (type (;2;) (func (param funcref)))
    (type (;3;) (array (mut f32)))
    (type (;4;) (sub (array i32)))
    (type (;5;) (sub (struct (field (mut i64)) (field i32) (field i16) (field (mut f32)) (field i16) (field i8))))
    (type (;6;) (struct (field (mut i8)) (field i16) (field (mut nullexternref))))
    (type (;7;) (sub (func)))
    (type (;8;) (sub (func)))
    (type (;9;) (func (param f32)))
    (type (;10;) (sub (struct (field f64) (field f32) (field i8) (field (mut i16)) (field i64) (field externref) (field i8) (field (ref null 6)) (field arrayref) (field (mut f64)) (field f32) (field (mut i16)) (field i8) (field (mut i16)))))
    (type (;11;) (sub (array i16)))
    (type (;12;) (sub (array (mut f32))))
    (type (;13;) (sub (struct (field anyref) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field f64))))
    (type (;14;) (sub final 12 (array (mut f32))))
    (type (;15;) (struct (field i16)))
    (type (;16;) (sub (array f32)))
    (type (;17;) (func (param f32) (result f64)))
    (type (;18;) (sub (func (param f64) (result i64 i64))))
    (type (;19;) (sub (struct (field (mut i8)) (field (mut i16)))))
    (type (;20;) (func (result i32 i31ref)))
    (type (;21;) (sub (array (mut i8))))
    (type (;22;) (sub (struct (field (mut i8)) (field i64) (field (mut i8)) (field (mut nullexternref)) (field (mut i64)))))
    (type (;23;) (func (param (ref null 22)) (result f64)))
    (type (;24;) (sub (func (param f64 nullexternref) (result f64 i32 f64))))
    (type (;25;) (sub (array i16)))
    (type (;26;) (sub (struct (field (mut i16)) (field (mut i16)) (field f64))))
    (type (;27;) (sub (struct (field (mut i16)) (field i16))))
    (type (;28;) (sub (array i8)))
    (type (;29;) (sub (struct (field f32) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8))))
    (type (;30;) (sub (struct (field i32))))
    (type (;31;) (sub (struct (field i16) (field i8) (field (mut i16)) (field i8) (field eqref) (field (mut i16)) (field exnref) (field i8) (field i8) (field i8) (field (mut i32)))))
    (type (;32;) (func))
    (type (;33;) (sub (array (mut eqref))))
    (type (;34;) (func (param i32 i64 i32) (result nullexternref)))
    (type (;35;) (func (result i32)))
    (type (;36;) (func))
    (type (;37;) (sub (struct (field i16) (field i8) (field (mut i8)) (field i8) (field (mut i8)) (field i8) (field (mut i8)))))
    (type (;38;) (sub (func)))
    (type (;39;) (func))
    (type (;40;) (sub (func (result f64 i32))))
    (type (;41;) (func (param f32) (result (ref null 19))))
    (type (;42;) (sub (array i8)))
    (type (;43;) (sub (array i8)))
    (type (;44;) (sub final 33 (array (mut eqref))))
    (type (;45;) (sub (func)))
    (type (;46;) (array (mut i8)))
    (type (;47;) (func))
    (type (;48;) (struct (field (mut i32)) (field (mut i16)) (field i16) (field i16) (field (mut f32)) (field f64) (field i16) (field (mut i16)) (field (mut i31ref)) (field (mut i64)) (field (mut i8)) (field i8)))
    (type (;49;) (array i8))
    (type (;50;) (sub (struct (field (mut f64)) (field i32) (field (mut i32)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i16)) (field funcref) (field i32) (field i8) (field nullref) (field (mut i16)))))
    (type (;51;) (sub (array (mut i8))))
    (type (;52;) (sub (array i16)))
    (type (;53;) (func))
    (type (;54;) (sub (array i64)))
    (type (;55;) (sub (array (mut i8))))
    (type (;56;) (array (mut anyref)))
    (type (;57;) (array i8))
    (type (;58;) (struct (field structref) (field (ref null 3)) (field (mut f32)) (field i16) (field f32) (field f32) (field i8) (field i8) (field i16) (field i8) (field i16) (field i16) (field (mut i32)) (field f32) (field (mut f64)) (field (mut (ref null 31))) (field (mut i32)) (field i32) (field (mut f32)) (field i32)))
    (type (;59;) (sub (array (mut i16))))
    (type (;60;) (func (param funcref i32) (result f32 i32 i64 (ref null 14))))
    (type (;61;) (sub (array i16)))
    (type (;62;) (sub (func)))
    (type (;63;) (struct (field i16) (field (mut i8)) (field (mut i64)) (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field i32) (field (mut i8)) (field i8) (field arrayref) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field f32)))
    (type (;64;) (sub (struct (field (mut i8)) (field i8) (field i16) (field (mut f32)) (field (mut i8)) (field i16) (field (mut f32)))))
    (type (;65;) (sub (func)))
    (type (;66;) (struct (field i8) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field i16) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field i16) (field i32) (field (mut i8)) (field i8) (field i8) (field (mut i64)) (field (mut i16)) (field (mut (ref null 32)))))
    (type (;67;) (sub (array i8)))
    (type (;68;) (func (result f32)))
  )
  (import "_" "" (global (;0;) (mut i64)))
  (table (;0;) 8814 (ref null 9) ref.null 9)
  (memory (;0;) i64 2290 226714608584088 shared)
  (export "\u{2}" (global 0))
  (export "0,+" (global 0))
  (export "\u{8}" (memory 0))
  (start 0)
  (func (;0;) (type 53)
    br 0
    try_table (type 68) (result f32) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) ;; label = @1
      f32.const 0x1.e3fff8p-110 (;=0.00000000000000000000000000000000145648415;)
      block (type 20) (result i32 i31ref) ;; label = @2
        br 2
        try_table (type 40) (result f64 i32) (catch_all 2) (catch_all 2) (catch_all 2) ;; label = @3
          call 0
          table.size 0
          i32.extend16_s
          i32.eqz
          i32.extend8_s
          if (type 7) ;; label = @4
            block (type 20) (result i32 i31ref) ;; label = @5
              block (type 40) (result f64 i32) ;; label = @6
                f64.const 0x1.ffa088f5183e2p-611 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002351723265158969;)
                i32.trunc_f64_s
                i64.extend_i32_u
                array.new_fixed 54 0
                try_table (result f32) (catch_all 2 (;@4;)) (catch_all 6) ;; label = @7
                  try_table (type 38) (catch_all 7) (catch_all 7) (catch_all 7) ;; label = @8
                    try_table (type 68) (result f32) (catch_all 4 (;@4;)) (catch_all 8) (catch_all 8) (catch_all 8) (catch_all 8) (catch_all 0 (;@8;)) (catch_all 8) ;; label = @9
                      table.size 0
                      block (result exnref) ;; label = @10
                        global.get 0
                        i32.load8_s offset=70194866
                        f32.convert_i32_s
                        br 10
                        f32.nearest
                        i64.trunc_sat_f32_u
                        i64.load8_s offset=5014228
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
