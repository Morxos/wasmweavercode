(module
  (rec
    (type (;0;) (struct (field (mut i16)) (field (mut f64)) (field f64) (field f64) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field i16) (field f64) (field f64) (field (mut f32))))
    (type (;1;) (struct (field i8) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field (mut i8))))
    (type (;2;) (array i16))
    (type (;3;) (func (param f32) (result f64)))
    (type (;4;) (array (mut i8)))
    (type (;5;) (sub (struct (field f32) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field i32) (field (mut i32)) (field i16) (field externref) (field i64) (field (mut i16)))))
    (type (;6;) (array (mut i64)))
    (type (;7;) (sub (func (result f32 i32))))
    (type (;8;) (sub (struct (field (mut i64)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut nullref)))))
    (type (;9;) (sub (struct (field i8) (field (mut i16)) (field (mut i16)) (field i8))))
    (type (;10;) (sub (struct (field (mut i16)))))
    (type (;11;) (sub final 10 (struct (field (mut i16)) (field i8) (field i8) (field i8) (field (mut i16)))))
    (type (;12;) (sub 7 (func (result f32 i32))))
    (type (;13;) (array i16))
    (type (;14;) (sub (func (param nullexternref) (result i64))))
    (type (;15;) (sub (func)))
    (type (;16;) (sub (struct (field i64) (field i8) (field structref) (field (mut i8)) (field (mut f64)) (field i64) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut f64)) (field (mut i8)))))
    (type (;17;) (array (mut i16)))
    (type (;18;) (struct (field (mut i8)) (field i16) (field (mut i64)) (field f32) (field i16) (field i8) (field f64) (field (mut eqref)) (field (mut i8)) (field (mut i64)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i64))))
    (type (;19;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i64) (field arrayref) (field (mut i16)) (field (mut i8)) (field (mut i64)) (field i8) (field i8) (field i8) (field (mut i8)) (field (mut f32)))))
    (type (;20;) (sub (array (mut i16))))
    (type (;21;) (struct (field (mut i16)) (field f64) (field (mut i8)) (field (mut f32)) (field i8) (field (mut i16)) (field f64) (field (mut i16)) (field (mut f32)) (field f32) (field (mut (ref null 5))) (field (ref null 12)) (field (mut i8)) (field f32) (field i16) (field i16) (field f32)))
    (type (;22;) (sub (array (mut i8))))
  )
  (rec
    (type (;23;) (struct (field (mut i8)) (field (mut i8)) (field i16) (field i64) (field i16) (field (mut i16)) (field i8) (field i8) (field i8) (field (mut f64)) (field (ref null 1)) (field i32) (field f32) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field i8)))
    (type (;24;) (func (param f64 f64 i32) (result f64 i32 i64 i32)))
    (type (;25;) (func))
    (type (;26;) (func (param i32 i32 nullexternref)))
    (type (;27;) (struct (field (mut i16)) (field (ref null 0)) (field i16) (field (mut f64)) (field (mut i64)) (field i64) (field i8) (field (mut (ref null 8))) (field i16) (field (mut f32)) (field i8) (field (mut i32)) (field (mut i16)) (field (mut i16)) (field (mut i16))))
    (type (;28;) (array (mut i8)))
    (type (;29;) (array f64))
    (type (;30;) (sub final 20 (array (mut i16))))
    (type (;31;) (struct (field (mut i32)) (field i32) (field i16) (field i16)))
    (type (;32;) (array (mut i8)))
    (type (;33;) (sub (struct (field i16) (field i16) (field i32) (field i32) (field (mut i16)))))
    (type (;34;) (struct (field i16) (field (ref null 13)) (field (mut i64)) (field i16) (field i16) (field i16) (field (mut f64)) (field (mut i8)) (field i16) (field i8) (field i8) (field (mut f32))))
    (type (;35;) (sub (struct (field (mut i16)) (field (mut i8)) (field i32) (field (mut i8)) (field (ref null 5)) (field f64) (field (mut i64)) (field i16) (field (mut i16)) (field i8) (field i16))))
    (type (;36;) (func (param i31ref) (result f32)))
    (type (;37;) (sub (array (mut i16))))
    (type (;38;) (sub (array i16)))
    (type (;39;) (sub (array i16)))
    (type (;40;) (array f32))
  )
  (import "" "" (tag (;0;) (type 15)))
  (memory (;0;) i64 643)
  (tag (;1;) (type 26) (param i32 i32 nullexternref))
  (global (;0;) (mut f32) f32.const -0x1.475e9ep+88 (;=-395765560000000000000000000;))
  (global (;1;) (mut i32) i32.const 0)
  (global (;2;) (mut i32) i32.const 0)
  (global (;3;) (mut i64) i64.const 0)
  (export "" (global 0))
  (elem (;0;) declare (ref null 40))
  (func (;0;) (type 14) (param nullexternref) (result i64)
    ref.null 18
    ref.cast nullref
    extern.convert_any
    ref.cast nullexternref
    ref.as_non_null
    local.tee 0
    local.tee 0
    loop (type 14) (param nullexternref) (result i64) ;; label = @1
      try_table (type 14) (param nullexternref) (result i64) ;; label = @2
        global.get 0
        i64.trunc_sat_f32_s
        f32.load offset=6242237 align=2
        memory.size
        i64.load8_u offset=25854293
        i64.load16_u offset=9159587
        i64.load32_u offset=11869395 align=1
        i64.load32_s offset=15018956 align=2
        i32.load16_u offset=3123977
        i32.extend8_s
        f64.convert_i32_u
        f64.sqrt
        i32.const -186228416
        array.new_fixed 2 0
        global.get 0
        i32.trunc_sat_f32_s
        f64.convert_i32_u
        i32.trunc_f64_u
        try_table ;; label = @3
          loop (type 12) (result f32 i32) ;; label = @4
            local.get 0
            any.convert_extern
            try_table (type 12) (result f32 i32) (catch 0 0 (;@4;)) (catch 0 1 (;@3;)) (catch 0 1 (;@3;)) (catch_all 0 (;@4;)) (catch 0 1 (;@3;)) (catch_all 0 (;@4;)) (catch_all 0 (;@4;)) (catch_all 1 (;@3;)) ;; label = @5
              global.get 0
              f32.neg
              f64.const 0x1.p-1051 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004144523;)
              f64.abs
              array.new_fixed 29 0
              br 2 (;@3;)
              br 1 (;@4;)
              extern.convert_any
              ref.test externref
              i64.const 1125899906842624
              i32.load offset=6950431951547982925 align=2
              i32.shr_u
              f32.const 0x1.fffffep-124 (;=0.00000000000000000000000000000000000009403954;)
              struct.new_default 9
              ref.as_non_null
              br_on_null 1 (;@4;)
              f32.const -0x1.5ae9f2p-116 (;=-0.000000000000000000000000000000000016311811;)
              i32.trunc_sat_f32_s
              i32.eqz
              f32.convert_i32_u
              i64.trunc_f32_u
              i64.clz
              f64.load offset=16343537 align=1
              loop (type 12) (result f32 i32) ;; label = @6
                local.get 0
                drop
                f32.const -0x1.d3be6ap+58 (;=-526632700000000000;)
                i32.const 1024
              end
              global.get 1
              i32.xor
              global.set 1
              i32.reinterpret_f32
              global.get 2
              i32.xor
              global.set 2
              i64.reinterpret_f64
              global.get 3
              i64.xor
              global.set 3
              drop
              i32.reinterpret_f32
              global.get 2
              i32.xor
              global.set 2
              global.get 1
              i32.xor
              global.set 1
              i64.reinterpret_f64
              global.get 3
              i64.xor
              global.set 3
              i32.const -65
            end
            global.get 1
            i32.xor
            global.set 1
            i32.reinterpret_f32
            global.get 2
            i32.xor
            global.set 2
            drop
            f32.const 0x1.ffff8p-132 (;=0.00000000000000000000000000000000000000036734;)
            i32.const 42139656
          end
          global.get 1
          i32.xor
          global.set 1
          i32.reinterpret_f32
          global.get 2
          i32.xor
          global.set 2
        end
        unreachable
      end
    end
  )
  (data (;0;) (i64.const 3) "")
  (data (;1;) "\95")
)
