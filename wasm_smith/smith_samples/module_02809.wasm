(module
  (rec
    (type (;0;) (func))
    (type (;1;) (sub (array f64)))
    (type (;2;) (struct))
    (type (;3;) (sub final 1 (array f64)))
    (type (;4;) (sub (array (mut i16))))
    (type (;5;) (sub (func (result f64))))
    (type (;6;) (array i8))
    (type (;7;) (array i8))
    (type (;8;) (sub (struct (field (mut i16)) (field (mut f32)) (field externref) (field (mut i16)) (field (mut i16)))))
    (type (;9;) (struct (field f32) (field i64) (field (mut i8))))
    (type (;10;) (array i64))
    (type (;11;) (func (param f64)))
    (type (;12;) (struct (field i8) (field funcref) (field (mut i64)) (field (mut i16)) (field (mut f32)) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field i16) (field f64) (field i8) (field (mut i16)) (field f64) (field (mut i32)) (field i16) (field (mut i8)) (field (mut i8))))
    (type (;13;) (func (param i64 externref) (result f32)))
    (type (;14;) (func (result f64)))
    (type (;15;) (array (mut i64)))
    (type (;16;) (array (mut i32)))
    (type (;17;) (struct (field i8) (field (mut i64)) (field (mut f64)) (field i16) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i32)) (field (mut f32))))
    (type (;18;) (sub (array (mut i32))))
    (type (;19;) (sub (func (result i64 f64 exnref))))
    (type (;20;) (func (param i64 f32 i32) (result i64)))
    (type (;21;) (func (param f32 i32)))
    (type (;22;) (array i8))
    (type (;23;) (array f64))
    (type (;24;) (sub (func (param anyref f64 f32) (result i64 f64))))
    (type (;25;) (sub (struct (field i64) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field (mut (ref null 9))) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field i8) (field i8) (field (mut i64)) (field i8) (field (mut i16)) (field i16) (field (mut i16)) (field i64) (field (mut i32)) (field i8))))
    (type (;26;) (struct (field (mut i8)) (field i16) (field i16) (field i8) (field (mut (ref null 18))) (field i16) (field exnref) (field i16) (field i64) (field (mut anyref)) (field (mut i16)) (field (mut (ref null 21))) (field (mut i8)) (field (mut i64)) (field (mut arrayref))))
    (type (;27;) (func (param f64 f32 i32) (result f32)))
    (type (;28;) (sub (func (param i64 i32) (result f32 f64))))
    (type (;29;) (func (result f32 f32 f64 f64 f32 i64)))
    (type (;30;) (func (result i64)))
    (type (;31;) (sub (array (mut i8))))
    (type (;32;) (sub (func (result i32))))
    (type (;33;) (sub (array i16)))
    (type (;34;) (sub (func (param i64 exnref))))
    (type (;35;) (struct (field i16) (field (mut i8)) (field i8) (field i16) (field i8) (field i8) (field i16) (field (mut i32)) (field i8) (field (mut i16)) (field f32) (field (mut i16)) (field (mut f64)) (field (mut i16))))
    (type (;36;) (array (mut i16)))
    (type (;37;) (struct (field f32) (field (mut i8)) (field f64) (field i16) (field (mut i16)) (field i64) (field (mut i16)) (field (mut i8)) (field i64) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field nullexternref) (field (mut i16))))
    (type (;38;) (sub (array (mut i32))))
    (type (;39;) (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut (ref null 13))) (field i16) (field (mut i8)) (field i16) (field i32)))
    (type (;40;) (struct (field (mut i8)) (field (mut i8)) (field (mut i16)) (field f64) (field (mut i16)) (field (mut (ref null 26))) (field (mut i16))))
    (type (;41;) (func))
    (type (;42;) (func (result f64)))
    (type (;43;) (func (param structref f64) (result (ref null 8) i32)))
    (type (;44;) (func))
    (type (;45;) (struct (field (mut i8)) (field (mut f32)) (field i8) (field (mut i8)) (field f64) (field (mut externref)) (field (mut i64)) (field i16) (field i8) (field i64) (field i16) (field i16) (field i16) (field (mut i8)) (field (mut i32))))
  )
  (tag (;0;) (type 21) (param f32 i32))
  (tag (;1;) (type 41))
  (tag (;2;) (type 21) (param f32 i32))
  (export "cF" (func 0))
  (func (;0;) (type 24) (param anyref f64 f32) (result i64 f64)
    i32.const 892323995
    try_table (result nullfuncref) ;; label = @1
      struct.new 2
      struct.new 2
      f64.const -0x1.05c768b41d68ep-274 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000003368805441412923;)
      i32.trunc_f64_u
      f32.convert_i32_s
      struct.new 2
      local.get 2
      i32.trunc_sat_f32_s
      array.new_default 1
      struct.new 2
      struct.new 2
      local.tee 0
      f64.const -0x1.dda168b84919bp+175 (;=-89351393773053360000000000000000000000000000000000000;)
      f64.const -nan:0xffffffff00000 (;=NaN;)
      local.tee 1
      i64.trunc_f64_s
      loop (type 29) (result f32 f32 f64 f64 f32 i64) ;; label = @2
        try_table (type 32) (result i32) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) ;; label = @3
          try_table (type 0) (catch 1 1 (;@2;)) (catch 1 1 (;@2;)) (catch 1 1 (;@2;)) (catch_all 1 (;@2;)) (catch 1 1 (;@2;)) (catch 1 1 (;@2;)) ;; label = @4
            br 2 (;@2;)
            f64.const 0x1.fffffcp-1052 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041445225;)
            f64.sqrt
            loop (type 29) (result f32 f32 f64 f64 f32 i64) ;; label = @5
              struct.new 2
              local.get 0
              struct.new_default 9
              f32.const -nan:0x600000 (;=NaN;)
              i32.trunc_f32_s
              array.new_default 38
              local.tee 0
              br_on_null 3 (;@2;)
              br_on_null 1 (;@4;)
              struct.new 2
              local.tee 0
              br 0 (;@5;)
              br 3 (;@2;)
              f32.const -0x1.65d8dp+6 (;=-89.46173;)
              i64.trunc_f32_s
              i64.const 4898912516528219847
              i64.gt_u
              i32.const 872415232
              i32.clz
              block (type 19) (result i64 f64 exnref) ;; label = @6
                f64.const -0x1.71870dfc72e3dp-372 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015005431157774588;)
                f64.nearest
                i64.trunc_f64_u
                f64.reinterpret_i64
                array.new_fixed 23 0
                f32.const -0x1.993546p-80 (;=-0.0000000000000000000000013222227;)
                f32.sqrt
                i64.trunc_f32_s
                f32.convert_i64_u
                local.set 2
                loop ;; label = @7
                  loop (type 41) ;; label = @8
                    try_table (result f32) (catch_all 1 (;@7;)) (catch 1 3 (;@5;)) (catch_all 4 (;@4;)) (catch 1 4 (;@4;)) ;; label = @9
                      f64.const -0x1.6ac4fbaf87635p+724 (;=-125056888932452550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                      ref.null 17
                      loop (type 32) (result i32) ;; label = @10
                        br 5 (;@5;)
                        block (type 41) ;; label = @11
                          i64.const 8388607
                          try_table (type 42) (result f64) (catch_all 1 (;@10;)) (catch_all 1 (;@10;)) (catch_all 4 (;@7;)) (catch_all 4 (;@7;)) (catch 1 9 (;@2;)) (catch 1 0 (;@11;)) (catch_all 7 (;@4;)) (catch 1 4 (;@7;)) ;; label = @12
                            f64.const -nan:0xfffdfffffffff (;=NaN;)
                          end
                          loop (type 11) (param f64) ;; label = @12
                            f64.neg
                            try_table (type 0) (catch 1 10 (;@2;)) (catch_all 1 (;@11;)) ;; label = @13
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
