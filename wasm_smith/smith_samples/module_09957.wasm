(module
  (rec
    (type (;0;) (sub (func)))
    (type (;1;) (func))
    (type (;2;) (sub (func (param eqref))))
    (type (;3;) (sub final 2 (func (param eqref))))
    (type (;4;) (array (mut funcref)))
    (type (;5;) (struct (field (mut i8)) (field i64) (field nullref) (field f32) (field f32) (field f64) (field (mut i8)) (field (mut i16))))
    (type (;6;) (array (mut i16)))
    (type (;7;) (sub (array i8)))
    (type (;8;) (func (result i64 f32)))
    (type (;9;) (struct (field (mut i8)) (field (mut i64)) (field (mut f64)) (field (mut i16)) (field i16) (field i64) (field (mut i16))))
    (type (;10;) (struct (field eqref) (field (mut i8)) (field i64) (field (mut i31ref)) (field (mut i8)) (field f64) (field i16) (field f32) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i64)) (field i16) (field (mut i16)) (field exnref) (field i16) (field i16) (field (mut i8))))
    (type (;11;) (sub (struct (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field i8) (field (ref null 3)) (field f64) (field (mut arrayref)) (field (mut i16)) (field (mut i16)))))
    (type (;12;) (array (mut i8)))
    (type (;13;) (array (mut i16)))
    (type (;14;) (sub (array (mut i8))))
    (type (;15;) (sub (func (param i31ref) (result f64 i64))))
    (type (;16;) (func (param f32 i32 f32 f32)))
    (type (;17;) (sub (struct (field i64) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field i64) (field (mut i16)) (field i16) (field (mut i8)) (field i16) (field externref) (field i16) (field f64) (field i8))))
    (type (;18;) (sub final 0 (func)))
    (type (;19;) (sub 2 (func (param eqref))))
    (type (;20;) (sub (array (mut i64))))
    (type (;21;) (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i16) (field i16)))
    (type (;22;) (struct (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16))))
    (type (;23;) (sub (func)))
    (type (;24;) (sub (func)))
    (type (;25;) (sub (func (result f64))))
    (type (;26;) (struct (field (mut i8)) (field (mut f32)) (field i16)))
    (type (;27;) (struct (field (mut i64)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field (mut nullfuncref)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field (mut i16)) (field i32) (field (mut i8)) (field (mut f32)) (field i16) (field i16) (field (mut i8))))
    (type (;28;) (sub (struct (field (mut eqref)) (field i8) (field i8) (field f64) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field f64) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)))))
    (type (;29;) (sub (array (mut i8))))
    (type (;30;) (array i8))
    (type (;31;) (struct (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i64) (field f32) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16))))
    (type (;32;) (array (mut i16)))
    (type (;33;) (sub (struct (field (mut i8)) (field i8) (field (mut i32)) (field (mut (ref null 30))) (field f64) (field f64) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)) (field i8) (field (mut i16)))))
    (type (;34;) (sub (func (param i32 f32 f32 nullexternref f64))))
    (type (;35;) (array i32))
    (type (;36;) (sub (func (param i32 (ref null 26) i64 f32 i32 f64 nullfuncref) (result f32))))
    (type (;37;) (sub (struct (field (mut i8)) (field i32) (field (mut i8)) (field i8) (field i8) (field i8) (field (mut i16)) (field (ref null 1)) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field i8))))
    (type (;38;) (struct (field i8) (field (mut i8)) (field i32) (field (mut externref)) (field (mut i16)) (field i8) (field (mut i8)) (field i32) (field i16)))
    (type (;39;) (struct (field i16) (field i16) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i32)) (field (mut f64)) (field f64) (field i16) (field i16) (field (mut i16)) (field i64) (field i64) (field (mut i32)) (field i8)))
    (type (;40;) (sub (array (mut i16))))
    (type (;41;) (sub (array i8)))
    (type (;42;) (sub (func (result i32))))
    (type (;43;) (array (mut i8)))
    (type (;44;) (sub (func (result f32 i32 nullref nullfuncref f32 externref))))
    (type (;45;) (func))
    (type (;46;) (sub (array i8)))
    (type (;47;) (array i8))
    (type (;48;) (sub (func (param f32) (result (ref null 31) f64 i32))))
    (type (;49;) (func (param anyref i64 (ref null 2)) (result i32)))
    (type (;50;) (array i8))
  )
  (rec
    (type (;51;) (array (mut i16)))
    (type (;52;) (struct (field i32) (field (mut i8)) (field (mut i32)) (field (mut i16)) (field (mut i8))))
    (type (;53;) (sub (func (result f64))))
    (type (;54;) (func (result f32)))
    (type (;55;) (array i8))
    (type (;56;) (func (param i64) (result i64 (ref null 52) f32 i64)))
    (type (;57;) (sub (func (result nullexternref))))
    (type (;58;) (struct (field i8) (field i8) (field i16) (field f64) (field (mut i16)) (field i8) (field (mut f32)) (field i8) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field eqref) (field i8) (field f32) (field i64)))
    (type (;59;) (array i8))
    (type (;60;) (func (param f32 (ref null 47) f32 f32) (result arrayref f64)))
  )
  (import "|_\u{7}" "" (func (;0;) (type 24)))
  (import "TLo" "" (memory (;0;) i64 0))
  (import "" ">" (table (;0;) 0 (ref null 34)))
  (global (;0;) externref ref.null noextern)
  (start 0)
  (elem (;0;) (ref null 10) (ref.null 10))
  (elem (;1;) i31ref (ref.null none) (ref.null none))
  (elem (;2;) declare (ref null 12) (ref.null 12))
  (elem (;3;) structref)
  (elem (;4;) declare (ref null 50))
  (elem (;5;) declare (ref null 46) (ref.null none) (ref.null none))
  (func (;1;) (type 60) (param f32 (ref null 47) f32 f32) (result arrayref f64)
    block (type 24) ;; label = @1
      table.size 0
      f32.const 0x1.8cp-143 (;=0.000000000000000000000000000000000000000000139;)
      unreachable
    end
    unreachable
  )
  (data (;0;) "")
)
