(module
  (rec
    (type (;0;) (sub (struct (field i8) (field i64) (field (mut i8)))))
    (type (;1;) (sub (struct (field (mut i8)))))
    (type (;2;) (array (mut f32)))
    (type (;3;) (array f32))
    (type (;4;) (func (param f32) (result i64 f64 i64)))
    (type (;5;) (struct (field (mut i16)) (field i16) (field nullfuncref)))
    (type (;6;) (func))
    (type (;7;) (struct (field (mut f32)) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field i8) (field (mut i16)) (field i16) (field f64) (field (mut i16)) (field i16) (field (mut f32)) (field f32) (field (mut i64)) (field (mut i16))))
    (type (;8;) (func))
    (type (;9;) (array (mut i16)))
    (type (;10;) (func))
    (type (;11;) (sub (struct (field (mut i8)) (field i16) (field (mut funcref)))))
    (type (;12;) (array (mut i8)))
  )
  (rec
    (type (;13;) (sub (struct (field (mut arrayref)) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field f32) (field f32) (field (mut (ref null 4))) (field i64) (field i16) (field i16) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field i64) (field i8))))
    (type (;14;) (func (param f32) (result i64 f32)))
    (type (;15;) (struct (field f32) (field (mut i16)) (field (mut i32)) (field i8) (field eqref) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field i16) (field i16)))
    (type (;16;) (sub (func)))
    (type (;17;) (sub (array (mut i8))))
    (type (;18;) (func (param f32 i32 i64 f32)))
    (type (;19;) (sub final 11 (struct (field (mut i8)) (field i16) (field (mut funcref)) (field nullref) (field (ref null 7)))))
    (type (;20;) (func (param f32 f32 i32 i64 i32 (ref null 3) i64) (result f32)))
    (type (;21;) (struct (field (mut i16)) (field (mut i8)) (field (mut f32))))
    (type (;22;) (sub (func (result eqref))))
    (type (;23;) (func))
    (type (;24;) (array (mut i8)))
    (type (;25;) (sub (array (mut i8))))
    (type (;26;) (sub (struct (field i16))))
    (type (;27;) (struct (field i8) (field i64) (field anyref) (field (mut i16)) (field i16)))
    (type (;28;) (sub (struct (field (mut i8)) (field (mut i16)) (field i16) (field i16) (field i16) (field (mut i8)) (field f64) (field (mut f32)) (field f64) (field (mut f32)) (field i8) (field (mut i8)) (field i16) (field f32) (field i8) (field i16) (field (mut i32)) (field (mut i16)))))
    (type (;29;) (func (result f64)))
    (type (;30;) (func (result i64)))
    (type (;31;) (sub (struct (field (mut nullfuncref)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field i16) (field f32) (field i16) (field (mut f64)))))
    (type (;32;) (array (ref null 12)))
    (type (;33;) (sub (struct (field i16) (field f64) (field (mut i8)) (field (mut i32)) (field (mut f64)) (field (mut i32)) (field (mut i8)) (field i8) (field i16) (field i16) (field (mut i8)) (field i16))))
    (type (;34;) (sub (struct (field (mut f32)) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field i16) (field (mut i16)) (field (mut f64)))))
    (type (;35;) (sub (func (param i64) (result f64 funcref))))
    (type (;36;) (struct (field i16) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field i8) (field (mut (ref null 32))) (field (mut i16)) (field (mut structref)) (field f32)))
    (type (;37;) (array i8))
    (type (;38;) (sub (array i16)))
    (type (;39;) (sub (func)))
    (type (;40;) (array f32))
    (type (;41;) (struct (field i8) (field i8) (field (mut i64)) (field i8) (field i16) (field i64)))
    (type (;42;) (sub (func (param i64 f64 f32) (result i32 i64 f32))))
    (type (;43;) (sub (array i32)))
    (type (;44;) (sub (struct (field (mut i8)) (field (mut i16)) (field (ref null 22)) (field f32) (field (mut f32)) (field i8) (field (mut i16)) (field i16))))
    (type (;45;) (sub 17 (array (mut i8))))
    (type (;46;) (sub (array (mut i8))))
    (type (;47;) (array (mut i16)))
    (type (;48;) (struct (field (mut i16)) (field (mut i16)) (field i8) (field i16) (field f64) (field (mut i8)) (field (mut f64)) (field f32) (field i32) (field i8) (field (mut (ref null 25))) (field i64)))
  )
  (table (;0;) i64 0 (ref null 21))
  (memory (;0;) 4874 41030 shared)
  (tag (;0;) (type 8))
  (tag (;1;) (type 8))
  (tag (;2;) (type 16))
  (global (;0;) f64 f64.const -0x1.9e6050eaa54acp-995 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048340283025960705;))
  (elem (;0;) declare (ref null 43) (ref.null 43))
  (elem (;1;) declare (ref null 21) (ref.null 21))
  (elem (;2;) declare (ref null 13) (ref.null 13) (ref.null 13) (ref.null none) (ref.null 13) (ref.null 13))
  (func (;0;) (type 39)
    loop (type 39) ;; label = @1
      i32.const -373385891
      loop (type 10) ;; label = @2
        global.get 0
        table.size 0
        f32.convert_i64_u
        memory.size
        i32.const -1745084863
        f64.convert_i32_s
        f64.abs
        i32.trunc_f64_u
        i64.load8_s offset=317467389
        i64.eqz
        f32.load offset=39289636
        i32.trunc_sat_f32_u
        i32.gt_u
        try_table (type 30) (result i64) (catch 1 2) (catch_all 0 (;@2;)) (catch 1 0 (;@2;)) (catch 2 1 (;@1;)) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) ;; label = @3
          table.size 0
          block (type 30) (result i64) ;; label = @4
            table.size 0
            table.get 0
            i32.const 319422463
            i64.load16_s offset=284759535
            memory.size
            block (type 29) (result f64) ;; label = @5
              try_table (type 30) (result i64) (catch_all 3 (;@2;)) (catch_all 5) (catch_all 5) (catch 1 5) (catch 0 5) (catch 1 4 (;@1;)) ;; label = @6
                try_table (type 23) (catch_all 6) (catch 1 4 (;@2;)) (catch_all 4 (;@2;)) ;; label = @7
                  table.size 0
                  call 0
                  f32.convert_i64_u
                  ref.null 3
                  memory.size
                  try_table (type 23) (catch 1 6 (;@1;)) (catch_all 7) (catch_all 5 (;@2;)) (catch 2 5 (;@2;)) ;; label = @8
                    block (type 6) ;; label = @9
                      block (type 8) ;; label = @10
                      end
                      memory.size
                      ref.null 11
                      br_on_null 0 (;@9;)
                      f64.const -nan:0xfffffc0000000 (;=NaN;)
                      i32.trunc_sat_f64_u
                      br 1 (;@8;)
                      global.get 0
                      br 1 (;@8;)
                      i64.trunc_f64_s
                      f64.convert_i64_u
                      f64.nearest
                      f64.trunc
                      elem.drop 1
                      f64.abs
                      table.size 0
                      i64.eqz
                      table.size 0
                      f64.const 0x1.b6eea4fcp-1043 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018191646317;)
                      unreachable
                    end
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
  )
)
