(module
  (rec
    (type (;0;) (sub (struct)))
    (type (;1;) (sub (array (mut i8))))
    (type (;2;) (array (mut i16)))
    (type (;3;) (func (result i32 f32)))
    (type (;4;) (sub final 1 (array (mut i8))))
    (type (;5;) (sub (struct (field (mut i8)) (field f32) (field i8) (field i16) (field i16) (field (mut i16)) (field i64) (field (mut f64)) (field i16) (field i8) (field i16) (field nullexternref))))
    (type (;6;) (struct (field (mut i16)) (field (mut i8)) (field i16) (field i64) (field i8) (field i8) (field (mut i8)) (field (mut i64)) (field (mut f32)) (field f32) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field i16)))
    (type (;7;) (struct (field f64) (field i8) (field (mut f32))))
    (type (;8;) (sub (array (mut i64))))
    (type (;9;) (sub (struct (field (mut i16)) (field i16) (field (mut i8)) (field i64) (field (mut i16)) (field i16) (field i8) (field i31ref) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i8)) (field i8))))
    (type (;10;) (array f32))
    (type (;11;) (sub (array i16)))
    (type (;12;) (sub (array (mut i8))))
    (type (;13;) (sub (func (result f32))))
    (type (;14;) (sub (struct (field i64) (field (mut i8)) (field f32) (field (mut i16)) (field i16) (field (mut f32)) (field i16) (field externref) (field i8) (field (mut i8)) (field i16) (field i8) (field (mut i8)))))
    (type (;15;) (sub (struct (field nullfuncref) (field i16) (field (mut i64)) (field (mut i16)) (field i8) (field (mut arrayref)) (field (mut f32)) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field i16))))
    (type (;16;) (sub (array (mut i16))))
    (type (;17;) (array (mut i16)))
    (type (;18;) (struct (field (mut i16)) (field i8) (field f64) (field i16) (field i32)))
    (type (;19;) (sub (array (mut f32))))
    (type (;20;) (struct (field f64) (field (mut i8)) (field (mut i16)) (field (mut arrayref)) (field i8) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field i16) (field i16) (field (mut f64)) (field (mut i32)) (field i8) (field (mut i8)) (field i64) (field i8) (field (mut i64)) (field (mut i8))))
    (type (;21;) (sub (struct (field i16) (field (mut i8)) (field i16) (field (mut i32)) (field i8) (field (mut i32)) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field i16) (field i8) (field i8) (field f64) (field f32) (field f32) (field f64) (field (mut i8)) (field (mut i16)) (field (mut i16)))))
    (type (;22;) (array (mut i16)))
    (type (;23;) (sub (struct (field (mut i8)) (field (mut i32)) (field i64) (field i16) (field (mut i16)) (field i16) (field i16) (field i32))))
    (type (;24;) (func))
    (type (;25;) (func (result exnref f32 f32 i64 f64)))
    (type (;26;) (func (param anyref nullref) (result f32)))
    (type (;27;) (struct))
    (type (;28;) (array (mut f64)))
    (type (;29;) (func))
    (type (;30;) (sub (struct (field (mut i16)) (field i8) (field (mut i8)) (field f64) (field i8) (field i16))))
    (type (;31;) (struct (field i8) (field (mut i8)) (field i32) (field i64) (field (mut f32))))
    (type (;32;) (func (param i32)))
    (type (;33;) (func (param f32) (result i64 f32)))
    (type (;34;) (struct (field (mut i16)) (field (mut i32)) (field (mut anyref)) (field i8) (field (mut i8)) (field (mut (ref null 15))) (field (mut i8)) (field (mut f64)) (field (mut i64)) (field (mut i8)) (field i8) (field i8) (field i16) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field (mut f64)) (field i16) (field i8)))
    (type (;35;) (sub (array i16)))
    (type (;36;) (sub (struct (field i8) (field i16) (field i16) (field i16) (field i8) (field i16))))
    (type (;37;) (func (param i64 i64) (result anyref f64 nullref i64 anyref anyref)))
    (type (;38;) (struct (field i16) (field (mut i32)) (field i32)))
    (type (;39;) (sub (func (result i32 f32))))
    (type (;40;) (array i8))
    (type (;41;) (struct (field (mut i16)) (field i16) (field i8) (field i8) (field i16) (field (mut nullfuncref)) (field i16) (field (mut i16)) (field (ref null 26)) (field i16) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field i8) (field (mut f64)) (field i16) (field i8) (field i16) (field i8)))
    (type (;42;) (func (param i64 f32)))
    (type (;43;) (sub (func (result f64 i64))))
    (type (;44;) (array i8))
    (type (;45;) (struct (field i8) (field (mut f64)) (field i8) (field (mut i8)) (field (mut i8)) (field i64) (field nullref) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field (mut f32))))
    (type (;46;) (struct (field i16) (field (mut f64)) (field (mut i16)) (field i32) (field i64) (field i64) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i8))))
    (type (;47;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut f32)) (field i16) (field funcref) (field (mut i8)) (field (mut i64)) (field i8) (field f64) (field (mut i16)) (field f64) (field (mut i16)) (field (ref null 4)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)))))
    (type (;48;) (struct (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i32)) (field (mut i64)) (field (mut f64))))
    (type (;49;) (struct (field (mut f64)) (field (mut f64)) (field f32) (field (mut f32)) (field i8) (field i16) (field (mut f64)) (field i8) (field (mut (ref null 30))) (field f32) (field i8) (field f64) (field i16)))
  )
  (import "" "" (table (;0;) 1 (ref null 32)))
  (import "i" "" (tag (;0;) (type 29)))
  (elem (;0;) (table 0) (i32.const 0) nullfuncref)
  (elem (;1;) declare (ref null 24) (ref.null 24))
  (func (;0;) (type 24)
    (local (ref null 25) f64)
    i64.const -3542824690993958803
    return_call 0
    i32.wrap_i64
    local.get 0
    block (type 25) (result exnref f32 f32 i64 f64) ;; label = @1
      br 1
      elem.drop 0
      data.drop 2
      try_table (catch_all 1) (catch 0 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) ;; label = @2
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "L")
  (data (;1;) "")
  (data (;2;) "")
)
