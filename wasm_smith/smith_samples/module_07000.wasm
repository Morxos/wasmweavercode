(module
  (rec
    (type (;0;) (func (param i64)))
    (type (;1;) (array i64))
    (type (;2;) (sub (struct (field i8) (field (mut f32)) (field i16) (field (mut i16)) (field (mut f32)) (field (mut f64)))))
    (type (;3;) (sub (struct (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field i8) (field (mut i32)) (field (mut (ref null 0))) (field i16) (field (mut i16)) (field (mut i16)) (field f32) (field i16) (field i16) (field i8) (field (mut i32)) (field i16) (field (mut i8)) (field i16) (field i32))))
    (type (;4;) (struct (field (mut i32)) (field (mut i16)) (field f64)))
    (type (;5;) (sub (struct (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut nullexternref)) (field i8) (field (mut f32)) (field (mut i8)) (field (mut f64)) (field i32) (field i8) (field f32) (field (mut i8)) (field i64) (field (mut i16)) (field (mut i16)) (field (mut i64)))))
    (type (;6;) (sub (func (param i32))))
    (type (;7;) (sub (array (mut i32))))
    (type (;8;) (array (mut i8)))
    (type (;9;) (sub (struct (field i8) (field i8))))
    (type (;10;) (sub (struct (field i64) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)) (field f32) (field (mut i16)) (field i16) (field i8))))
    (type (;11;) (func (result f64)))
    (type (;12;) (sub final 10 (struct (field i64) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)) (field f32) (field (mut i16)) (field i16) (field i8) (field i8) (field i8) (field (mut i8)) (field (mut i8)))))
    (type (;13;) (struct (field i16) (field (mut i8)) (field (mut i32)) (field (mut i64)) (field (mut i32)) (field i16) (field i16) (field (mut i16)) (field (ref null 1)) (field nullexternref) (field i8) (field i8) (field (mut i16)) (field (mut i32))))
    (type (;14;) (sub (struct (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field i64) (field i16) (field f32) (field (mut nullexternref)) (field (mut i8)) (field i8) (field i8))))
    (type (;15;) (array i16))
    (type (;16;) (func (param f64 f64 i64 i64) (result i64)))
    (type (;17;) (sub (struct (field (mut i64)) (field (mut eqref)) (field (mut f64)) (field (mut i8)) (field (mut externref)) (field i16) (field f32) (field (mut i8)) (field i8))))
    (type (;18;) (array (mut i16)))
    (type (;19;) (func (param i32) (result funcref)))
    (type (;20;) (sub (array i8)))
    (type (;21;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut i64)) (field f64) (field nullref) (field (mut i64)) (field i8) (field (mut f64)) (field i16) (field i8) (field i16) (field (mut i8)) (field f32) (field (mut nullfuncref)) (field (mut i16)) (field i8) (field (mut nullref)))))
    (type (;22;) (struct (field (mut i8)) (field i64) (field i32) (field (mut i8)) (field i64) (field (mut i8)) (field i8)))
    (type (;23;) (func))
    (type (;24;) (sub (func (param i64) (result i32 f32))))
    (type (;25;) (sub (struct (field i64))))
    (type (;26;) (sub (array i8)))
    (type (;27;) (sub (array i8)))
    (type (;28;) (struct (field (mut i8)) (field i8) (field (mut i16)) (field (mut i16)) (field f32) (field i32) (field (mut f64)) (field i64) (field (ref null 25))))
    (type (;29;) (func))
    (type (;30;) (sub 25 (struct (field i64))))
    (type (;31;) (struct (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field i16) (field i64) (field f32) (field (mut i16)) (field f64) (field (mut i16)) (field i8) (field f64) (field structref) (field (mut i8)) (field (mut i64)) (field (mut i32))))
    (type (;32;) (sub (struct (field i8) (field i32) (field i8) (field i8) (field (mut i8)) (field i16) (field (mut i16)))))
    (type (;33;) (sub (func (param i31ref (ref null 2)))))
    (type (;34;) (sub (array i8)))
    (type (;35;) (struct))
    (type (;36;) (sub (struct (field (mut i32)) (field (mut i8)) (field (mut eqref)) (field i8) (field (mut i32)) (field (mut f32)) (field i8))))
    (type (;37;) (array (mut i8)))
    (type (;38;) (sub (struct (field i64) (field (mut i16)) (field (mut anyref)) (field (mut i31ref)) (field i8) (field i8))))
    (type (;39;) (func (param i32 f64)))
    (type (;40;) (array (mut i64)))
    (type (;41;) (array (mut i8)))
    (type (;42;) (array i32))
  )
  (table (;0;) 71 (ref null 27) ref.null none)
  (global (;0;) (mut f32) f32.const 0x1.6dbaa8p-103 (;=0.00000000000000000000000000000014087374;))
  (global (;1;) (ref null 13) ref.null 13)
  (elem (;0;) declare externref)
  (func (;0;) (type 33) (param i31ref (ref null 2))
    (local i32 f64)
    ref.null 37
    extern.convert_any
    any.convert_extern
    try_table (result i32) (catch_all 0) (catch_all 0) (catch_all 0) ;; label = @1
      br 1
      br 1
      f32.const -nan:0x7fefff (;=NaN;)
      f32.sqrt
      i32.trunc_sat_f32_u
      array.new_fixed 18 0
      loop (result f64) ;; label = @2
        i32.const -899317458
        f64.const 0x1.b42638266435ap+107 (;=276442457341894600000000000000000;)
        i64.trunc_sat_f64_u
        f64.const 0x1.fefffffep-1043 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021178512674;)
        ref.null 22
        ref.as_non_null
        loop (type 11) (result f64) ;; label = @3
          loop ;; label = @4
            i64.const -9116676173617338051
            array.new_fixed 40 0
            elem.drop 0
            f32.const -0x1.bdca36p-66 (;=-0.00000000000000000002359992;)
            i64.trunc_sat_f32_u
            f32.const nan (;=NaN;)
            f32.neg
            i64.trunc_sat_f32_s
            i64.rotr
            local.get 3
            i64.trunc_sat_f64_u
            f64.convert_i64_s
            struct.new_default 10
            struct.new 35
            i64.const 660861013835795778
            i64.const 576460752303423488
            i64.xor
            f32.convert_i64_s
            i32.trunc_sat_f32_s
            i32.ctz
            global.get 1
            ref.null 25
            loop (result f32) ;; label = @5
              loop (type 23) ;; label = @6
                elem.drop 0
                i32.const -536870912
                struct.new 35
                extern.convert_any
                any.convert_extern
                global.get 0
                block (type 23) ;; label = @7
                  i64.const -4611686018427387905
                  struct.new 30
                  local.get 2
                  i32.eqz
                  br_if 5 (;@2;)
                  global.get 0
                  struct.new 35
                  block (type 11) (result f64) ;; label = @8
                    try_table (result (ref null 39)) (catch_all 5 (;@3;)) ;; label = @9
                      local.get 2
                      table.get 0
                      block ;; label = @10
                        struct.new_default 13
                        ref.cast (ref none)
                        ref.test (ref none)
                        i32.eqz
                        br_if 0 (;@10;)
                      end
                      try_table (catch_all 9) (catch_all 5 (;@4;)) (catch_all 9) (catch_all 3 (;@6;)) ;; label = @10
                        struct.new 35
                        loop ;; label = @11
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
