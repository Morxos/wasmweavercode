(module
  (rec
    (type (;0;) (struct (field (mut f32)) (field i8) (field (mut i8)) (field (mut arrayref)) (field (mut i8)) (field i16) (field (mut f32)) (field (mut i16)) (field i32) (field i16) (field i8)))
    (type (;1;) (sub (struct (field (mut i8)) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field f32) (field (mut i8)) (field i32) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i32)))))
    (type (;2;) (sub (array i16)))
    (type (;3;) (sub (func (param externref))))
    (type (;4;) (array i16))
    (type (;5;) (struct (field (mut i8)) (field i16) (field i8) (field i16) (field exnref) (field i64) (field (mut i16)) (field (mut f64)) (field i16) (field f32) (field (mut i8)) (field i8) (field i8) (field (mut f64)) (field i16)))
    (type (;6;) (sub (struct (field (mut i8)))))
    (type (;7;) (sub (func)))
    (type (;8;) (sub (struct (field (mut f32)) (field i16) (field i32) (field externref) (field i64) (field i8) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field i8) (field (mut i16)) (field i8) (field i8) (field i64) (field i8) (field (mut i8)) (field f64))))
    (type (;9;) (array i16))
    (type (;10;) (struct (field i8) (field (mut i8))))
    (type (;11;) (sub (func)))
    (type (;12;) (array i8))
    (type (;13;) (array (mut i16)))
    (type (;14;) (sub (struct (field (mut i8)) (field i8) (field i8) (field (mut i8)))))
    (type (;15;) (sub (func (param funcref i32 i31ref i64) (result f32))))
    (type (;16;) (func (result i32 i32)))
    (type (;17;) (array i8))
    (type (;18;) (array (mut i8)))
    (type (;19;) (sub (struct)))
    (type (;20;) (func (result f32 i32)))
    (type (;21;) (sub (struct (field i64) (field i8) (field (mut funcref)) (field (mut i16)) (field i16) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i8)) (field i16) (field (mut f32)) (field i8))))
    (type (;22;) (sub (func (param f64 f32 f64) (result f32))))
    (type (;23;) (struct (field i8) (field (mut i16)) (field (mut f32)) (field i32) (field i8) (field (mut f32))))
    (type (;24;) (func))
    (type (;25;) (sub (array i8)))
    (type (;26;) (sub (struct (field (mut i64)) (field (mut f32)) (field (mut (ref null 24))) (field (mut i16)) (field f64) (field i8) (field (mut i8)) (field i8) (field (mut i8)) (field i16) (field (mut arrayref)))))
    (type (;27;) (func (param eqref f64) (result i32)))
    (type (;28;) (sub (array (mut i8))))
    (type (;29;) (sub (struct (field i31ref))))
    (type (;30;) (array i8))
    (type (;31;) (struct (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field i32) (field exnref) (field i8) (field f32) (field (mut i64)) (field (mut i16)) (field (mut i64)) (field i16) (field (mut i8)) (field i16)))
    (type (;32;) (func))
    (type (;33;) (func (param i64)))
    (type (;34;) (sub (func (param i32 (ref null 22) f32))))
    (type (;35;) (sub (struct (field (mut i16)) (field i16) (field (mut nullref)) (field (mut i16)))))
    (type (;36;) (sub (func (result f64 f64))))
    (type (;37;) (func))
    (type (;38;) (array i16))
    (type (;39;) (sub (func)))
    (type (;40;) (struct (field i16) (field (mut i32)) (field i16) (field i16) (field i8) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i32)))
    (type (;41;) (array i16))
    (type (;42;) (sub (func (param f32))))
    (type (;43;) (func (result f64)))
    (type (;44;) (sub (struct (field (mut i16)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field i64) (field arrayref) (field (mut i32)) (field (mut i64)) (field (mut i16)) (field i16) (field i16) (field f32))))
    (type (;45;) (sub (func (param f32 i32) (result i64 f64))))
    (type (;46;) (sub (array (mut i16))))
    (type (;47;) (sub (array (mut i8))))
    (type (;48;) (func (param i64) (result f32)))
  )
  (table (;0;) 8704 454020 funcref ref.null 36)
  (elem (;0;) (ref null 31) (ref.null none) (ref.null none) (ref.null none) (ref.null 31) (ref.null none) (ref.null 31) (ref.null none) (ref.null none))
  (elem (;1;) declare (ref null 2))
  (func (;0;) (type 33) (param i64)
    (local i32 f32)
    struct.new_default 26
    loop (type 37) ;; label = @1
      f64.const -0x1.b6bd21ab67c34p-923 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002417019058897745;)
      i32.trunc_f64_u
      ref.null array
      br_on_null 1
      br_on_null 0 (;@1;)
      f64.const -0x1.3189e829c5c26p-972 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002989995082280167;)
      block (type 11) ;; label = @2
        local.get 2
        f32.abs
        table.size 0
        f32.const 0x1.47b33p+79 (;=773759600000000000000000;)
        f32.ceil
        local.tee 2
        table.size 0
        try_table (type 7) (catch_all 2) (catch_all 2) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) ;; label = @3
          local.get 0
          i64.extend16_s
          i32.const 16777216
          local.set 1
          f32.const -0x0p+0 (;=-0;)
          i32.trunc_sat_f32_u
          i32.ctz
          f32.convert_i32_s
          i32.trunc_f32_s
          if (type 48) (param i64) (result f32) ;; label = @4
            i64.popcnt
            i64.ctz
            loop (type 24) ;; label = @5
              f64.const -nan:0xffffffbffffff (;=NaN;)
              loop ;; label = @6
                block (type 37) ;; label = @7
                end
                f64.const 0x1.13f5bae53c595p-526 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004907137956419551;)
                br 3 (;@3;)
                i64.trunc_sat_f64_s
                f32.convert_i64_u
                f32.neg
                i64.trunc_sat_f32_u
                data.drop 0
                ref.null nofunc
                data.drop 0
                try_table (type 37) (catch_all 1 (;@5;)) (catch_all 5 (;@1;)) (catch_all 4 (;@2;)) (catch_all 3 (;@3;)) (catch_all 3 (;@3;)) (catch_all 0 (;@6;)) ;; label = @7
                end
                table.size 0
                i32.ctz
                i32.ctz
                i32.const 1073741824
                i32.and
                try_table (type 20) (result f32 i32) (catch_all 0 (;@6;)) (catch_all 3 (;@3;)) ;; label = @7
                  br 7
                  nop
                  loop (type 37) ;; label = @8
                    f64.const -0x1.031738d2c31abp-140 (;=-0.0000000000000000000000000000000000000000007261268303425921;)
                    i32.trunc_f64_s
                    array.new_default 46
                    f64.const -inf (;=-inf;)
                    block (type 37) ;; label = @9
                      block (type 24) ;; label = @10
                        local.get 1
                        call_indirect (type 37)
                        f64.const -0x1.4480c1bae2eacp+346 (;=-181700947428461660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                        i32.trunc_f64_u
                        i32.ctz
                        i32.clz
                        call_indirect (type 43)
                        i32.trunc_f64_s
                        array.new_default 4
                        unreachable
                      end
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          else
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "J")
)
