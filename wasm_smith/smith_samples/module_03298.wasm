(module
  (rec
    (type (;0;) (sub (struct (field f32) (field (mut nullfuncref)) (field (mut i8)) (field (mut i32)))))
    (type (;1;) (sub (func (param f32 i64))))
    (type (;2;) (struct (field (mut i16)) (field i16) (field (mut i8)) (field i16) (field i32) (field (mut i16)) (field (mut nullref)) (field (mut i8))))
    (type (;3;) (sub (array (mut i64))))
    (type (;4;) (sub (func)))
    (type (;5;) (struct (field i16) (field i16) (field (mut i8)) (field f32) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i32) (field i16) (field (mut i8)) (field i8) (field i16) (field i8) (field i8) (field i8) (field nullfuncref)))
    (type (;6;) (sub (struct (field (mut i8)) (field i16) (field nullfuncref) (field i8) (field i16) (field i16) (field f64) (field (mut i8)) (field (mut i32)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8))))
    (type (;7;) (sub (func (result i64))))
    (type (;8;) (func (result i64 i32 externref i64)))
    (type (;9;) (sub (struct (field i16) (field i16) (field (mut f64)) (field i16) (field externref) (field (mut i8)) (field (mut i8)) (field i16))))
    (type (;10;) (array (mut f32)))
    (type (;11;) (func (param (ref null 10))))
    (type (;12;) (sub (array (mut i64))))
    (type (;13;) (struct (field (mut i16)) (field (mut f64)) (field i8) (field (mut i32)) (field (mut i16)) (field i16) (field (mut f64))))
    (type (;14;) (sub (struct (field (mut i32)) (field anyref) (field (mut funcref)) (field i64) (field i8))))
    (type (;15;) (sub (struct (field i64) (field (mut (ref null 14))) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field i8) (field i8))))
    (type (;16;) (sub (array i16)))
    (type (;17;) (sub (func (result structref))))
    (type (;18;) (sub (array i16)))
    (type (;19;) (array f32))
    (type (;20;) (sub (array nullexternref)))
    (type (;21;) (func (param funcref i64 i64 i32 f64)))
    (type (;22;) (struct (field i16) (field (mut i16)) (field i32) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i16))))
    (type (;23;) (struct (field i8) (field (mut i16)) (field (mut i8)) (field i32) (field i8) (field i16) (field i16) (field f32)))
    (type (;24;) (sub (array (mut i8))))
    (type (;25;) (func (result nullfuncref)))
    (type (;26;) (func (param f32 i64 f32 i64)))
    (type (;27;) (sub (func)))
    (type (;28;) (sub (func (param nullexternref i32) (result f64 i32))))
    (type (;29;) (func))
    (type (;30;) (sub (array (mut f64))))
    (type (;31;) (func (param i32) (result f32 i32 i32 i32 i64 nullfuncref i64)))
    (type (;32;) (sub (struct (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)))))
    (type (;33;) (func (param funcref f64 f64 eqref) (result i64)))
    (type (;34;) (array (mut i64)))
    (type (;35;) (struct (field i16) (field i32) (field i16) (field (mut i8)) (field i16) (field i16) (field i16) (field i8) (field i16) (field (mut i8)) (field f32) (field i16) (field (mut i8)) (field (mut i8)) (field (mut exnref)) (field (mut i32))))
    (type (;36;) (sub (struct (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field f32) (field i16) (field i16) (field (mut i16)) (field (mut i32)) (field i8) (field i16) (field (mut i8)) (field i32))))
    (type (;37;) (func (param i32 f64 i64)))
    (type (;38;) (array i64))
    (type (;39;) (sub (struct (field i16) (field (mut i8)) (field (mut i16)))))
    (type (;40;) (sub (array (ref null 31))))
  )
  (rec
    (type (;41;) (array (mut i8)))
    (type (;42;) (struct (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i8) (field i16) (field (mut f32)) (field (mut nullfuncref)) (field i64) (field i16) (field (mut f64)) (field i16) (field (ref null 41)) (field i32) (field i8) (field (mut i8))))
    (type (;43;) (func (param f64)))
  )
  (tag (;0;) (type 4))
  (func (;0;) (type 28) (param nullexternref i32) (result f64 i32)
    i64.const -2329946528713814112
    local.get 1
    f64.convert_i32_u
    ref.null 21
    i32.const -507010505
    local.get 1
    i32.ctz
    block (type 25) (result nullfuncref) ;; label = @1
      loop (type 17) (result structref) ;; label = @2
        try_table (type 25) (result nullfuncref) (catch 0 0 (;@2;)) (catch_all 0 (;@2;)) (catch 0 0 (;@2;)) (catch 0 0 (;@2;)) (catch_all 0 (;@2;)) (catch 0 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch 0 0 (;@2;)) ;; label = @3
          struct.new_default 36
          f32.const -0x1.de7f2ep-35 (;=-0.000000000054398788;)
          f32.abs
          loop (type 7) (result i64) ;; label = @4
            try_table (type 7) (result i64) (catch_all 2 (;@2;)) ;; label = @5
              ref.null 4
              ref.test (ref nofunc)
              br_if 3 (;@2;)
              br 1 (;@4;)
              local.get 0
              block (type 27) ;; label = @6
                throw 0
                loop ;; label = @7
                  f32.const -0x1.728b6cp-116 (;=-0.000000000000000000000000000000000017422924;)
                  loop ;; label = @8
                    i64.const 268435455
                    i32.wrap_i64
                    br_if 2 (;@6;)
                    f32.const 0x1.ed8fbp-66 (;=0.000000000000000000026128917;)
                    local.get 0
                    i32.const -1962528113
                    i64.extend_i32_u
                    i64.popcnt
                    ref.null 39
                    f64.const 0x1.p-1063 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001012;)
                    i32.trunc_sat_f64_s
                    i32.const 1039387215
                    i32.le_s
                    f32.reinterpret_i32
                    i32.reinterpret_f32
                    if (type 8) (result i64 i32 externref i64) ;; label = @9
                      br 3 (;@6;)
                      br 3 (;@6;)
                      i32.const 2
                      local.get 0
                      ref.null 41
                      try_table (type 29) (catch 0 7 (;@2;)) (catch_all 1 (;@8;)) ;; label = @10
                        loop (type 4) ;; label = @11
                          loop (type 4) ;; label = @12
                            f32.const 0x1.b5e18cp-7 (;=0.013363069;)
                            br 6 (;@6;)
                            local.get 0
                            local.set 0
                            i32.const -128
                            try_table (type 25) (result nullfuncref) (catch 0 5 (;@7;)) (catch_all 10 (;@2;)) (catch 0 0 (;@12;)) (catch_all 1 (;@11;)) (catch_all 0 (;@12;)) (catch 0 0 (;@12;)) (catch_all 2 (;@10;)) (catch 0 4 (;@8;)) (catch_all 0 (;@12;)) (catch 0 0 (;@12;)) ;; label = @13
                              f32.const 0x1.b7c7a2p-104 (;=0.00000000000000000000000000000008469851;)
                              f32.floor
                              f32.neg
                              i32.const 65535
                              i32.extend16_s
                              array.new 19
                              br_on_null 7 (;@6;)
                              extern.convert_any
                              ref.cast nullexternref
                              any.convert_extern
                              unreachable
                            end
                            unreachable
                          end
                        end
                      end
                      unreachable
                    else
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
              end
              unreachable
            end
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
