(module
  (rec
    (type (;0;) (sub (struct (field i8) (field i8) (field i8) (field (mut i8)) (field i8) (field (mut f64)) (field i16) (field (mut i8)))))
    (type (;1;) (sub (func (param anyref) (result arrayref i32))))
    (type (;2;) (sub (array i32)))
    (type (;3;) (sub (struct)))
    (type (;4;) (struct (field (mut i8)) (field (mut i8)) (field i32) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field (mut i8))))
    (type (;5;) (func (param i32) (result i31ref f32)))
    (type (;6;) (array (mut f32)))
    (type (;7;) (sub (func (result f32))))
    (type (;8;) (array (mut f64)))
    (type (;9;) (sub (array i16)))
    (type (;10;) (sub (func (result f64 i31ref f64))))
    (type (;11;) (array (mut i64)))
    (type (;12;) (array (mut i16)))
    (type (;13;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field i8) (field i16) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)))))
    (type (;14;) (sub (struct (field (mut i16)) (field (mut arrayref)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i64)))))
    (type (;15;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut f32)) (field (mut i16)) (field i8) (field i8) (field (mut f32)) (field i16) (field (mut i16)) (field (mut i16)) (field nullexternref) (field exnref) (field i16))))
    (type (;16;) (sub (array (mut i16))))
    (type (;17;) (sub (func)))
    (type (;18;) (sub (func (param i64))))
    (type (;19;) (sub (array (mut i16))))
    (type (;20;) (struct (field f32) (field (mut i16)) (field (mut i16)) (field f32) (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field (mut f64))))
    (type (;21;) (sub final 16 (array (mut i16))))
    (type (;22;) (sub (func (result f32))))
    (type (;23;) (struct (field i16) (field i8) (field i16) (field (mut i64)) (field f32) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field exnref)))
    (type (;24;) (sub (struct (field (mut f64)))))
    (type (;25;) (array (mut i8)))
    (type (;26;) (sub (struct (field (mut i8)) (field (mut i16)) (field nullref) (field i16) (field i8) (field (mut i16)) (field (mut f32)) (field (ref null 3)) (field f64) (field (mut i16)) (field (mut i16)))))
    (type (;27;) (array structref))
    (type (;28;) (array i16))
    (type (;29;) (sub (func (result i64))))
    (type (;30;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field i16) (field i16) (field (mut i16)) (field f64) (field (mut i8)) (field f64) (field (ref null 11)) (field (mut i16)) (field (mut f64)) (field (mut f64)) (field (mut i16)) (field i16) (field i8) (field i16))))
    (type (;31;) (func (param i32)))
    (type (;32;) (struct (field f64) (field i64)))
    (type (;33;) (sub (func)))
    (type (;34;) (func))
  )
  (import "" "" (func (;0;) (type 29)))
  (import "" "" (tag (;0;) (type 18) (param i64)))
  (import "B]2" "" (global (;0;) (mut arrayref)))
  (import "8" "" (table (;0;) 0 770228 (ref null 19)))
  (import "\u{288}|" "" (func (;1;) (type 1)))
  (memory (;0;) i64 1709 164009140501724 shared)
  (tag (;1;) (type 18) (param i64))
  (elem (;0;) declare nullref (ref.null none))
  (func (;2;) (type 5) (param i32) (result i31ref f32)
    struct.new_default 3
    table.size 0
    f64.convert_i32_s
    f64.neg
    f64.abs
    i32.trunc_sat_f64_s
    i32.eqz
    f32.const 0x1.p-149 (;=0.000000000000000000000000000000000000000000001;)
    f32.neg
    f32.neg
    call 0
    i64.load8_u offset=75300659
    table.size 0
    i64.const 379811485114967021
    global.get 0
    ref.cast (ref array)
    ref.cast (ref 6)
    ref.null struct
    local.get 0
    i32.const -561765108
    i32.popcnt
    ref.i31
    i31.get_u
    local.set 0
    i64.extend_i32_s
    i32.const -719206729
    table.get 0
    try_table (type 29) (result i64) ;; label = @1
      f64.const -0x1.2be70cf33ae28p+762 (;=-28418220298929510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
      local.get 0
      local.set 0
      table.size 0
      block (type 31) (param i32) ;; label = @2
        struct.new_default 13
        memory.size
        f64.convert_i64_u
        i64.const 3028441033525593673
        i64.load16_s offset=104909287 align=1
        block (type 17) ;; label = @3
          memory.size
          global.get 0
          ref.as_non_null
          global.get 0
          ref.eq
          f64.const 0x1.ffp-1044 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001058925634;)
          br 1 (;@2;)
          f64.floor
          i64.trunc_f64_u
          try_table (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch 0 2 (;@1;)) (catch_all 0 (;@3;)) (catch 0 2 (;@1;)) (catch_all 0 (;@3;)) (catch 0 2 (;@1;)) ;; label = @4
            elem.drop 0
            global.get 0
            ref.null 2
            block (result i64) ;; label = @5
              block (type 7) (result f32) ;; label = @6
                local.get 0
                br_table 2 (;@4;) 3 (;@3;) 4 (;@2;) 4 (;@2;)
                try_table (type 10) (result f64 i31ref f64) (catch 1 5 (;@1;)) (catch_all 3 (;@3;)) (catch 0 1 (;@5;)) (catch_all 2 (;@4;)) ;; label = @7
                  i32.const -850330417
                  i32.extend8_s
                  memory.size
                  f64.convert_i64_u
                  i32.trunc_sat_f64_s
                  elem.drop 0
                  i32.gt_u
                  i32.eqz
                  f64.const -0x1.a5a8f3cdbfffp-685 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010260661927619678;)
                  call 0
                  local.get 0
                  local.set 0
                  i64.load8_u offset=35402967
                  memory.size
                  i32.const -2063960860
                  struct.new 3
                  array.new_fixed 27 0
                  struct.new_default 20
                  global.get 0
                  loop (type 22) (result f32) ;; label = @8
                    call 0
                    i64.load8_u offset=102176511
                    i32.load16_s offset=78573510 align=1
                    global.get 0
                    block (type 34) ;; label = @9
                      loop (type 33) ;; label = @10
                        i32.const 698142206
                        block (type 31) (param i32) ;; label = @11
                          return_call 2
                          global.get 0
                          ref.as_non_null
                          try_table (result f32) (catch_all 2 (;@9;)) (catch_all 1 (;@10;)) (catch_all 1 (;@10;)) (catch_all 0 (;@11;)) (catch_all 7 (;@4;)) (catch 0 6 (;@5;)) (catch 1 6 (;@5;)) (catch 1 6 (;@5;)) (catch_all 0 (;@11;)) (catch_all 1 (;@10;)) ;; label = @12
                            global.get 0
                            try_table (result i32) (catch_all 3 (;@9;)) (catch_all 10 (;@2;)) (catch_all 4 (;@8;)) (catch 1 7 (;@5;)) (catch_all 3 (;@9;)) (catch 0 7 (;@5;)) (catch_all 10 (;@2;)) (catch_all 1 (;@11;)) ;; label = @13
                              block (type 22) (result f32) ;; label = @14
                                table.size 0
                                f64.convert_i32_u
                                i64.const 6148914691236517205
                                i64.load8_s offset=50347280
                                memory.grow
                                call 0
                                i64.eqz
                                i32.ctz
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                      end
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
