(module
  (rec
    (type (;0;) (sub (struct (field i16) (field i16) (field f64))))
    (type (;1;) (array (mut i8)))
    (type (;2;) (sub (array (mut i64))))
    (type (;3;) (struct (field i8) (field f32) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field (mut f64)) (field i8) (field (mut i8)) (field f32) (field (mut i16)) (field i32)))
    (type (;4;) (sub (struct (field i32) (field i64) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field i8) (field (mut nullref)) (field (mut f64)) (field i8) (field i16))))
    (type (;5;) (sub (array (mut i16))))
    (type (;6;) (func (result i64)))
    (type (;7;) (sub (func (param i64 structref i32) (result arrayref))))
    (type (;8;) (sub (array i16)))
    (type (;9;) (sub (array (mut nullexternref))))
    (type (;10;) (sub (struct (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i32)) (field (mut i64)) (field (mut i32)) (field f32) (field (mut i16)) (field i8) (field (mut i8)) (field (mut f32)))))
    (type (;11;) (struct (field i8) (field f32) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i8) (field f64) (field (mut i8)) (field (mut f32)) (field i8) (field i16) (field i8) (field f64) (field (mut i8)) (field i16)))
    (type (;12;) (sub 2 (array (mut i64))))
    (type (;13;) (array (mut i16)))
    (type (;14;) (sub (func (result i64 f64))))
    (type (;15;) (array (mut i32)))
    (type (;16;) (sub (struct (field i16) (field i8) (field i8) (field (mut i16)) (field i64) (field (mut i32)) (field (mut i16)) (field (mut f64)) (field i16) (field (mut i8)) (field i8))))
    (type (;17;) (func (param f64 f32 nullexternref i64) (result i32)))
    (type (;18;) (sub (func (param f64 f64))))
    (type (;19;) (struct (field (mut i8)) (field (mut i32)) (field i31ref) (field i16) (field i16) (field i16) (field i8) (field (mut i16)) (field (mut f32))))
    (type (;20;) (sub (struct)))
    (type (;21;) (func (result funcref)))
    (type (;22;) (sub (func (result eqref))))
    (type (;23;) (array (mut i16)))
    (type (;24;) (sub (func (result i64 i32 f32 i32))))
    (type (;25;) (func (param f32)))
    (type (;26;) (array (mut i8)))
    (type (;27;) (sub (func)))
    (type (;28;) (struct (field (mut i16)) (field i16)))
    (type (;29;) (sub (func (param i32))))
    (type (;30;) (array (mut f64)))
    (type (;31;) (array (mut i16)))
    (type (;32;) (sub (struct (field i16) (field (mut nullfuncref)) (field i16) (field f64) (field i8) (field i8) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field (mut i8)) (field (mut i16)))))
    (type (;33;) (array i16))
    (type (;34;) (array (mut i8)))
    (type (;35;) (struct (field f32)))
    (type (;36;) (sub (array i8)))
    (type (;37;) (struct (field (mut f64)) (field i16) (field (mut f32)) (field f64) (field (mut f64)) (field i16) (field (mut i8)) (field i32) (field (mut i16)) (field (mut f64)) (field (mut i32)) (field i16) (field (mut i32)) (field i16) (field i8)))
  )
  (rec
    (type (;38;) (array i8))
    (type (;39;) (array i8))
  )
  (import "" "" (func (;0;) (type 27)))
  (tag (;0;) (type 18) (param f64 f64))
  (global (;0;) f32 f32.const 0x1.ad70aep-92 (;=0.00000000000000000000000000033876855;))
  (global (;1;) f32 f32.const -0x1.269164p-72 (;=-0.00000000000000000000024366088;))
  (global (;2;) f64 f64.const 0x1.4eae2ef2d0f77p+592 (;=21190819495973665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;))
  (global (;3;) (mut i64) i64.const 0)
  (global (;4;) (mut i32) i32.const 0)
  (global (;5;) (mut i64) i64.const 0)
  (start 0)
  (elem (;0;) declare nullfuncref (ref.null nofunc))
  (func (;1;) (type 14) (result i64 f64)
    (local f32)
    struct.new 20
    global.get 0
    i32.trunc_sat_f32_s
    f64.const 0x1.d9e03a52bfaa3p+198 (;=743641792778164900000000000000000000000000000000000000000000;)
    struct.new 20
    global.get 0
    local.get 0
    block (result i32) ;; label = @1
      global.get 2
      i32.trunc_sat_f64_s
      i32.extend8_s
      f32.reinterpret_i32
      f32.trunc
      call 1
      i64.trunc_sat_f64_u
      i64.rotl
      ref.null 2
      struct.new_default 10
      block (type 22) (result eqref) ;; label = @2
        global.get 0
        i64.trunc_f32_s
        f64.convert_i64_s
        f64.trunc
        local.get 0
        struct.new 20
        br_on_cast_fail 0 (;@2;) (ref 20) (ref 20)
        ref.test (ref none)
        f64.convert_i32_u
        i32.trunc_f64_s
        global.get 1
        f32.const -nan:0x7ff800 (;=NaN;)
        loop ;; label = @3
          return_call 1
          loop (type 22) (result eqref) ;; label = @4
            struct.new 20
            elem.drop 0
            ref.cast (ref none)
            br_on_null 1 (;@3;)
            br_on_null 0 (;@4;)
            br_on_null 1 (;@3;)
            extern.convert_any
            ref.is_null
            struct.new 20
            struct.new_default 10
            br_on_cast_fail 2 (;@2;) (ref 10) (ref none)
            extern.convert_any
            elem.drop 0
            f64.const -nan:0xfffffbfffffff (;=NaN;)
            global.get 0
            local.set 0
            i64.trunc_f64_u
            i64.extend8_s
            f32.convert_i64_u
            i32.reinterpret_f32
            br_table 0 (;@4;) 1 (;@3;) 1 (;@3;)
            i32.const 1853671976
            block (result i32) ;; label = @5
              call 0
              loop (result arrayref) ;; label = @6
                global.get 1
                local.set 0
                try_table (catch_all 3 (;@3;)) (catch_all 2 (;@4;)) ;; label = @7
                  f64.const 0x1.fcp-1068 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000627;)
                  i32.trunc_sat_f64_u
                  f64.convert_i32_s
                  i32.trunc_f64_s
                  elem.drop 0
                  i32.ctz
                  br_table 0 (;@7;) 1 (;@6;) 3 (;@4;) 4 (;@3;) 3 (;@4;)
                  call 1
                  i32.trunc_f64_u
                  struct.new_default 3
                  f64.const -nan:0xdffffffffffff (;=NaN;)
                  struct.new_default 3
                  ref.cast (ref 3)
                  local.get 0
                  i32.reinterpret_f32
                  br_if 0 (;@7;)
                  loop (type 22) (result eqref) ;; label = @8
                    return_call 1
                    i64.reinterpret_f64
                    local.get 0
                    f32.const -0x1.04b652p-100 (;=-0.0000000000000000000000000000008033815;)
                    f32.ge
                    if (type 14) (result i64 f64) ;; label = @9
                      i32.const 8191
                      call 1
                      f64.sqrt
                      return_call 1
                      i64.trunc_f64_s
                      i64.div_s
                      i64.eqz
                      i64.const 893671279387398095
                      i64.popcnt
                      array.new_fixed 12 0
                      ref.test (ref none)
                      block (type 27) ;; label = @10
                        f64.const -0x1.0554bfab06bd8p+320 (;=-2180467711240769000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                        i64.trunc_f64_u
                        array.new_fixed 2 0
                        drop
                        global.get 3
                        i64.xor
                        global.set 3
                      end
                      global.get 4
                      i32.xor
                      global.set 4
                      global.get 3
                      i64.xor
                      global.set 3
                      global.get 4
                      i32.xor
                      global.set 4
                      i64.reinterpret_f64
                      global.get 5
                      i64.xor
                      global.set 5
                      global.get 3
                      i64.xor
                      global.set 3
                      global.get 4
                      i32.xor
                      global.set 4
                      i64.const 3583631836776280655
                      f64.const -inf (;=-inf;)
                    else
                      i64.const 1099511627776
                      f64.const 0x1.45e20b29f1bb3p-404 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030810835072248853;)
                    end
                    i64.reinterpret_f64
                    global.get 5
                    i64.xor
                    global.set 5
                    global.get 3
                    i64.xor
                    global.set 3
                    global.get 3
                    i64.xor
                    global.set 3
                    global.get 3
                    i64.xor
                    global.set 3
                    ref.null eq
                  end
                  drop
                  drop
                  i64.reinterpret_f64
                  global.get 5
                  i64.xor
                  global.set 5
                  drop
                  global.get 4
                  i32.xor
                  global.set 4
                  global.get 3
                  i64.xor
                  global.set 3
                end
                ref.null array
              end
              drop
              i32.const -16843010
            end
            global.get 4
            i32.xor
            global.set 4
            global.get 4
            i32.xor
            global.set 4
            drop
            drop
            global.get 4
            i32.xor
            global.set 4
            ref.null eq
          end
          drop
          drop
          drop
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
