(module
  (rec
    (type (;0;) (sub (array nullexternref)))
    (type (;1;) (sub (struct (field i16) (field (mut i16)) (field i32) (field i8) (field i16) (field (mut f64)) (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field i16) (field i32) (field (mut i64)) (field i31ref) (field i16) (field i16) (field (mut i64)) (field (mut i32)))))
    (type (;2;) (sub (struct (field (mut i8)) (field (mut i64)) (field f64) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i64)) (field i16) (field (mut i16)))))
    (type (;3;) (struct (field f64) (field i16) (field i16) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field (mut i32)) (field (mut i32)) (field (mut i16)) (field i16) (field (mut nullref)) (field f32) (field (mut i16)) (field f32) (field i64) (field f32)))
    (type (;4;) (sub (array (mut i8))))
    (type (;5;) (struct (field i8) (field (mut f64)) (field i16)))
    (type (;6;) (sub (func (param i32 f32))))
    (type (;7;) (sub (func)))
    (type (;8;) (array i8))
    (type (;9;) (array (mut i16)))
    (type (;10;) (sub (struct (field i16) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field (mut i16)))))
    (type (;11;) (sub (struct (field (mut i8)) (field f64) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field (mut i64)) (field (mut eqref)) (field i8) (field (mut i32)) (field i8) (field i16) (field i16) (field (mut exnref)) (field (mut i16)))))
    (type (;12;) (sub (struct (field (mut i8)) (field i16))))
    (type (;13;) (sub (array (mut i8))))
    (type (;14;) (sub (func (result i32))))
    (type (;15;) (sub (struct (field (mut i16)) (field (mut f32)) (field (mut i16)) (field i8) (field (mut i16)))))
    (type (;16;) (array f64))
    (type (;17;) (sub (array i64)))
    (type (;18;) (sub (struct (field i8) (field (mut i8)) (field (mut f32)) (field eqref) (field f64) (field i16) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field i16) (field (mut i16)) (field f32) (field i8) (field (mut i64)) (field f32) (field (mut i32)))))
    (type (;19;) (sub (struct (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field (mut i16)) (field (mut i64)) (field i8) (field i16) (field (mut i64)) (field i16) (field i32) (field (mut i64)) (field i8) (field externref))))
    (type (;20;) (func))
    (type (;21;) (struct (field i16) (field (mut anyref)) (field (mut i8)) (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut anyref)) (field f32) (field i8) (field (mut i16)) (field (mut f32)) (field f64) (field (ref null 8)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut f32))))
    (type (;22;) (sub (struct (field (mut i8)) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut f64)) (field i16) (field i16) (field (mut f64)) (field (mut i8)) (field f64) (field i16) (field i32))))
    (type (;23;) (func))
    (type (;24;) (sub (array (ref null 4))))
    (type (;25;) (sub (array (mut i16))))
    (type (;26;) (func (param f64 f32 arrayref) (result f32)))
    (type (;27;) (func))
    (type (;28;) (array (mut f32)))
    (type (;29;) (func))
    (type (;30;) (func))
    (type (;31;) (struct (field (mut i8)) (field (mut exnref)) (field (mut f32)) (field (mut f32)) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field (mut i8)) (field i64) (field (mut i16)) (field i16) (field i32) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut f64))))
    (type (;32;) (func (param i32 structref)))
    (type (;33;) (struct (field (mut i8)) (field i16) (field (mut f32)) (field (mut i8)) (field i16) (field i8) (field i16) (field i16) (field (mut i8)) (field i16) (field (mut eqref)) (field (mut i8)) (field i8) (field i8) (field (mut i8)) (field i64) (field i8) (field (mut f32))))
    (type (;34;) (func (result f32)))
    (type (;35;) (func (param i64) (result f64 (ref null 10) f32)))
    (type (;36;) (sub (func (param f32) (result f64))))
    (type (;37;) (sub (func (param nullref) (result i64 eqref))))
    (type (;38;) (func))
    (type (;39;) (func (param (ref null 8))))
    (type (;40;) (sub (func (param anyref i32 f32) (result i31ref))))
    (type (;41;) (sub (array eqref)))
    (type (;42;) (struct))
    (type (;43;) (func (result (ref null 37) (ref null 5))))
    (type (;44;) (sub (struct (field (mut i16)) (field (mut i16)) (field i8) (field i16) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field (mut f64)) (field (mut i32)))))
    (type (;45;) (sub (struct (field i32) (field (mut (ref null 22))) (field i16) (field i16) (field i16) (field (mut i8)) (field i8) (field (mut nullfuncref)) (field f32) (field (mut f32)) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field (mut f64)) (field (ref null 26)))))
    (type (;46;) (sub (func)))
    (type (;47;) (func (param i64) (result (ref null 27) f64 f32)))
    (type (;48;) (sub (func)))
    (type (;49;) (array f32))
    (type (;50;) (sub (array (mut i16))))
    (type (;51;) (array i8))
    (type (;52;) (sub 7 (func)))
    (type (;53;) (struct (field i16)))
    (type (;54;) (sub (struct (field (mut i64)) (field f64))))
  )
  (global (;0;) (mut (ref null 54)) ref.null 54)
  (global (;1;) f64 f64.const -0x1.537fb29c18829p+625 (;=-184648418662660580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;))
  (func (;0;) (type 36) (param f32) (result f64)
    struct.new 42
    array.new_fixed 41 0
    array.len
    if (type 14) (result i32) ;; label = @1
      f32.const 0x1.33ec38p+12 (;=4926.7637;)
      global.get 1
      i64.trunc_sat_f64_u
      struct.new 42
      global.get 0
      struct.new 42
      i32.const -2089353707
      f32.convert_i32_s
      global.get 1
      struct.new_default 10
      global.get 0
      ref.null 3
      ref.eq
      array.new_default 4
      ref.test (ref none)
      i64.const 9112987168658635284
      i64.clz
      f32.const -nan:0x7e0000 (;=NaN;)
      struct.new_default 12
      local.get 0
      try_table (type 20) ;; label = @2
        local.get 0
        f64.promote_f32
        loop (type 46) ;; label = @3
          try_table (type 20) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) ;; label = @4
          end
        end
        unreachable
      end
      unreachable
    else
      unreachable
    end
    unreachable
  )
)
