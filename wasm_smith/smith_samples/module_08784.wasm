(module
  (rec
    (type (;0;) (array f64))
    (type (;1;) (array (mut i8)))
    (type (;2;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8) (field i8) (field (mut structref)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i64)))))
    (type (;3;) (sub (func (result f32))))
    (type (;4;) (sub (func (result f32))))
    (type (;5;) (sub (func)))
    (type (;6;) (array (mut i8)))
    (type (;7;) (sub (func (param f64))))
    (type (;8;) (array (mut f64)))
    (type (;9;) (func (param i64) (result f64)))
    (type (;10;) (sub (array i8)))
    (type (;11;) (sub (struct)))
    (type (;12;) (sub (struct)))
    (type (;13;) (sub (struct (field i16) (field i8) (field (mut (ref null 11))) (field (mut i16)) (field (mut i64)) (field i8) (field (mut i31ref)) (field f64) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)))))
    (type (;14;) (func))
    (type (;15;) (sub (array i64)))
    (type (;16;) (sub (struct (field i16) (field i8) (field i8) (field (mut i16)) (field i16) (field i8) (field i16) (field (mut i16)))))
    (type (;17;) (sub (array (mut i16))))
    (type (;18;) (struct (field (mut i16)) (field i8) (field i16) (field (mut i8))))
    (type (;19;) (sub (func (result f32))))
    (type (;20;) (struct (field i16) (field f64) (field f32) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field f64) (field i64) (field i8) (field (mut f32)) (field (mut i8)) (field i8) (field f64) (field (mut i8)) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i32))))
    (type (;21;) (sub (struct (field (mut i16)) (field f32) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field (mut anyref)) (field (mut f64)) (field i8) (field i8) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8)) (field (ref null 8)) (field f64) (field (mut i16)) (field (mut i16)))))
    (type (;22;) (sub (array i8)))
    (type (;23;) (sub (struct (field (mut i16)) (field i64) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field (mut f64)) (field f32) (field i16) (field (mut f32)) (field i8) (field (mut f32)))))
    (type (;24;) (sub (func)))
    (type (;25;) (array f32))
    (type (;26;) (sub (array (mut i8))))
    (type (;27;) (struct (field i32) (field i16) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field f32) (field externref) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field (mut i32)) (field (mut i64)) (field (mut i16)) (field (mut i16))))
    (type (;28;) (array (mut f32)))
    (type (;29;) (sub (array f64)))
    (type (;30;) (func))
    (type (;31;) (sub final 26 (array (mut i8))))
    (type (;32;) (sub final 4 (func (result f32))))
    (type (;33;) (array (mut i16)))
    (type (;34;) (struct (field (mut i16)) (field (mut i8)) (field i64) (field (mut i16)) (field (mut i8)) (field (mut exnref)) (field (mut i16)) (field i8) (field i64)))
    (type (;35;) (func (param anyref (ref null 30)) (result f32 f64 f64 i31ref)))
    (type (;36;) (sub (array (mut f32))))
    (type (;37;) (sub (array (mut (ref null 12)))))
    (type (;38;) (func (result i64)))
    (type (;39;) (func))
    (type (;40;) (func (param i32) (result i64 nullref)))
    (type (;41;) (func (param i64 (ref null 3)) (result i64)))
    (type (;42;) (struct (field (mut i8))))
    (type (;43;) (sub (func)))
    (type (;44;) (func (param i32)))
    (type (;45;) (sub (func (param i32) (result i64 i32 i64))))
    (type (;46;) (func (param i32 i64)))
  )
  (import "" "" (global (;0;) f32))
  (table (;0;) 0 777593 nullexternref)
  (global (;1;) (mut f32) global.get 0)
  (export "\u{9}3\u{3}9" (global 1))
  (export "\u{12}" (global 0))
  (elem (;0;) i31ref (ref.null none) (ref.null none) (ref.null i31))
  (elem (;1;) (ref null 21))
  (elem (;2;) declare (ref null 4) (ref.null 4) (ref.null 4))
  (func (;0;) (type 3) (result f32)
    i64.const 35184372088831
    loop (type 9) (param i64) (result f64) ;; label = @1
      table.size 0
      call 0
      struct.new_default 21
      br_on_null 1
      elem.drop 1
      i64.const 3349207199168307558
      array.new_fixed 15 0
      ref.as_non_null
      f64.const -0x1.4126d064648e9p+464 (;=-59756910549126820000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
      data.drop 0
      try_table (type 7) (param f64) ;; label = @2
        f64.const 0x1.fffffcp-1052 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041445225;)
        loop (result f32) ;; label = @3
          struct.new 11
          return_call 0
          ref.null 40
          try_table (type 38) (result i64) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) (catch_all 1 (;@2;)) ;; label = @4
            data.drop 0
            br 1 (;@3;)
            i32.const -735204972
            i64.const 5869344182643648821
            ref.null 14
            loop (type 19) (result f32) ;; label = @5
              global.get 1
              i32.trunc_sat_f32_u
              f64.convert_i32_s
              i64.trunc_f64_u
              data.drop 2
              i64.ctz
              i32.const -1613960156
              elem.drop 2
              i32.popcnt
              ref.null 28
              ref.test (ref none)
              i32.rotr
              return_call 0
              i32.reinterpret_f32
              global.get 1
              i32.trunc_sat_f32_u
              i64.extend_i32_u
              return_call 0
              i64.trunc_f32_u
              i64.shr_s
              f64.const -0x1.bfd87e6cc4247p-911 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010560626436675;)
              i64.trunc_sat_f64_u
              i64.extend16_s
              ref.null func
              call 0
              global.set 1
              f64.const -0x1.bb2e6a4343c6ap-924 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012207464697091433;)
              i32.const -438141820
              try_table (type 45) (param i32) (result i64 i32 i64) ;; label = @6
                i64.const -2147483648
                f32.const -nan:0x7ff7ff (;=NaN;)
                i32.const -922054488
                struct.new_default 13
                struct.new 12
                try_table (type 19) (result f32) ;; label = @7
                  i32.const -1831689820
                  i64.extend_i32_s
                  return_call 0
                  f32.nearest
                  f64.const -0x1.dd59efab27b3bp-253 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000012882770005230323;)
                  f64.neg
                  i32.const 1110359920
                  f32.const 0x1.p-141 (;=0.000000000000000000000000000000000000000000359;)
                  return_call 0
                  i32.reinterpret_f32
                  br 4 (;@3;)
                  i64.extend_i32_s
                  f64.reinterpret_i64
                  i32.const -1095186109
                  unreachable
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "\1a")
  (data (;1;) "")
  (data (;2;) "\85\80")
)
