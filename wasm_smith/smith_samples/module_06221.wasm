(module
  (rec
    (type (;0;) (sub (array i8)))
    (type (;1;) (array (mut f64)))
    (type (;2;) (sub (array (mut i16))))
    (type (;3;) (array (mut i8)))
    (type (;4;) (sub (array (mut i16))))
    (type (;5;) (sub (array (mut funcref))))
    (type (;6;) (array (mut i16)))
    (type (;7;) (sub final 2 (array (mut i16))))
    (type (;8;) (func))
    (type (;9;) (struct (field i64) (field i8) (field i8) (field (mut f32)) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field f64) (field (mut i8)) (field (mut i8))))
    (type (;10;) (sub (func (param anyref) (result i64 f32))))
    (type (;11;) (sub (struct (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)))))
    (type (;12;) (struct (field (mut nullfuncref)) (field i8) (field i32) (field eqref) (field i32) (field f64) (field i8) (field f64) (field i8) (field i16) (field (mut i64)) (field f64) (field i64) (field i8)))
    (type (;13;) (array (mut (ref null 10))))
    (type (;14;) (sub (array (mut i16))))
    (type (;15;) (sub (array (mut i8))))
    (type (;16;) (sub (struct (field (mut (ref null 6))) (field i32) (field (mut f64)) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field i16) (field i16) (field i16))))
    (type (;17;) (struct (field i16) (field i16) (field (mut i8)) (field (mut exnref)) (field i8) (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field i8) (field (mut i16)) (field i16) (field (mut i8))))
    (type (;18;) (sub (func (param i32) (result f64))))
    (type (;19;) (sub (struct (field i16) (field i32) (field (mut arrayref)) (field (mut i8)) (field i16) (field f64) (field i32) (field (mut i16)) (field i16) (field f32) (field (ref null 8)) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field (mut i8)) (field f64) (field i8) (field (mut i8)) (field i16))))
    (type (;20;) (sub (array f32)))
    (type (;21;) (sub (func)))
    (type (;22;) (sub (array (mut i8))))
    (type (;23;) (sub (struct (field (mut i8)) (field (mut i16)) (field funcref))))
    (type (;24;) (sub (func (result (ref null 15) i32))))
    (type (;25;) (sub (array i8)))
    (type (;26;) (sub (func (param f64))))
    (type (;27;) (struct (field (mut i8)) (field i8)))
    (type (;28;) (func (result f32)))
    (type (;29;) (sub (func)))
    (type (;30;) (sub (array (mut i8))))
    (type (;31;) (sub (array i8)))
    (type (;32;) (sub final 23 (struct (field (mut i8)) (field (mut i16)) (field (ref null 18)) (field (mut i8)) (field (ref null 7)) (field i8) (field i8) (field f32))))
    (type (;33;) (sub (struct (field structref) (field i8) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field i16) (field i32) (field (mut f32)) (field (mut i64)) (field (mut i32)) (field (mut i64)) (field f32) (field i16))))
  )
  (import "" "" (table (;0;) i64 0 184082 (ref null 2)))
  (import "\u{3}" "" (func (;0;) (type 18)))
  (import "^" "" (tag (;0;) (type 21)))
  (import "/\u{14}\u{13}b" "" (func (;1;) (type 10)))
  (memory (;0;) i64 0 268751847837023)
  (tag (;1;) (type 8))
  (tag (;2;) (type 8))
  (export "\u{64d}" (func 3))
  (func (;2;) (type 10) (param anyref) (result i64 f32)
    table.size 0
    i64.load16_s
    f64.convert_i64_s
    loop (type 8) ;; label = @1
      f64.const -nan:0xfffffffe00000 (;=NaN;)
      struct.new_default 11
      i32.const 761360573
      local.get 0
      i64.const -2797400833142204711
      try_table (type 28) (result f32) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) (catch_all 0 (;@1;)) (catch 2 0 (;@1;)) (catch 0 0 (;@1;)) (catch 1 0 (;@1;)) ;; label = @2
        f64.const 0x1.ffffffffffcp-1032 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000043458473798964;)
        f64.sqrt
        f32.demote_f64
        i64.trunc_f32_u
        try_table (catch 2 1 (;@1;)) (catch 1 1 (;@1;)) (catch 1 1 (;@1;)) (catch 2 1 (;@1;)) (catch 0 1 (;@1;)) (catch_all 1 (;@1;)) (catch 2 1 (;@1;)) (catch 1 1 (;@1;)) ;; label = @3
          f64.const -nan:0xffffffffffffd (;=NaN;)
          i32.trunc_sat_f64_s
          local.get 0
          local.get 0
          struct.new_default 16
          struct.new_default 9
          br_on_null 0 (;@3;)
          table.size 0
          try_table (type 29) (catch 2 0 (;@3;)) (catch_all 2 (;@1;)) (catch 1 2 (;@1;)) (catch 2 0 (;@3;)) (catch 2 0 (;@3;)) (catch_all 0 (;@3;)) ;; label = @4
            local.get 0
            br_on_null 3 (;@1;)
            local.tee 0
            ref.test (ref null 20)
            f64.convert_i32_u
            i32.const 15
            f64.const -nan:0xfffffdfffffff (;=NaN;)
            i64.trunc_sat_f64_u
            throw 0
            f64.convert_i64_s
            i32.trunc_sat_f64_u
            if (type 18) (param i32) (result f64) ;; label = @5
              try_table (catch 0 4 (;@1;)) ;; label = @6
                block (type 8) ;; label = @7
                  f64.const -nan:0xfffffff800000 (;=NaN;)
                  ref.null 14
                  ref.as_non_null
                  call 1
                  ref.null 22
                  call 2
                  i32.trunc_f32_s
                  memory.size
                  memory.grow
                  i64.load32_s
                  memory.fill
                  f32.const 0x1.fffffp-129 (;=0.000000000000000000000000000000000000002938734;)
                  i64.const 9007199254740992
                  block ;; label = @8
                    br 5 (;@3;)
                    block (type 8) ;; label = @9
                      memory.size
                      i32.load8_s
                      array.new_fixed 25 0
                      block (type 8) ;; label = @10
                        try_table (type 28) (result f32) (catch_all 2 (;@8;)) (catch_all 1 (;@9;)) (catch_all 0 (;@10;)) (catch_all 7 (;@3;)) (catch_all 2 (;@8;)) (catch_all 1 (;@9;)) (catch_all 1 (;@9;)) (catch_all 6 (;@4;)) (catch 0 7 (;@3;)) ;; label = @11
                          i64.const -5198808847831710173
                          i64.load8_u
                          i64.eqz
                          f64.convert_i32_s
                          i64.trunc_sat_f64_u
                          try_table (result i32) (catch_all 10 (;@1;)) (catch_all 3 (;@8;)) (catch_all 1 (;@10;)) (catch 0 7 (;@4;)) (catch 0 5 (;@6;)) (catch_all 2 (;@9;)) (catch_all 10 (;@1;)) (catch_all 8 (;@3;)) (catch_all 7 (;@4;)) (catch 0 1 (;@10;)) ;; label = @12
                            table.size 0
                            f64.const -0x1.bfb82985a12a6p-684 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021789581931055574;)
                            f64.trunc
                            f64.nearest
                            f32.const -nan:0x7fdfff (;=NaN;)
                            i32.reinterpret_f32
                            i32.eqz
                            array.new 1
                            array.len
                            memory.size
                            i32.const 750983715
                            br 5 (;@7;)
                            i32.extend16_s
                            i32.extend8_s
                            table.size 0
                            try_table (type 28) (result f32) (catch 1 4 (;@8;)) ;; label = @13
                              loop ;; label = @14
                                f64.const 0x1p-959 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020522684006491881;)
                                array.new_fixed 1 0
                                extern.convert_any
                                br 11 (;@3;)
                                block ;; label = @15
                                end
                                try_table (result f32) (catch_all 4 (;@10;)) (catch 0 13 (;@1;)) (catch_all 13 (;@1;)) (catch_all 11 (;@3;)) (catch_all 4 (;@10;)) (catch_all 11 (;@3;)) ;; label = @15
                                  br 11 (;@4;)
                                  br 9 (;@6;)
                                  struct.new_default 12
                                  local.tee 0
                                  local.get 0
                                  try_table (type 28) (result f32) (catch_all 8 (;@7;)) ;; label = @16
                                    f64.const 0x0p+0 (;=0;)
                                    unreachable
                                  end
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                  end
                  unreachable
                end
              end
              unreachable
            else
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;3;) (type 18) (param i32) (result f64)
    unreachable
  )
)
