(module
  (rec
    (type (;0;) (sub (array (mut f64))))
    (type (;1;) (struct (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field i16) (field i8) (field i16) (field (mut i16)) (field (mut i64)) (field i16) (field i8) (field i8) (field (mut i8)) (field i32) (field (mut i64)) (field i16) (field (mut (ref null 0))) (field (mut i8)) (field (mut f64))))
    (type (;2;) (func (param i64) (result f32)))
  )
  (rec
    (type (;3;) (array (mut f32)))
    (type (;4;) (sub (func (result f64 exnref))))
    (type (;5;) (sub (struct (field anyref) (field (mut f32)))))
    (type (;6;) (sub (array nullexternref)))
    (type (;7;) (sub (struct (field i16) (field i32) (field i16) (field i8) (field (mut i16)))))
    (type (;8;) (array (mut i16)))
    (type (;9;) (sub (array (mut i8))))
    (type (;10;) (func (param eqref)))
    (type (;11;) (sub (array (mut i8))))
    (type (;12;) (func))
    (type (;13;) (array f32))
    (type (;14;) (struct (field i8) (field i16) (field i16) (field i16) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field i16) (field i64) (field i8) (field (mut i16)) (field (mut i64)) (field i8)))
    (type (;15;) (sub (struct (field (mut i64)) (field (mut anyref)) (field (mut i16)) (field (mut i8)))))
    (type (;16;) (sub (func (param arrayref nullref i32 f64))))
    (type (;17;) (struct (field (mut i16)) (field (mut f32)) (field i8) (field i16) (field (mut i8))))
    (type (;18;) (sub (array i8)))
    (type (;19;) (func (param i32) (result i32)))
    (type (;20;) (sub (func (param f64) (result i64 arrayref))))
    (type (;21;) (sub (func)))
    (type (;22;) (struct (field (mut i64)) (field (mut i64)) (field i8) (field (mut i32)) (field f32) (field i8) (field i8) (field (mut f64)) (field i16) (field (mut i32))))
    (type (;23;) (array i8))
    (type (;24;) (sub (func (param i32 i64))))
    (type (;25;) (sub (struct (field (mut anyref)) (field (mut i64)) (field (mut i8)))))
    (type (;26;) (sub (array (mut f64))))
    (type (;27;) (array (mut i8)))
    (type (;28;) (sub (struct (field i8) (field (mut i16)) (field (mut f64)) (field i16) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field (mut f32)) (field (mut i8)) (field i16) (field f32) (field i8) (field i8) (field (mut i8)) (field i8) (field f64) (field (mut f64)))))
    (type (;29;) (struct (field (mut i64)) (field (mut i8)) (field i16) (field i32) (field i64) (field i8) (field (mut i16)) (field (mut (ref null 11))) (field i8) (field i32) (field (mut i8)) (field i16) (field (mut i8)) (field f64) (field i16) (field i64) (field (mut i8)) (field (mut i32)) (field (mut i32))))
    (type (;30;) (struct (field (mut i8)) (field i16) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut (ref null 15)))))
    (type (;31;) (sub (func)))
    (type (;32;) (sub (struct)))
    (type (;33;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field i8) (field (mut i32)) (field (mut i8)) (field (mut f64)) (field i8) (field i8) (field (mut i16)))))
    (type (;34;) (sub (struct (field (mut i8)) (field (mut i16)) (field i16) (field f32) (field (mut i16)) (field (mut f32)) (field (mut i64)))))
    (type (;35;) (struct (field f64) (field i16) (field (mut i8)) (field (mut i8)) (field f32) (field (mut i8)) (field i32) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field i32)))
    (type (;36;) (sub (func (param (ref null 8) anyref f32 i32) (result f64))))
    (type (;37;) (func))
    (type (;38;) (struct (field (mut i16)) (field i64) (field (mut i8)) (field (mut i32)) (field i8) (field (mut i8))))
    (type (;39;) (struct (field i16) (field nullfuncref) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut f64))))
    (type (;40;) (array i8))
    (type (;41;) (sub (struct (field i8) (field i8) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field i64) (field (mut f32)) (field (mut i16)) (field i16) (field i32) (field (mut f32)))))
    (type (;42;) (array i8))
    (type (;43;) (func (result i64 f64)))
  )
  (import "" "" (global (;0;) i64))
  (import ";\u{b}" "" (table (;0;) i64 2 funcref))
  (memory (;0;) i64 12163 193096241911486)
  (global (;1;) f32 f32.const -0x1.afb1aep+113 (;=-17511592000000000000000000000000000;))
  (export "" (func 1))
  (export "%" (global 0))
  (export "2" (func 0))
  (elem (;0;) (table 0) (i64.const 1) (ref null 43))
  (elem (;1;) (table 0) (global.get 0) (ref null 2) (ref.null nofunc) (ref.func 1))
  (elem (;2;) (table 0) (global.get 0) (ref null 24) (ref.null 24))
  (func (;0;) (type 20) (param f64) (result i64 arrayref)
    (local f32)
    global.get 1
    array.new_fixed 3 0
    i64.const -8001542065118624437
    struct.new 32
    try_table (type 37) ;; label = @1
      block (type 37) ;; label = @2
        block (type 4) (result f64 exnref) ;; label = @3
          ref.func 1
          table.size 0
          call_indirect (type 37)
          f64.const 0x1.fff8p-1061 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080943;)
          return_call 0
          ref.null 19
          ref.is_null
          br 1 (;@2;)
          f32.convert_i32_s
          memory.size
          block ;; label = @4
            global.get 0
            f64.load offset=163764996
            i32.trunc_f64_s
            struct.new_default 15
            local.get 0
            memory.size
            i64.extend32_s
            i64.load offset=667359012
            i64.eqz
            table.size 0
            f32.convert_i64_u
            struct.new_default 30
            ref.null 21
            ref.cast (ref nofunc)
            f32.const -0x1.5cbefep-47 (;=-0.000000000000009679648;)
            i64.trunc_sat_f32_u
            f64.convert_i64_u
            try_table (type 4) (result f64 exnref) (catch_all 3 (;@1;)) (catch_all 3 (;@1;)) (catch_all 2 (;@2;)) ;; label = @5
              loop ;; label = @6
                br 4 (;@2;)
                table.size 0
                f64.reinterpret_i64
                f32.const -0x1.8d41d6p+26 (;=-104138584;)
                f32.const 0x1.05fff8p-32 (;=0.0000000002382875;)
                f32.ge
                f64.convert_i32_u
                local.tee 0
                local.get 1
                f32.trunc
                f32.sqrt
                array.new_fixed 3 0
                f32.const 0x1.p-140 (;=0.000000000000000000000000000000000000000000717;)
                f32.floor
                loop (result f64) ;; label = @7
                  f64.const -nan:0xffffbffffffff (;=NaN;)
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
    end
    unreachable
  )
  (func (;1;) (type 2) (param i64) (result f32)
    unreachable
  )
)
