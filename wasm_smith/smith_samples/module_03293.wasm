(module
  (rec
    (type (;0;) (sub (struct (field (mut i16)) (field i8) (field externref))))
    (type (;1;) (sub (array i64)))
    (type (;2;) (struct (field (mut i8)) (field (mut i16)) (field i16) (field i64) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i16)) (field f32) (field f64) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field i16) (field i16) (field i8)))
    (type (;3;) (sub (struct (field i16) (field (mut i16)) (field (mut i16)) (field i16))))
    (type (;4;) (sub (func (result f32))))
    (type (;5;) (struct (field (mut i8)) (field i8) (field (mut i64)) (field f32)))
    (type (;6;) (sub (array (mut f32))))
    (type (;7;) (sub (func (result i64))))
    (type (;8;) (sub (array i32)))
    (type (;9;) (sub (struct (field (mut i32)) (field i8) (field i32) (field f64) (field f32) (field f32) (field f64) (field i8) (field i16) (field (mut i32)) (field (mut i16)) (field (mut i16)) (field i32) (field (mut f64)) (field i8) (field nullexternref) (field (mut i64)))))
    (type (;10;) (sub (array i16)))
    (type (;11;) (sub (struct (field i8) (field (mut i64)) (field i8))))
    (type (;12;) (sub (array f32)))
    (type (;13;) (sub (func (param f64 (ref null 11)))))
    (type (;14;) (sub final 1 (array i64)))
    (type (;15;) (sub (struct (field i16) (field externref) (field (mut (ref null 10))) (field f32) (field i8) (field i16) (field i8) (field i64) (field i8) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field (mut f32)) (field i8) (field (mut i8)) (field (mut f32)) (field externref) (field (mut i16)) (field (mut f32)))))
    (type (;16;) (sub (func (result eqref))))
    (type (;17;) (struct (field f32) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field f64) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field i8) (field i16) (field i16)))
    (type (;18;) (sub (array i16)))
    (type (;19;) (sub (func)))
    (type (;20;) (struct (field i8) (field i8) (field (mut funcref)) (field (mut f64)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut f64)) (field f64) (field i8) (field f32) (field i8) (field i32)))
    (type (;21;) (func))
    (type (;22;) (array i8))
    (type (;23;) (sub (func)))
    (type (;24;) (array (mut i8)))
    (type (;25;) (sub (array i16)))
    (type (;26;) (sub (struct (field f64) (field i16))))
    (type (;27;) (struct (field f32) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field (mut f32)) (field (mut i16)) (field i16) (field i8) (field i8) (field i16)))
    (type (;28;) (sub (func (param f32) (result f64 f64))))
    (type (;29;) (sub (array (mut (ref null 24)))))
    (type (;30;) (sub (func)))
    (type (;31;) (sub (struct (field i16) (field i8) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field i16) (field i8) (field (mut (ref null 25))) (field (mut f64)) (field i8) (field i8) (field f32) (field i16))))
    (type (;32;) (sub (func)))
    (type (;33;) (array i16))
  )
  (rec
    (type (;34;) (sub (array f64)))
    (type (;35;) (struct (field (mut i16)) (field f64) (field i8) (field (mut anyref)) (field f32) (field (mut f64)) (field (mut i16)) (field i8) (field (mut i16)) (field i31ref) (field i16) (field i32)))
    (type (;36;) (sub (array (mut i64))))
    (type (;37;) (sub (struct (field f64) (field (mut i32)) (field (mut eqref)) (field (mut i8)) (field (mut i8)) (field f64) (field i64) (field (mut externref)) (field (mut i32)) (field f64) (field (mut i16)) (field (mut i8)) (field (mut i64)) (field (ref null 23)) (field (mut i8)) (field (mut i8)) (field (mut f32)))))
    (type (;38;) (sub (struct (field f64) (field (mut i16)) (field (mut nullfuncref)) (field (mut f32)) (field i16))))
    (type (;39;) (struct (field i8) (field (mut i32))))
    (type (;40;) (array (mut i8)))
    (type (;41;) (sub (func (param i32 i64 f32))))
  )
  (tag (;0;) (type 23))
  (tag (;1;) (type 32))
  (tag (;2;) (type 32))
  (global (;0;) (mut f32) f32.const -0x1.757cacp+40 (;=-1604114400000;))
  (global (;1;) i64 i64.const 4336382519428879236)
  (global (;2;) (mut i32) i32.const 234828233)
  (global (;3;) (mut f32) f32.const -0x1.8283f2p-17 (;=-0.000011519057;))
  (export "`\u{13}" (func 1))
  (start 0)
  (func (;0;) (type 21)
    br 0
    return_call 0
    f64.const 0x1.1498e6af552cbp+809 (;=3688709176538636000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
    br 0
    i64.reinterpret_f64
    i32.const -1834059981
    i64.extend_i32_s
    call 0
    f64.convert_i64_u
    data.drop 0
    f64.floor
    f32.const -0x1.fffffep+112 (;=-10384593000000000000000000000000000;)
    return_call 0
    i32.trunc_f32_s
    i32.extend16_s
    i32.const 131072
    i32.xor
    i64.extend_i32_s
    loop ;; label = @1
      i32.const -194153020
      ref.null 9
      struct.get_s 9 11
      i32.mul
      f64.convert_i32_s
      ref.null 2
      ref.cast (ref null 2)
      br 1
      try_table (type 7) (result i64) (catch_all 1) (catch 1 1) (catch 1 0 (;@1;)) (catch_all 1) (catch 2 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 1) ;; label = @2
        f32.const -nan:0x7e0000 (;=NaN;)
        i32.reinterpret_f32
        i32.eqz
        array.new_default 14
        br_on_null 1 (;@1;)
        i32.const -1668539871
        try_table (type 19) (catch 1 2) (catch_all 2) (catch 1 2) (catch 2 2) ;; label = @3
          loop (type 21) ;; label = @4
            f32.const -nan:0x7ffe00 (;=NaN;)
            struct.new_default 3
            block (type 21) ;; label = @5
              block (type 19) ;; label = @6
                ref.null 10
                return_call 0
                f64.const -0x1.9bdeecbd6522ap-419 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011883732151330604;)
                i32.trunc_f64_s
                f64.convert_i32_s
                f64.neg
                f64.nearest
                i64.trunc_f64_s
                try_table (result (ref null 13)) ;; label = @7
                  f32.const 0x1.62127ep-81 (;=0.00000000000000000000000057203455;)
                  i64.trunc_f32_s
                  i64.const 281474976710656
                  loop (type 21) ;; label = @8
                    data.drop 0
                    i64.const -281474976710657
                    f64.convert_i64_s
                    i64.const -2049
                    f32.convert_i64_u
                    br 2 (;@6;)
                    i32.trunc_sat_f32_u
                    i64.extend_i32_u
                    i64.extend32_s
                    f64.reinterpret_i64
                    i64.trunc_sat_f64_u
                    i32.const 65535
                    global.get 3
                    global.set 3
                    block ;; label = @9
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
            end
            unreachable
          end
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 16) (result eqref)
    unreachable
  )
  (data (;0;) "")
)
