(module
  (rec
    (type (;0;) (array (mut i16)))
    (type (;1;) (sub (array i16)))
    (type (;2;) (sub (array (mut i8))))
    (type (;3;) (sub 2 (array (mut i8))))
    (type (;4;) (func (param i64)))
    (type (;5;) (sub (func (param i64))))
    (type (;6;) (sub (func (param anyref i31ref i64) (result f64 f64 f32))))
    (type (;7;) (func (param i64)))
    (type (;8;) (func (param eqref) (result f32 externref)))
    (type (;9;) (sub (array (mut i8))))
    (type (;10;) (struct (field (mut i8)) (field f64) (field i8) (field (mut i8)) (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field (mut f64)) (field i64) (field (mut f32)) (field (mut f64)) (field (mut i8)) (field i8) (field (mut f32))))
    (type (;11;) (array i8))
    (type (;12;) (sub (func)))
    (type (;13;) (sub 2 (array (mut i8))))
    (type (;14;) (sub (func (result f32))))
    (type (;15;) (sub (array (mut i16))))
    (type (;16;) (sub (struct (field (mut nullfuncref)) (field (mut i32)) (field (mut i32)) (field i64) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field (mut i64)) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field i8) (field i16) (field (mut i16)))))
    (type (;17;) (array i16))
    (type (;18;) (sub (array i16)))
    (type (;19;) (sub (struct (field (mut i8)) (field (mut i8)) (field (mut (ref null 11))) (field i8) (field (mut i32)) (field (mut i16)) (field i8) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field (mut (ref null 17))) (field (mut i8)) (field (mut i16)) (field i16) (field i8) (field (mut externref)) (field i8))))
    (type (;20;) (sub (func (param i64) (result f32 i32 f32))))
    (type (;21;) (sub (struct (field i8))))
    (type (;22;) (sub (struct (field i8) (field (mut i16)) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field i8) (field (mut i16)) (field f32) (field (mut i16)) (field i16) (field f64) (field i8) (field i16) (field (ref null 12)))))
    (type (;23;) (struct (field (mut i32)) (field f32) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field i16) (field i8) (field (mut i64))))
    (type (;24;) (func))
    (type (;25;) (func (param f64)))
    (type (;26;) (func))
    (type (;27;) (sub (struct (field i16) (field (mut f64)) (field i64) (field nullexternref) (field i16) (field i16) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field (mut f32)) (field (mut i64)) (field i16) (field i16) (field i8))))
    (type (;28;) (array i8))
    (type (;29;) (sub (func (result (ref null 15) i64 f64 f32))))
    (type (;30;) (struct (field i16) (field f64) (field (mut i8)) (field exnref) (field i32) (field i16) (field (mut i64)) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field f32) (field i16) (field i16) (field i16) (field (mut i8)) (field i64) (field (mut eqref)) (field (mut i16)) (field (mut f32)) (field (mut i8))))
    (type (;31;) (sub (func (result f32 i32 i64))))
    (type (;32;) (sub (array (mut i16))))
    (type (;33;) (sub (array (mut i16))))
    (type (;34;) (sub (struct (field (mut i16)) (field (mut i16)) (field i16))))
    (type (;35;) (sub (struct (field i32) (field i16) (field (mut i16)) (field f32) (field f64) (field (mut f64)) (field (ref null 7)) (field i16) (field (mut i16)) (field i16))))
  )
  (rec
    (type (;36;) (sub (array i32)))
    (type (;37;) (struct (field i64) (field (mut i8)) (field (mut i8)) (field (mut i32)) (field i8) (field i16) (field (mut i8)) (field i8) (field (mut externref)) (field (mut i32)) (field (mut nullfuncref)) (field (mut f64)) (field (mut i8)) (field f64) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8)) (field i16)))
    (type (;38;) (sub (func)))
  )
  (table (;0;) i64 8 (ref null 11) ref.null none)
  (tag (;0;) (type 4) (param i64))
  (func (;0;) (type 7) (param i64)
    (local i64 (ref null 4) i64)
    loop (type 14) (result f32) ;; label = @1
      struct.new_default 21
      table.size 0
      i32.const -65537
      i64.extend_i32_s
      i64.shr_u
      block (type 12) ;; label = @2
        br 1 (;@1;)
        table.size 0
        block ;; label = @3
          ref.null 22
          extern.convert_any
          struct.new_default 21
          local.get 3
          br 3
          call 0
          try_table (type 38) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) ;; label = @4
            i32.const 1914650879
            block (type 24) ;; label = @5
              local.get 2
              try_table (catch_all 1 (;@4;)) (catch_all 5) (catch_all 2 (;@3;)) (catch_all 3 (;@2;)) (catch_all 5) ;; label = @6
                ref.null 30
                loop (type 8) (param eqref) (result f32 externref) ;; label = @7
                  br_on_null 7
                  try_table (type 12) (catch_all 2 (;@5;)) ;; label = @8
                    local.get 1
                    br 6 (;@2;)
                    table.get 0
                    loop ;; label = @9
                      data.drop 0
                      data.drop 0
                    end
                    table.size 0
                    i32.const 575979268
                    f32.reinterpret_i32
                    i32.trunc_f32_s
                    br_table 0 (;@8;) 2 (;@6;) 3 (;@5;) 4 (;@4;) 5 (;@3;) 6 (;@2;) 7 (;@1;) 8 4 (;@4;)
                    f64.convert_i64_s
                    i64.const -1024
                    i64.extend32_s
                    i64.eqz
                    struct.new 21
                    i32.const -1643838814
                    f32.const -nan:0x7ffffe (;=NaN;)
                    data.drop 1
                    i32.trunc_f32_u
                    br_if 8
                    i32.const 134217727
                    array.new_data 0 1
                    f64.const -0x1.55d8a71e2ffc5p+790 (;=-8695358514177328000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                    f64.trunc
                    i32.trunc_sat_f64_u
                    try_table (type 12) (catch_all 7 (;@1;)) (catch_all 2 (;@6;)) (catch_all 4 (;@4;)) (catch_all 3 (;@5;)) (catch_all 6 (;@2;)) (catch_all 0 (;@8;)) (catch_all 5 (;@3;)) (catch_all 0 (;@8;)) (catch_all 0 (;@8;)) ;; label = @9
                      struct.new_default 19
                      extern.convert_any
                      f64.const 0x1.p-1064 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000506;)
                      table.size 0
                      f32.const 0x1.63275ap+27 (;=186202830;)
                      f32.nearest
                      i64.const -3088363112155240179
                      f64.convert_i64_s
                      f32.const 0x1.f169b8p+78 (;=587241580000000000000000;)
                      br 5 (;@4;)
                      block (type 24) ;; label = @10
                        loop (type 38) ;; label = @11
                          f64.const -0x1.9cbf7dd3a5ed8p+695 (;=-265028154935178400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                          struct.new_default 37
                          br 6 (;@5;)
                          br_on_cast_fail 4 (;@7;) (ref 37) (ref none)
                          try_table (type 12) (catch_all 9 (;@2;)) ;; label = @12
                          end
                          br_on_non_null 4 (;@7;)
                          ref.null 18
                          block (type 31) (result f32 i32 i64) ;; label = @12
                            loop (type 38) ;; label = @13
                              table.size 0
                              nop
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "")
  (data (;1;) "\da")
)
