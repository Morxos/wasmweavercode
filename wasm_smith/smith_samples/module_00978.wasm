(module
  (rec
    (type (;0;) (sub (func (param f32))))
    (type (;1;) (sub (func (param f32 f32 nullfuncref f32 i32 f32))))
    (type (;2;) (sub (func)))
    (type (;3;) (sub (func (param f64) (result f32))))
    (type (;4;) (array (mut i16)))
    (type (;5;) (sub (func (param f64))))
    (type (;6;) (struct (field (mut f64)) (field f64) (field i16) (field f32) (field i32) (field i16) (field i8) (field i32) (field (mut i16)) (field f64) (field externref) (field (mut i8)) (field (mut f32)) (field f64) (field anyref) (field (mut i8)) (field i16) (field i8) (field i16)))
    (type (;7;) (func (param f32 i64 i64 i32 i31ref)))
    (type (;8;) (func (param f64)))
    (type (;9;) (array (mut i8)))
    (type (;10;) (struct (field f32) (field i8) (field f64) (field i8) (field i8) (field i8) (field i16) (field (mut i16)) (field i8) (field i16) (field (mut i64)) (field (mut i32)) (field i64) (field (mut i16)) (field (mut i8))))
    (type (;11;) (func (param i64 i32 eqref)))
    (type (;12;) (struct (field (mut i32)) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field f64) (field i16) (field (mut f64)) (field i16) (field i16) (field i8) (field (mut f32)) (field i16) (field i8) (field i16) (field i16) (field (mut i8))))
    (type (;13;) (func (param f64) (result anyref)))
    (type (;14;) (sub (array (mut i16))))
    (type (;15;) (array (mut i8)))
    (type (;16;) (sub (array (mut i8))))
    (type (;17;) (func (param f64 f32 f32 i64)))
    (type (;18;) (array i32))
    (type (;19;) (struct (field (ref null 11)) (field (mut f64)) (field (mut (ref null 8))) (field i8) (field (mut i16)) (field (mut f32)) (field i16) (field i8) (field nullref) (field i16) (field i16) (field (mut i16)) (field (mut f64)) (field i16) (field (mut i8)) (field (mut nullexternref))))
    (type (;20;) (sub (struct (field i16))))
    (type (;21;) (array i8))
    (type (;22;) (func (param f32 i64 i64 i64 i64)))
    (type (;23;) (sub (func (param i32 f32 f32 i64))))
    (type (;24;) (sub (func (param i64) (result i32))))
    (type (;25;) (sub (struct (field (mut i8)) (field (mut f64)) (field (mut i32)) (field (mut f32)) (field (mut f64)) (field i16) (field i8))))
    (type (;26;) (func (param f64)))
    (type (;27;) (sub (array i64)))
    (type (;28;) (sub (func)))
    (type (;29;) (sub (array i16)))
    (type (;30;) (sub (struct (field (mut i8)) (field nullref) (field f64) (field i16) (field (mut i8)) (field i64) (field (mut i64)) (field i8) (field (mut i16)) (field f32) (field (mut f32)) (field (mut i16)) (field i64) (field (mut i16)) (field i64) (field (mut eqref)) (field (mut i8)) (field (mut i16)) (field i8) (field f64))))
    (type (;31;) (func (result arrayref f32 f32 f64 f32)))
    (type (;32;) (func (result nullref i32)))
    (type (;33;) (func (param i32) (result f64 nullfuncref f64)))
    (type (;34;) (sub (array (mut f32))))
    (type (;35;) (array (mut i8)))
    (type (;36;) (sub (func (result i32))))
  )
  (global (;0;) exnref ref.null exn)
  (global (;1;) (mut f32) f32.const -0x1.e15d62p-44 (;=-0.00000000000010688445;))
  (global (;2;) (ref null 0) ref.null 0)
  (global (;3;) (mut i32) i32.const 1771958544)
  (global (;4;) (mut (ref null 22)) ref.null 22)
  (export "" (func 0))
  (export "1" (global 1))
  (start 0)
  (elem (;0;) nullref)
  (elem (;1;) declare (ref null 33))
  (elem (;2;) (ref null 2))
  (func (;0;) (type 2)
    (local i64 f32)
    try_table (type 32) (result nullref i32) (catch_all 0) (catch_all 0) ;; label = @1
      data.drop 1
      elem.drop 0
      call 0
      nop
      local.get 0
      return_call 0
      f32.convert_i64_s
      i32.const -42400629
      br 1
      struct.new 20
      return_call 0
      elem.drop 1
      loop ;; label = @2
        data.drop 0
        try_table (type 32) (result nullref i32) (catch_all 2) (catch_all 2) ;; label = @3
          f32.const 0x1.150a26p-55 (;=0.000000000000000030036698;)
          f32.trunc
          i64.trunc_f32_u
          ref.null 19
          return_call 0
          return_call 0
          i64.const -7522009820645011975
          i64.eqz
          ref.i31
          ref.as_non_null
          block (result i64) ;; label = @4
            i32.const -402386638
            i32.extend16_s
            if (type 31) (result arrayref f32 f32 f64 f32) ;; label = @5
              block (type 28) ;; label = @6
                i64.const -549755813889
                f64.const 0x1.ap-1045 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000431030395;)
                f64.neg
                i64.reinterpret_f64
                struct.new_default 30
                f64.const 0x1.e45514c6bd06fp-87 (;=0.000000000000000000000000012226267349929071;)
                f64.ceil
                try_table (type 36) (result i32) (catch_all 0 (;@6;)) (catch_all 0 (;@6;)) (catch_all 0 (;@6;)) (catch_all 0 (;@6;)) ;; label = @7
                  return_call 0
                  call 0
                  loop ;; label = @8
                    struct.new_default 6
                    br 0 (;@8;)
                    ref.as_non_null
                    elem.drop 1
                    data.drop 2
                    br 8
                    block (type 28) ;; label = @9
                      global.get 2
                      data.drop 3
                      ref.is_null
                      i32.const 4096
                      i32.sub
                      block (type 36) (result i32) ;; label = @10
                        struct.new_default 25
                        elem.drop 0
                        i32.const -550967102
                        f64.convert_i32_u
                        i32.trunc_sat_f64_s
                        f32.convert_i32_u
                        try_table (type 2) (catch_all 4 (;@6;)) ;; label = @11
                          elem.drop 0
                          f32.const 0x1.fcp-143 (;=0.000000000000000000000000000000000000000000178;)
                          f64.promote_f32
                          i32.const -131073
                          array.new_fixed 18 0
                          return_call 0
                          f64.const -nan:0xfffffffffe000 (;=NaN;)
                          i32.trunc_f64_u
                          if (type 36) (result i32) ;; label = @12
                            br 1 (;@11;)
                            br 6 (;@6;)
                            br 1 (;@11;)
                            data.drop 4
                            ref.null 3
                            data.drop 0
                            block ;; label = @13
                              try_table (type 31) (result arrayref f32 f32 f64 f32) (catch_all 5 (;@8;)) (catch_all 13) (catch_all 0 (;@13;)) (catch_all 5 (;@8;)) (catch_all 7 (;@6;)) (catch_all 2 (;@11;)) (catch_all 11 (;@2;)) ;; label = @14
                                try_table (type 36) (result i32) (catch_all 5 (;@9;)) (catch_all 5 (;@9;)) (catch_all 1 (;@13;)) (catch_all 6 (;@8;)) (catch_all 6 (;@8;)) ;; label = @15
                                  global.get 4
                                  ref.test nullfuncref
                                  i32.clz
                                  f32.reinterpret_i32
                                  br 9 (;@6;)
                                  return_call 0
                                  global.set 1
                                  f32.const -nan:0x7ff800 (;=NaN;)
                                  f64.const 0x1.fffffffffffffp-992 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000477830972673648;)
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          else
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            else
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "\9a")
  (data (;1;) "")
  (data (;2;) "\05")
  (data (;3;) "")
  (data (;4;) "")
)
