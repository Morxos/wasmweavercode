(module
  (rec
    (type (;0;) (sub (struct (field i16) (field i8) (field (mut i64)))))
    (type (;1;) (func))
    (type (;2;) (struct (field (mut i8)) (field (mut i8)) (field f64) (field i16) (field i64) (field i16) (field (ref null 0)) (field (mut i8))))
    (type (;3;) (sub (struct (field (mut i8)) (field f32) (field f64) (field i16) (field (mut i8)) (field i64))))
    (type (;4;) (func (param f64)))
    (type (;5;) (func))
    (type (;6;) (func (param i64 i64 i64)))
    (type (;7;) (struct (field i8)))
    (type (;8;) (struct (field (mut i64)) (field i8) (field (mut i16)) (field i32)))
    (type (;9;) (sub (func (param f64 f32 (ref null 3)))))
    (type (;10;) (sub (struct (field (mut i16)))))
    (type (;11;) (sub (struct (field i8) (field i16) (field i32) (field i16) (field i64) (field (mut i8)) (field i32) (field (mut i16)) (field (mut i32)) (field i8) (field i32) (field (mut i16)) (field (mut i32)) (field i8) (field (mut f32)) (field (mut i8)) (field i8) (field (mut i8)) (field i16) (field (mut i16)))))
    (type (;12;) (sub (array (mut i16))))
    (type (;13;) (sub (array (mut i16))))
    (type (;14;) (sub (array i8)))
    (type (;15;) (struct (field (mut (ref null 12)))))
    (type (;16;) (func (param funcref i32) (result i64 f64 i32 i32 f64)))
    (type (;17;) (sub (array f32)))
    (type (;18;) (sub (func)))
    (type (;19;) (sub (array (mut i16))))
    (type (;20;) (func (result i64 i32 i64 i32)))
    (type (;21;) (struct (field i64) (field i8) (field i32) (field i8) (field (mut f32)) (field i8) (field i16) (field i8) (field i32) (field i64) (field arrayref) (field f64) (field i8) (field (mut i8)) (field i32) (field i16)))
    (type (;22;) (sub (func (param i32 i32 i64 eqref) (result i64))))
    (type (;23;) (array (mut (ref null 3))))
    (type (;24;) (func (param i64) (result nullfuncref f64 f64)))
    (type (;25;) (array (mut i32)))
    (type (;26;) (sub (struct (field (mut i16)) (field (mut i32)) (field (mut externref)) (field (mut i16)) (field (mut f32)) (field i64) (field (mut exnref)) (field i16) (field arrayref) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i8)) (field i16) (field i8))))
    (type (;27;) (sub (struct (field i16) (field i16) (field i8) (field (mut i16)) (field i16) (field (mut i32)) (field i8) (field i32) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)))))
    (type (;28;) (struct (field (ref null 9)) (field i8) (field i8) (field i16)))
    (type (;29;) (struct (field (mut i8)) (field (mut i16)) (field i8) (field (ref null 12)) (field (mut i64)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut f64))))
    (type (;30;) (sub (func (param i32 f32 i64 i32 f32 i32 exnref))))
    (type (;31;) (sub (struct (field i16) (field i8) (field (mut i8)) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field i16) (field (mut anyref)) (field i16) (field i16) (field (mut i16)) (field i16) (field (mut i8)))))
    (type (;32;) (sub (array i16)))
    (type (;33;) (sub (struct (field i16) (field i16) (field (mut f32)) (field (mut eqref)) (field (mut i16)) (field (mut i16)) (field (mut f64)))))
    (type (;34;) (sub (func (param f32 f32))))
    (type (;35;) (func (result f64)))
    (type (;36;) (array (mut i16)))
    (type (;37;) (array (mut i16)))
    (type (;38;) (struct (field (ref null 27)) (field (mut i32)) (field (ref null 14)) (field i16) (field (mut nullexternref)) (field f64) (field i8) (field f32) (field externref) (field i8) (field (mut i8))))
    (type (;39;) (array (mut i8)))
    (type (;40;) (sub (array i64)))
    (type (;41;) (sub (func)))
    (type (;42;) (sub (array i16)))
    (type (;43;) (sub 17 (array f32)))
    (type (;44;) (sub (struct (field i32) (field i16))))
    (type (;45;) (sub final 17 (array f32)))
    (type (;46;) (array i16))
    (type (;47;) (sub (func (result i32 anyref))))
    (type (;48;) (struct (field (mut f64)) (field i16) (field i16) (field i8) (field f32) (field i16)))
    (type (;49;) (sub (func (result i64))))
    (type (;50;) (func (param f32)))
    (type (;51;) (array (mut i16)))
    (type (;52;) (func (param (ref null 47) i64 f64 externref) (result f32)))
    (type (;53;) (sub (array i16)))
    (type (;54;) (sub (struct (field (mut i32)) (field (mut nullexternref)) (field (ref null 24)) (field (mut i16)))))
    (type (;55;) (array arrayref))
    (type (;56;) (struct (field (mut i16)) (field (mut i16)) (field (mut i64)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i64)) (field (mut i16))))
    (type (;57;) (array (mut i16)))
    (type (;58;) (sub (struct (field (mut nullfuncref)) (field (mut i16)) (field (mut i8)) (field (ref null 11)))))
    (type (;59;) (sub (func (result f64 i32))))
    (type (;60;) (sub (struct (field (mut i8)) (field (mut f32)) (field i64))))
    (type (;61;) (func (param i64) (result f64 f64 f64 f32)))
    (type (;62;) (func (param (ref null 22))))
    (type (;63;) (sub 19 (array (mut i16))))
  )
  (import "," "" (tag (;0;) (type 9) (param f64 f32 (ref null 3))))
  (import "" "" (func (;0;) (type 41)))
  (table (;0;) i64 7 500077 (ref null 33))
  (tag (;1;) (type 9) (param f64 f32 (ref null 3)))
  (tag (;2;) (type 18))
  (global (;0;) (mut i64) i64.const -1087659719787942045)
  (start 0)
  (elem (;0;) (table 0) (i64.const 4) nullref)
  (elem (;1;) declare (ref null 31) (ref.null none) (ref.null 31))
  (func (;1;) (type 50) (param f32)
    (local f64 i64 f64 f32)
    data.drop 0
    struct.new_default 26
    block (type 5) ;; label = @1
      struct.new_default 10
      i64.const 524287
      i64.extend32_s
      i64.clz
      f32.convert_i64_u
      block ;; label = @2
        table.size 0
        i64.extend8_s
        f64.const -nan:0xffffffffdffff (;=NaN;)
        data.drop 0
        f64.ceil
        local.tee 3
        local.get 0
        array.new_fixed 17 0
        extern.convert_any
        block (type 1) ;; label = @3
          br 1 (;@2;)
          table.size 0
          i64.const -7705603665598858970
          struct.new_default 0
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "")
)
