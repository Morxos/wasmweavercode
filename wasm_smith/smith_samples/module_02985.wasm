(module
  (rec
    (type (;0;) (sub (func (param f64))))
    (type (;1;) (func (result i32 i64)))
    (type (;2;) (sub (func (param i64 i32))))
    (type (;3;) (array (mut externref)))
    (type (;4;) (sub (array (mut i64))))
    (type (;5;) (sub (struct)))
    (type (;6;) (sub (array (mut i16))))
    (type (;7;) (sub (struct (field i16) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field i8) (field (mut i16)) (field i16))))
    (type (;8;) (func))
    (type (;9;) (struct (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut eqref)) (field i16) (field (mut i8))))
    (type (;10;) (struct (field (mut externref)) (field (mut i64)) (field (mut i8)) (field funcref) (field f64) (field externref) (field i16) (field (mut f64)) (field (mut exnref)) (field i16) (field i16) (field i32) (field (mut i8))))
    (type (;11;) (func (result i64 (ref null 7))))
    (type (;12;) (sub (array (mut f64))))
    (type (;13;) (sub (array (mut i16))))
    (type (;14;) (array i16))
    (type (;15;) (sub (func)))
    (type (;16;) (func))
    (type (;17;) (sub (array i16)))
    (type (;18;) (struct (field (mut i16)) (field f64) (field f64) (field i64) (field f32) (field i32) (field i8) (field (mut i16)) (field f64) (field i16)))
    (type (;19;) (sub (func (result i64))))
    (type (;20;) (sub (array (mut (ref null 2)))))
    (type (;21;) (array f64))
    (type (;22;) (func (param i32) (result f64 f32 f32 (ref null 1))))
    (type (;23;) (sub (func (param i32) (result f32 (ref null 12)))))
    (type (;24;) (struct (field i16) (field i8) (field i8) (field (mut i32))))
    (type (;25;) (sub (array i16)))
    (type (;26;) (array i16))
    (type (;27;) (func))
    (type (;28;) (func))
    (type (;29;) (sub (array i8)))
    (type (;30;) (sub (func (param f32) (result f32 f32 f32 (ref null 15)))))
    (type (;31;) (sub (array (mut i64))))
    (type (;32;) (sub (struct (field (mut i16)) (field i32) (field i32) (field (mut f64)) (field f64) (field i16) (field i16) (field i8) (field i16) (field i16) (field (mut (ref null 25))) (field i16) (field i8) (field (ref null 25)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i8))))
    (type (;33;) (struct (field (mut i16)) (field (mut i16)) (field i32) (field (mut i32)) (field f64) (field (mut arrayref)) (field i16) (field (mut i32)) (field (mut i16)) (field i64) (field (mut i16)) (field i8) (field (mut i64)) (field (mut f32)) (field f32)))
    (type (;34;) (struct (field i8) (field i8) (field (mut f64)) (field (mut i64)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field f32) (field (mut i8)) (field i32)))
    (type (;35;) (struct (field (mut f32)) (field f32) (field i8)))
    (type (;36;) (array f64))
    (type (;37;) (func (param i32 (ref null 11) f64) (result eqref i64 f32)))
    (type (;38;) (sub (func (result nullfuncref i32 i32))))
  )
  (tag (;0;) (type 0) (param f64))
  (tag (;1;) (type 2) (param i64 i32))
  (tag (;2;) (type 27))
  (tag (;3;) (type 16))
  (func (;0;) (type 30) (param f32) (result f32 f32 f32 (ref null 15))
    (local f32)
    i32.const 1431655765
    f32.convert_i32_u
    i32.const 1877931621
    i32.clz
    i64.const 137438953471
    i32.const 2147483647
    f64.const -0x1.3a64d9d76ab2dp-69 (;=-0.0000000000000000000020804846345148795;)
    i64.trunc_sat_f64_s
    struct.new_default 5
    i32.const -2147483648
    ref.null 25
    struct.new_default 33
    ref.test (ref 33)
    i32.popcnt
    if (type 11) (result i64 (ref null 7)) ;; label = @1
      ref.null any
      ref.null 10
      ref.test (ref 10)
      try_table (type 1) (result i32 i64) ;; label = @2
        block (type 15) ;; label = @3
          loop (type 16) ;; label = @4
            i32.const -1380883937
            block (result f32) ;; label = @5
              f64.const 0x1.fefffffep-1043 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021178512674;)
              try_table (type 27) ;; label = @6
                f32.const 0x1.e8939ap-94 (;=0.00000000000000000000000000009635474;)
                local.tee 1
                br 3 (;@3;)
                br 2 (;@4;)
                i64.trunc_sat_f32_s
                loop (type 27) ;; label = @7
                  f64.const -0x1.a15dcb8a2692ep+282 (;=-12668823386276283000000000000000000000000000000000000000000000000000000000000000000000;)
                  i64.trunc_f64_s
                  struct.new_default 24
                  i64.const -1025
                  try_table (type 1) (result i32 i64) (catch 2 1 (;@6;)) (catch 3 4 (;@3;)) (catch 3 4 (;@3;)) (catch_all 0 (;@7;)) (catch_all 3 (;@4;)) (catch_all 0 (;@7;)) (catch 2 0 (;@7;)) (catch_all 4 (;@3;)) ;; label = @8
                    i32.const 2097151
                    br_if 5 (;@3;)
                    f64.const -0x1.904c648fad007p-246 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000001382817814513176;)
                    i32.trunc_f64_s
                    loop (type 27) ;; label = @9
                      loop (type 1) (result i32 i64) ;; label = @10
                        struct.new 5
                        ref.test (ref none)
                        block (type 8) ;; label = @11
                          i64.const -1125899906842624
                          f32.convert_i64_u
                          i32.const -1811767300
                          f64.const 0x1.ecdca633f75c6p-280 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000009910293245383448;)
                          local.get 0
                          try_table (type 16) (catch_all 7 (;@4;)) (catch_all 4 (;@7;)) (catch_all 5 (;@6;)) (catch_all 1 (;@10;)) (catch 2 1 (;@10;)) ;; label = @12
                            local.get 0
                            f32.sqrt
                            loop (type 19) (result i64) ;; label = @13
                              ref.null 16
                              ref.null 29
                              ref.as_non_null
                              throw 3
                              struct.new 5
                              i64.const -4850376798678024192
                              try_table (type 11) (result i64 (ref null 7)) (catch_all 2 (;@11;)) (catch_all 7 (;@6;)) (catch_all 6 (;@7;)) (catch 2 4 (;@9;)) (catch_all 10 (;@3;)) (catch 2 10 (;@3;)) (catch_all 4 (;@9;)) (catch 2 9 (;@4;)) (catch_all 0 (;@13;)) ;; label = @14
                                f64.const 0x1.e1fa54aeb0e76p+527 (;=827170112210186500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                                f64.const -0x1.21c76151aedc8p-133 (;=-0.00000000000000000000000000000000000000010395305668631078;)
                                f64.max
                                f64.neg
                                array.new_fixed 36 0
                                local.get 1
                                try_table (catch 3 5 (;@9;)) (catch_all 1 (;@13;)) ;; label = @15
                                  struct.new 5
                                  struct.new 5
                                  ref.test (ref 5)
                                  if (type 19) (result i64) ;; label = @16
                                    loop (type 19) (result i64) ;; label = @17
                                      try_table (result i32) (catch 3 11 (;@6;)) (catch_all 7 (;@10;)) (catch_all 6 (;@11;)) (catch 3 10 (;@7;)) (catch 3 11 (;@6;)) (catch 2 11 (;@6;)) (catch_all 7 (;@10;)) (catch 3 8 (;@9;)) ;; label = @18
                                        struct.new_default 35
                                        f32.const 0x0p+0 (;=0;)
                                        ref.null eq
                                        local.get 1
                                        i32.trunc_sat_f32_s
                                        if (type 8) ;; label = @19
                                          i64.const 2143289344
                                          ref.null 2
                                          f32.const -0x1.8ef688p-90 (;=-0.0000000000000000000000000012589053;)
                                          i32.reinterpret_f32
                                          br 6 (;@13;)
                                          struct.new 5
                                          ref.null 4
                                          block (type 38) (result nullfuncref i32 i32) ;; label = @20
                                            f32.const 0x0p+0 (;=0;)
                                            unreachable
                                          end
                                          unreachable
                                        end
                                        unreachable
                                      end
                                      unreachable
                                    end
                                  else
                                    unreachable
                                  end
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
        end
        unreachable
      end
      unreachable
    else
      unreachable
    end
    unreachable
  )
)
