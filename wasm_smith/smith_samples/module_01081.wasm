(module
  (rec
    (type (;0;) (sub (struct (field (mut i16)) (field f64) (field (mut i8)) (field (mut f64)) (field (mut nullref)) (field (mut i64)))))
    (type (;1;) (sub (func (result nullfuncref))))
    (type (;2;) (func (result i64)))
    (type (;3;) (array (mut i16)))
    (type (;4;) (struct (field (mut i8)) (field i8) (field (mut i8)) (field (mut f32)) (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field (mut f64))))
    (type (;5;) (struct (field (mut i8)) (field arrayref) (field (mut i16)) (field i8) (field nullexternref) (field (mut i8))))
    (type (;6;) (sub (struct (field i8) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field i8) (field i8) (field i8) (field (mut i8)) (field f64))))
    (type (;7;) (func (param i32 i31ref anyref f64)))
    (type (;8;) (sub (struct (field i16) (field i16) (field i16) (field (mut f64)) (field i8) (field (mut f64)) (field i64) (field i8) (field (mut i8)) (field eqref) (field (mut i8)) (field i64) (field i16) (field nullref) (field (mut i32)) (field (mut i8)) (field i8) (field i8) (field (mut i16)) (field i16))))
    (type (;9;) (sub (struct (field i16) (field i16) (field i32) (field (mut f32)) (field i64) (field f64) (field i16) (field f32) (field i16) (field i8) (field i16) (field (mut i16)) (field f64) (field i16) (field (mut i8)) (field (mut f64)) (field (mut i8)))))
    (type (;10;) (sub (array (mut i8))))
    (type (;11;) (struct (field f32) (field (mut i16)) (field (mut i8)) (field f64) (field (mut i16)) (field (mut i16)) (field anyref) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut i32)) (field i32) (field (mut i16)) (field i32) (field (mut i8)) (field (mut i32)) (field (mut i16)) (field (mut arrayref)) (field (mut i16)) (field (mut i16))))
    (type (;12;) (sub (func (param nullfuncref) (result i32 i31ref i64 i64 f64))))
    (type (;13;) (sub (func (result i32))))
    (type (;14;) (sub (func)))
    (type (;15;) (func (param (ref null 7) f64 i64 i32 f32)))
    (type (;16;) (struct))
    (type (;17;) (sub (struct (field i8) (field (mut i8)) (field nullref) (field (ref null 5)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field i8) (field (mut i16)) (field f32) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i8))))
    (type (;18;) (func (param (ref null 7)) (result f32)))
    (type (;19;) (sub (struct (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i16)) (field f64) (field f64) (field (mut i8)) (field (mut i16)) (field i64) (field (mut i16)) (field i8) (field (mut i32)))))
    (type (;20;) (sub (func (param externref i32) (result i32))))
    (type (;21;) (func (param i32)))
    (type (;22;) (struct (field (mut f64)) (field (mut i16)) (field i16) (field (mut f32))))
    (type (;23;) (array (mut i8)))
    (type (;24;) (sub (array i16)))
    (type (;25;) (func (result f32)))
    (type (;26;) (sub (struct (field (mut i64)) (field (mut f64)) (field i16) (field i8) (field (mut f64)) (field i8) (field f64) (field i64) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field (mut f32)))))
    (type (;27;) (sub (array (mut i16))))
    (type (;28;) (array (mut f32)))
    (type (;29;) (sub (func)))
    (type (;30;) (sub (array (mut i8))))
    (type (;31;) (func))
    (type (;32;) (sub (struct (field (mut i32)) (field i16))))
    (type (;33;) (func (param (ref null 5)) (result structref f64)))
    (type (;34;) (sub (struct (field (mut i8)))))
    (type (;35;) (struct (field i16) (field (mut i8)) (field i16)))
    (type (;36;) (func (result (ref null 32) f32)))
    (type (;37;) (sub (array (mut i16))))
    (type (;38;) (sub (struct (field (mut i16)) (field eqref) (field i32) (field (mut f64)) (field i16) (field (mut i8)) (field i16) (field f64) (field (mut arrayref)) (field i8) (field i8) (field i8) (field i64))))
    (type (;39;) (sub (array i8)))
    (type (;40;) (func (param i64 i32 i64)))
    (type (;41;) (sub (array i16)))
    (type (;42;) (sub (func (result structref f32))))
    (type (;43;) (struct (field (mut i64)) (field (mut i8)) (field (mut f32)) (field (ref null 40)) (field (mut i8)) (field i8) (field i8) (field (mut i8)) (field i16) (field i32) (field i8) (field (mut i8)) (field (mut i32)) (field i64) (field f32) (field (mut i8)) (field (mut i8))))
    (type (;44;) (sub (struct (field (mut i16)) (field (mut i8)) (field i16))))
    (type (;45;) (sub (array i8)))
    (type (;46;) (sub (struct (field i64) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field (mut (ref null 14))))))
    (type (;47;) (func (result f32)))
    (type (;48;) (sub (struct (field i32) (field (mut i8)) (field i32) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field i32) (field i8) (field i8) (field (mut f64)) (field (mut (ref null 3))) (field i16) (field i16) (field (mut i8)) (field f64) (field (mut i8)) (field (mut (ref null 12))))))
    (type (;49;) (array i8))
    (type (;50;) (struct (field f64) (field i8) (field (mut i16)) (field i32) (field i8) (field i8) (field (mut i32)) (field i8) (field (mut eqref)) (field (mut i8)) (field (mut i32)) (field (mut i16)) (field (mut f64)) (field i31ref) (field i8) (field i8) (field f32) (field (mut i32))))
    (type (;51;) (sub (struct (field i8) (field i8) (field f32) (field i16) (field i8) (field externref) (field (mut i16)) (field (mut (ref null 6))) (field i8) (field i8) (field i16) (field i16) (field f32) (field (mut i16)) (field i8) (field (mut i64)) (field (mut i8)) (field (mut i8)))))
    (type (;52;) (struct (field (mut i16)) (field (mut i16)) (field (mut structref)) (field i16) (field (mut i16)) (field (mut i32)) (field (mut f64)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i8) (field i32) (field i32)))
  )
  (rec)
  (import "#9" "" (func (;0;) (type 15)))
  (global (;0;) (mut i64) i64.const 0 i64.const 0 i64.const 0 i64.const 55618409377798080 i64.mul i64.mul i64.add)
  (func (;1;) (type 36) (result (ref null 32) f32)
    unreachable
  )
)
