(module
  (rec
    (type (;0;) (struct (field (mut exnref)) (field i8)))
    (type (;1;) (func (param (ref null 0)) (result f32)))
    (type (;2;) (sub (array i8)))
  )
  (rec
    (type (;3;) (struct (field (mut i32)) (field i64) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i32)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i8))))
    (type (;4;) (struct (field eqref) (field i16) (field (mut i8)) (field i8) (field (mut f64)) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8))))
    (type (;5;) (struct (field (mut i64)) (field i16) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut f64)) (field f64)))
    (type (;6;) (array i16))
    (type (;7;) (array (mut i32)))
    (type (;8;) (array (mut i32)))
    (type (;9;) (array i8))
    (type (;10;) (sub (func (param arrayref i32) (result i64))))
    (type (;11;) (func (param i32 arrayref)))
    (type (;12;) (array i16))
    (type (;13;) (func (param i64 nullref f32)))
    (type (;14;) (sub (struct (field i8) (field i8) (field (mut externref)) (field i8) (field f64) (field (mut f64)) (field i64))))
    (type (;15;) (sub (func (param f32) (result f32))))
    (type (;16;) (array i16))
    (type (;17;) (array f32))
    (type (;18;) (func (result structref (ref null 17) i32 i64)))
    (type (;19;) (sub (func (param eqref) (result f32 i32 i32))))
    (type (;20;) (sub (array i64)))
    (type (;21;) (sub (struct (field i16) (field (mut i64)) (field (mut i32)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field (mut f64)) (field i64) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field i32) (field (mut i64)) (field (mut f64)) (field (mut i16)))))
    (type (;22;) (sub (array i16)))
    (type (;23;) (func (param i64 i64 f64 f32 arrayref f32 i32 f64 f32)))
    (type (;24;) (sub (array (mut i8))))
    (type (;25;) (struct (field (mut i8)) (field (mut i8)) (field i8) (field (mut i8)) (field f32)))
    (type (;26;) (sub (struct (field (mut f32)) (field (mut i8)) (field (mut i16)) (field i32) (field i16) (field (ref null 13)) (field i16) (field i16) (field (mut i64)) (field (mut i8)) (field i8) (field (mut nullfuncref)) (field i16) (field (mut i64)))))
    (type (;27;) (array i8))
    (type (;28;) (sub (array (ref null 18))))
    (type (;29;) (sub (struct (field i16) (field (mut i8)) (field i8) (field (mut i64)) (field i16) (field (mut f64)) (field i8) (field (mut f64)) (field (mut i16)) (field (mut f64)) (field i16))))
    (type (;30;) (func (result (ref null 23) f64)))
    (type (;31;) (struct))
    (type (;32;) (sub (func (param i32) (result i64))))
    (type (;33;) (sub 10 (func (param eqref i32) (result i64))))
    (type (;34;) (sub final 20 (array i64)))
    (type (;35;) (struct (field i16) (field (mut f64)) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field f64) (field i64) (field i64) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field i8) (field i16) (field i8) (field (mut (ref null 10))) (field (mut i16)) (field i64) (field i8) (field i8)))
    (type (;36;) (array (mut f32)))
    (type (;37;) (struct (field (mut i8)) (field i8) (field (ref null 13)) (field (mut i64)) (field i64) (field i8) (field (mut i8)) (field i64) (field f32) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut arrayref))))
    (type (;38;) (sub (func (param f64 i32))))
    (type (;39;) (func))
    (type (;40;) (sub (array (mut (ref null 16)))))
    (type (;41;) (sub (func (result f32 (ref null 34) i64 (ref null 4)))))
    (type (;42;) (array i32))
    (type (;43;) (struct (field (mut i16)) (field f32) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut (ref null 5))) (field (mut f64)) (field (mut i32))))
    (type (;44;) (array i8))
    (type (;45;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i32)) (field (mut i16)) (field i8) (field (mut f32)) (field i16) (field i16) (field i16) (field (mut i8)) (field (mut structref)) (field (mut i8)) (field (mut i8)) (field f64) (field i64) (field i16) (field i16) (field i16))))
  )
  (tag (;0;) (type 23) (param i64 i64 f64 f32 arrayref f32 i32 f64 f32))
  (global (;0;) (mut i32) i32.const 0)
  (global (;1;) (mut i64) i64.const 0)
  (global (;2;) (mut i32) i32.const 0)
  (elem (;0;) (ref null 23))
  (func (;0;) (type 39)
    (local f64 i64 i64 (ref null 22))
    struct.new_default 26
    ref.null array
    elem.drop 0
    ref.cast (ref 36)
    elem.drop 0
    elem.drop 0
    ref.null exn
    struct.new 31
    loop ;; label = @1
      local.get 1
      data.drop 0
      i32.wrap_i64
      i32.const 425238620
      block ;; label = @2
        i64.const -4097763970038369107
        i64.extend8_s
        block ;; label = @3
          f32.const -nan:0x7dffff (;=NaN;)
          f32.neg
          i32.reinterpret_f32
          global.get 0
          i32.xor
          global.set 0
        end
        global.get 1
        i64.xor
        global.set 1
      end
      global.get 2
      i32.xor
      global.set 2
      global.get 2
      i32.xor
      global.set 2
    end
    drop
    drop
    drop
    drop
  )
  (func (;1;) (type 15) (param f32) (result f32)
    struct.new_default 21
    f64.const -nan:0xfffffffff0000 (;=NaN;)
    struct.set 21 17
    try_table ;; label = @1
      ref.null 28
      br_on_null 0 (;@1;)
      i32.const -65537
      if (type 41) (result f32 (ref null 34) i64 (ref null 4)) ;; label = @2
        data.drop 0
        struct.new 31
        block (result i32) ;; label = @3
          try_table (type 41) (result f32 (ref null 34) i64 (ref null 4)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) ;; label = @4
            f32.const -nan:0x7ff800 (;=NaN;)
            local.get 0
            i32.trunc_sat_f32_s
            br_if 4
            i32.reinterpret_f32
            ref.null 43
            try_table (catch_all 3 (;@1;)) ;; label = @5
              i64.const -4096
              data.drop 1
              f32.convert_i64_u
              f32.sqrt
              f32.ceil
              i64.trunc_sat_f32_s
              loop (type 41) (result f32 (ref null 34) i64 (ref null 4)) ;; label = @6
                f32.const -nan (;=NaN;)
                try_table (type 39) (catch_all 0 (;@6;)) (catch_all 0 (;@6;)) (catch_all 5 (;@1;)) (catch_all 1 (;@5;)) (catch_all 5 (;@1;)) ;; label = @7
                  struct.new_default 26
                  call 0
                  try_table (result i32) (catch_all 2 (;@5;)) (catch_all 6 (;@1;)) (catch_all 1 (;@6;)) (catch_all 0 (;@7;)) ;; label = @8
                    call 0
                    i32.const 0
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      else
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;2;) (type 1) (param (ref null 0)) (result f32)
    unreachable
  )
  (data (;0;) "\de")
  (data (;1;) "4d\04")
)
