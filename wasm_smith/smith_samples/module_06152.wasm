(module
  (rec
    (type (;0;) (func (param i64) (result i32 i32 i64)))
    (type (;1;) (struct))
    (type (;2;) (func))
    (type (;3;) (struct (field i16) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field i32) (field (mut i16)) (field (mut i16)) (field f64) (field (mut i32)) (field (mut i64)) (field f64) (field i16) (field i16) (field i8) (field (mut f32))))
    (type (;4;) (array (mut f32)))
    (type (;5;) (sub (array i16)))
    (type (;6;) (struct (field i8) (field (mut i8)) (field (mut i8)) (field (mut funcref)) (field (mut i16)) (field i16) (field (mut i64)) (field i8) (field (mut i8)) (field i16) (field (mut funcref)) (field i8) (field (mut f64)) (field i8) (field i32) (field (mut nullref)) (field (mut externref)) (field (mut i16))))
    (type (;7;) (sub (array i16)))
    (type (;8;) (sub (func (param f64))))
    (type (;9;) (func (param i64) (result i64 i32)))
    (type (;10;) (struct (field (mut i8)) (field i8) (field externref) (field (mut i8)) (field (mut f64)) (field i8) (field (mut i16)) (field i16)))
    (type (;11;) (sub (array (mut i16))))
    (type (;12;) (sub (array (mut i8))))
    (type (;13;) (sub (func)))
    (type (;14;) (struct (field i32) (field (mut i8)) (field (mut i16)) (field i8) (field i32) (field i64) (field (mut f64)) (field (mut i16)) (field i8) (field i16) (field f32) (field i16) (field i8) (field (mut i8)) (field i8)))
    (type (;15;) (sub (struct (field (mut i8)) (field i16) (field i32) (field f64) (field i16) (field i16) (field (mut i32)) (field (mut i16)) (field i16) (field (mut i64)) (field i8) (field i8))))
    (type (;16;) (sub (func (param f32 f64) (result f64 i32))))
    (type (;17;) (struct (field (mut i16)) (field i16)))
    (type (;18;) (sub (func (param (ref null 4) (ref null 8)))))
    (type (;19;) (func (result f64)))
    (type (;20;) (struct))
    (type (;21;) (sub (array i64)))
    (type (;22;) (array i8))
    (type (;23;) (func))
    (type (;24;) (sub (array i8)))
  )
  (global (;0;) (mut i64) i64.const 0)
  (global (;1;) (mut i32) i32.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (global (;3;) (mut i32) i32.const 0)
  (export "S\u{17}" (func 0))
  (export ")v" (global 0))
  (export "~\u{11}@" (global 1))
  (export "" (global 2))
  (export "0\u{d}" (global 3))
  (start 0)
  (func (;0;) (type 13)
    (local i32)
    f64.const -0x1.dd712de65effdp-858 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009703858893290383;)
    return_call 0
    i64.const -5223881801736285987
    i64.ctz
    ref.null 9
    ref.test (ref nofunc)
    i32.extend16_s
    i32.popcnt
    i64.const 4
    try_table (type 13) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) ;; label = @1
      local.get 0
      br 1
      ref.i31
      f32.const -0x1.b3429ep+113 (;=-17656252000000000000000000000000000;)
      i64.trunc_sat_f32_s
      local.get 0
      local.get 0
      local.get 0
      br_table 0 (;@1;) 1 0 (;@1;)
      block (result i32) ;; label = @2
        try_table (type 13) (catch_all 2) (catch_all 2) (catch_all 1 (;@1;)) ;; label = @3
          loop (type 2) ;; label = @4
            i32.const -256
            local.set 0
            i64.const 2003172097472909279
            try_table (type 13) (catch_all 0 (;@4;)) (catch_all 3 (;@1;)) ;; label = @5
              loop (type 23) ;; label = @6
                block (type 13) ;; label = @7
                end
              end
              block (type 2) ;; label = @6
                f32.const 0x1.937078p+11 (;=3227.5146;)
                return
                i32.trunc_sat_f32_u
                br 1 (;@5;)
                i32.extend8_s
                try_table (catch_all 0 (;@6;)) (catch_all 0 (;@6;)) (catch_all 5 (;@1;)) (catch_all 0 (;@6;)) (catch_all 6) (catch_all 5 (;@1;)) (catch_all 1 (;@5;)) ;; label = @7
                  loop (result i32) ;; label = @8
                    i32.const 2097151
                    if (type 23) ;; label = @9
                      struct.new 20
                      block (result i32) ;; label = @10
                        local.get 0
                        i64.extend_i32_s
                        i64.extend8_s
                        f64.const -nan:0xffffffdffffff (;=NaN;)
                        i64.trunc_sat_f64_u
                        i64.gt_s
                        f64.const 0x1.a304eeced9814p-465 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017180905366788235;)
                        br 5 (;@5;)
                        block (type 8) (param f64) ;; label = @11
                          struct.new 20
                          br_on_null 6 (;@5;)
                          call 0
                          struct.new_default 17
                          block (result f64) ;; label = @12
                            call 0
                            f32.const 0x1.15fdd2p-70 (;=0.0000000000000000000009197967;)
                            br 1 (;@11;)
                            f32.const 0x1.09dd9ap+33 (;=8920970000;)
                            i32.trunc_sat_f32_s
                            ref.i31
                            try_table (result i64) (catch_all 3 (;@9;)) ;; label = @13
                              try_table (result f32) (catch_all 13) (catch_all 2 (;@11;)) (catch_all 4 (;@9;)) (catch_all 10 (;@3;)) (catch_all 4 (;@9;)) (catch_all 6 (;@7;)) (catch_all 2 (;@11;)) (catch_all 9 (;@4;)) (catch_all 4 (;@9;)) ;; label = @14
                                loop (type 13) ;; label = @15
                                end
                                local.get 0
                                f32.convert_i32_s
                                i64.trunc_sat_f32_u
                                f32.const -0x1.0d1012p+105 (;=-42634700000000000000000000000000;)
                                f32.neg
                                f32.neg
                                call 0
                                i64.trunc_sat_f32_s
                                i64.eqz
                                struct.new 20
                                try_table (type 13) (catch_all 10 (;@4;)) (catch_all 5 (;@9;)) (catch_all 13 (;@1;)) (catch_all 9 (;@5;)) ;; label = @15
                                  block (type 19) (result f64) ;; label = @16
                                    struct.new 20
                                    br_on_null 15 (;@1;)
                                    return_call 0
                                    struct.new_default 1
                                    ref.test (ref none)
                                    local.set 0
                                    call 0
                                    f32.const 0x1.f809acp-109 (;=0.000000000000000000000000000000003033567;)
                                    block (type 19) (result f64) ;; label = @17
                                      f32.const 0x1.f8p-144 (;=0.000000000000000000000000000000000000000000088;)
                                      f32.trunc
                                      array.new_fixed 4 0
                                      br 2 (;@15;)
                                      array.len
                                      br 15 (;@2;)
                                      i32.trunc_f32_u
                                      f32.const 0x1.fffcp-135 (;=0.000000000000000000000000000000000000000045916;)
                                      i32.reinterpret_f32
                                      call 0
                                      i32.const 1048575
                                      i64.const 4844179062737076121
                                      call 0
                                      global.get 0
                                      i64.xor
                                      global.set 0
                                      global.get 1
                                      i32.xor
                                      global.set 1
                                      global.get 1
                                      i32.xor
                                      global.set 1
                                      global.get 1
                                      i32.xor
                                      global.set 1
                                      f64.const -nan:0xfc00000000000 (;=NaN;)
                                    end
                                    i64.reinterpret_f64
                                    global.get 2
                                    i64.xor
                                    global.set 2
                                    i32.reinterpret_f32
                                    global.get 3
                                    i32.xor
                                    global.set 3
                                    drop
                                    f64.const -nan:0xfe00000000000 (;=NaN;)
                                  end
                                  i64.reinterpret_f64
                                  global.get 2
                                  i64.xor
                                  global.set 2
                                end
                                drop
                                global.get 1
                                i32.xor
                                global.set 1
                                global.get 0
                                i64.xor
                                global.set 0
                                f32.const -0x1.46b6bcp-71 (;=-0.00000000000000000000054050265;)
                              end
                              i32.reinterpret_f32
                              global.get 3
                              i32.xor
                              global.set 3
                              i64.const -268435456
                            end
                            global.get 0
                            i64.xor
                            global.set 0
                            drop
                            i32.reinterpret_f32
                            global.get 3
                            i32.xor
                            global.set 3
                            f64.const 0x1.68p-1043 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014920282905;)
                          end
                          i64.reinterpret_f64
                          global.get 2
                          i64.xor
                          global.set 2
                          drop
                          drop
                          i64.reinterpret_f64
                          global.get 2
                          i64.xor
                          global.set 2
                        end
                      end
                      global.get 1
                      i32.xor
                      global.set 1
                      drop
                    end
                    i32.const 280145796
                  end
                  global.get 1
                  i32.xor
                  global.set 1
                end
                global.get 1
                i32.xor
                global.set 1
              end
            end
            global.get 0
            i64.xor
            global.set 0
          end
        end
        i32.const -512
      end
      global.get 1
      i32.xor
      global.set 1
      global.get 1
      i32.xor
      global.set 1
      global.get 1
      i32.xor
      global.set 1
      global.get 0
      i64.xor
      global.set 0
      drop
    end
    global.get 0
    i64.xor
    global.set 0
    global.get 1
    i32.xor
    global.set 1
    global.get 0
    i64.xor
    global.set 0
    i64.reinterpret_f64
    global.get 2
    i64.xor
    global.set 2
  )
)
