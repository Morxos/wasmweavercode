(module
  (rec
    (type (;0;) (struct (field (mut f64)) (field i16) (field f64) (field i8) (field (mut i64))))
    (type (;1;) (func (param i32 f32) (result f32)))
    (type (;2;) (func (param i32 f32)))
    (type (;3;) (func (param i32 i64) (result i64)))
    (type (;4;) (func (result f32)))
    (type (;5;) (array i32))
    (type (;6;) (sub (array i16)))
    (type (;7;) (func (param i32 nullfuncref)))
    (type (;8;) (sub (array (mut f64))))
    (type (;9;) (array (mut i8)))
    (type (;10;) (sub (struct (field f64) (field (mut i8)) (field i16) (field (mut f32)) (field f64) (field i8) (field f32) (field (mut i8)) (field i8) (field f64) (field (mut f32)))))
    (type (;11;) (struct (field (mut i8)) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field i16)))
    (type (;12;) (sub (func (param funcref) (result f64))))
    (type (;13;) (array (mut i16)))
    (type (;14;) (sub (struct (field i32) (field (mut f64)) (field i8) (field i16) (field i8) (field (mut i64)))))
    (type (;15;) (sub (func (param nullref) (result i32 (ref null 5)))))
    (type (;16;) (struct (field i8) (field i16) (field (mut i8)) (field (mut f32)) (field i16) (field i64) (field (mut eqref)) (field (ref null 10)) (field (mut arrayref)) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field f64)))
    (type (;17;) (struct (field i16) (field (mut i16)) (field i16)))
    (type (;18;) (array i8))
    (type (;19;) (struct (field (mut i16)) (field (mut i8)) (field i8) (field (mut i32)) (field (mut i16)) (field i64) (field funcref) (field exnref) (field (mut i64)) (field (mut i16)) (field (mut anyref)) (field (mut i8)) (field (mut f32)) (field i16) (field (mut i64))))
    (type (;20;) (func (result f64 f32)))
    (type (;21;) (sub (func (result i64 nullfuncref))))
    (type (;22;) (func (result f64)))
    (type (;23;) (sub (func (result i64))))
    (type (;24;) (array (mut nullfuncref)))
    (type (;25;) (sub (func (param i64 f32 i32 f32) (result f32 f64))))
    (type (;26;) (func (param f64 f64 f32 f64 i32 i64 (ref null 16))))
    (type (;27;) (struct (field (mut i8)) (field f32) (field (mut f32)) (field (mut i8)) (field i16) (field i16) (field (mut i64)) (field f64) (field (mut f32)) (field i8) (field i16) (field i16) (field (mut f64)) (field (mut f64)) (field i32)))
    (type (;28;) (struct (field (mut i8)) (field (mut i8)) (field i16) (field f64) (field i16) (field (mut i16)) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field (mut i64)) (field i8)))
    (type (;29;) (struct (field i8) (field (mut i8)) (field (mut i64)) (field i16) (field (mut i16)) (field (mut exnref)) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field i8)))
    (type (;30;) (sub (struct (field (mut i16)) (field anyref) (field i8) (field f64) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut f32)) (field i16) (field (mut i8)) (field i8) (field i16) (field nullref) (field i8) (field i8))))
    (type (;31;) (sub (struct (field (mut i16)) (field (mut f64)) (field nullfuncref) (field i16) (field exnref) (field i16) (field f64) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)))))
    (type (;32;) (sub (struct)))
    (type (;33;) (sub (struct)))
    (type (;34;) (func))
    (type (;35;) (array i8))
    (type (;36;) (func (result i32)))
    (type (;37;) (sub (func (param i64 f32) (result f32 i32))))
    (type (;38;) (func (param i64)))
    (type (;39;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field i16))))
    (type (;40;) (sub (func (result eqref))))
    (type (;41;) (struct (field (mut i16)) (field i16) (field i32) (field anyref) (field (mut (ref null 38))) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut nullexternref)) (field i64) (field i8)))
    (type (;42;) (array i8))
  )
  (import "%" "" (tag (;0;) (type 2) (param i32 f32)))
  (import "" "" (func (;0;) (type 20)))
  (import "b#e" "" (table (;0;) i64 0 externref))
  (tag (;1;) (type 26) (param f64 f64 f32 f64 i32 i64 (ref null 16)))
  (global (;0;) (mut i32) i32.const 166214570)
  (export "M\u{19}" (global 0))
  (elem (;0;) declare arrayref (ref.null 5))
  (func (;1;) (type 21) (result i64 nullfuncref)
    f32.const 0x1.fp-145 (;=0.000000000000000000000000000000000000000000043;)
    f32.nearest
    f64.promote_f32
    elem.drop 0
    i64.const 2097152
    call 0
    f32.floor
    global.get 0
    f32.const -0x1.025378p-113 (;=-0.00000000000000000000000000000000009717146;)
    return_call 1
    br_on_non_null 0
    block (type 40) (result eqref) ;; label = @1
      call 0
      f32.abs
      i64.trunc_sat_f32_s
      ref.null 39
      f64.const -0x1.7d5f1b3243948p-295 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000023402354767165483;)
      i32.trunc_sat_f64_s
      global.get 0
      return_call 1
      ref.cast nullfuncref
      ref.cast nullfuncref
      block (type 20) (result f64 f32) ;; label = @2
        global.get 0
        i32.clz
        array.new_default 18
        global.get 0
        if (type 23) (result i64) ;; label = @3
          table.size 0
          global.get 0
          data.drop 2
          i32.ctz
          i64.extend_i32_s
          struct.new_default 10
          try_table (type 36) (result i32) ;; label = @4
            call 0
            f32.const -0x1.42c2a8p-125 (;=-0.00000000000000000000000000000000000002964086;)
            i32.trunc_f32_u
            i64.extend_i32_s
            i32.const 1681440094
            f64.convert_i32_s
            table.size 0
            f32.convert_i64_u
            f32.neg
            try_table ;; label = @5
              return_call 1
              try_table (type 34) (catch_all 0 (;@5;)) (catch_all 0 (;@5;)) (catch_all 0 (;@5;)) ;; label = @6
                global.get 0
                f64.convert_i32_s
                i32.trunc_f64_u
                try_table (type 40) (result eqref) (catch_all 0 (;@6;)) (catch_all 0 (;@6;)) (catch_all 1 (;@5;)) (catch_all 1 (;@5;)) (catch_all 0 (;@6;)) (catch_all 1 (;@5;)) ;; label = @7
                  global.get 0
                  call 1
                  try_table (type 40) (result eqref) (catch_all 2 (;@5;)) (catch_all 1 (;@6;)) (catch_all 1 (;@6;)) (catch_all 1 (;@6;)) (catch_all 1 (;@6;)) ;; label = @8
                    struct.new_default 31
                  end
                  extern.convert_any
                  struct.new_default 11
                  elem.drop 0
                  i64.const -5941819612277025492
                  i64.const -4096
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        else
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "h\8e")
  (data (;1;) "")
  (data (;2;) "e\ab")
  (data (;3;) "")
  (data (;4;) "")
  (data (;5;) "")
  (data (;6;) "")
)
