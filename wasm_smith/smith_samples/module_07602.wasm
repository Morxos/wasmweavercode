(module
  (rec
    (type (;0;) (func))
    (type (;1;) (struct))
    (type (;2;) (sub (func (result i64 exnref))))
    (type (;3;) (array (mut i32)))
    (type (;4;) (sub (array (ref null 2))))
    (type (;5;) (array i8))
    (type (;6;) (array i8))
    (type (;7;) (array i16))
    (type (;8;) (sub (array (mut i8))))
    (type (;9;) (sub (array i16)))
    (type (;10;) (func (result i32 i64)))
    (type (;11;) (sub (struct (field (mut i8)) (field (mut i8)) (field (mut i8)) (field f32) (field i16) (field (mut i16)) (field i64) (field (mut f64)) (field (mut f32)))))
    (type (;12;) (struct (field i16) (field i8) (field i16) (field i8) (field (mut i8)) (field f32)))
    (type (;13;) (sub (struct (field (mut i64)) (field i16) (field i16) (field i8) (field i16) (field (mut i16)) (field (mut i8)))))
    (type (;14;) (struct (field f32) (field (mut externref)) (field (mut i64)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field (mut (ref null 4))) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field (mut i64)) (field (ref null 2)) (field (mut i16))))
    (type (;15;) (sub (struct (field (mut i16)))))
  )
  (rec
    (type (;16;) (func (result i32 f64 i64)))
    (type (;17;) (sub (array i8)))
    (type (;18;) (sub (struct (field i8) (field (mut i64)) (field (mut i64)) (field (mut i64)) (field i64) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field i32) (field i8) (field (mut i16)) (field (mut i64)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)))))
    (type (;19;) (array f32))
    (type (;20;) (sub (struct (field (mut i64)) (field i16) (field (mut i8)) (field f32) (field (mut i8)) (field i64) (field i16) (field (mut i16)) (field f64) (field i16) (field i16) (field f32) (field (mut i8)) (field i16) (field (mut anyref)))))
    (type (;21;) (sub (array (mut i8))))
    (type (;22;) (array i16))
    (type (;23;) (sub (func)))
    (type (;24;) (func (param f32)))
    (type (;25;) (sub (func)))
    (type (;26;) (sub (struct (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field i16))))
    (type (;27;) (sub (struct (field i16) (field i16) (field i16) (field exnref) (field (mut i64)) (field f32) (field i32) (field (mut f32)) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field i32) (field i8) (field (mut i64)) (field (mut f32)) (field i16) (field (mut i32)) (field (mut i16)) (field (mut i8)))))
    (type (;28;) (sub (array i16)))
    (type (;29;) (func (param i64 i64)))
    (type (;30;) (sub (array (mut i16))))
    (type (;31;) (array i64))
    (type (;32;) (struct (field (mut i8)) (field f32) (field i16) (field i16) (field (mut i64)) (field (mut i8)) (field i8) (field i8) (field (mut (ref null 10))) (field (mut i16)) (field (mut i16))))
    (type (;33;) (sub (struct (field (mut f32)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field i8) (field i32) (field i32) (field (mut i8)) (field (mut i16)) (field (mut structref)))))
    (type (;34;) (sub (func (result i64 f64 i32 f64 f64))))
    (type (;35;) (struct (field (mut i32)) (field f64)))
    (type (;36;) (func (param nullfuncref)))
    (type (;37;) (sub (func (result f64))))
    (type (;38;) (sub (array (mut i32))))
    (type (;39;) (sub (struct (field (mut f32)) (field (mut i8)) (field (mut i8)) (field f64) (field (mut (ref null 15))) (field i8) (field i16) (field f64) (field i8) (field (mut i64)) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field i32) (field i8) (field i8) (field i16))))
    (type (;40;) (sub (func (param i32 f64 i64 f64) (result i31ref f64 f64 externref i32))))
  )
  (global (;0;) (mut eqref) ref.null 1)
  (start 1)
  (func (;0;) (type 29) (param i64 i64)
    ref.null 38
    ref.null 18
    ref.cast nullref
    ref.eq
    i64.const -3427281373992112843
    block (type 25) ;; label = @1
      struct.new 1
      f32.const 0x1.fep-142 (;=0.000000000000000000000000000000000000000000357;)
      i32.trunc_f32_s
      br_if 1
      data.drop 2
      call 1
      br_on_null 1
      i64.const -1048576
      loop (type 10) (result i32 i64) ;; label = @2
        f64.const -0x1.b2babf849154ap-610 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000039965180261178245;)
        f64.neg
        f64.nearest
        ref.null 40
        ref.test (ref 40)
        f64.convert_i32_u
        try_table (type 23) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) ;; label = @3
          struct.new_default 1
          br_on_null 0 (;@3;)
          struct.new 1
          br_on_null 3
          br 3
          global.set 0
          ref.as_non_null
          br 2 (;@1;)
          block (type 16) (result i32 f64 i64) ;; label = @4
            block (type 16) (result i32 f64 i64) ;; label = @5
              f64.const 0x1.fffffffffp-1038 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000679038653104;)
              i64.trunc_sat_f64_s
              f32.const -nan:0x7f0000 (;=NaN;)
              i32.trunc_f32_u
              i64.extend_i32_s
              f64.const 0x1.p-1055 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002590327;)
              data.drop 1
              f64.sqrt
              f64.neg
              i32.trunc_sat_f64_s
              call 1
              loop (type 10) (result i32 i64) ;; label = @6
                struct.new_default 33
                try_table (catch_all 5 (;@1;)) (catch_all 6) (catch_all 4 (;@2;)) (catch_all 4 (;@2;)) ;; label = @7
                  f32.const -0x1.e1df64p-118 (;=-0.0000000000000000000000000000000000056643854;)
                  f32.trunc
                  f32.ceil
                  i32.reinterpret_f32
                  i32.clz
                  ref.null 21
                  ref.null any
                  br 1 (;@6;)
                  ref.cast (ref null 15)
                  global.get 0
                  struct.new_default 35
                  block (type 10) (result i32 i64) ;; label = @8
                    try_table (type 25) (catch_all 5 (;@3;)) (catch_all 1 (;@7;)) ;; label = @9
                      loop (type 23) ;; label = @10
                        return
                        loop (type 23) ;; label = @11
                          call 1
                        end
                        nop
                        call 1
                      end
                    end
                    ref.null func
                    br 5 (;@3;)
                    block (type 0) ;; label = @9
                      struct.new 1
                      i32.const 1308658784
                      try_table (type 37) (result f64) (catch_all 3 (;@6;)) ;; label = @10
                        global.get 0
                        ref.cast (ref 17)
                        ref.test (ref none)
                        nop
                        block (type 23) ;; label = @11
                          br 10 (;@1;)
                          try_table (result f64) (catch_all 0 (;@11;)) (catch_all 2 (;@9;)) (catch_all 2 (;@9;)) (catch_all 11) (catch_all 9 (;@2;)) (catch_all 5 (;@6;)) (catch_all 2 (;@9;)) (catch_all 0 (;@11;)) (catch_all 2 (;@9;)) ;; label = @12
                            f64.const -nan:0xffbffffffffff (;=NaN;)
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 23))
  (data (;0;) "\e0\0d\e6")
  (data (;1;) "\d3")
  (data (;2;) "\a3\d6")
)
