(module
  (rec
    (type (;0;) (sub (struct (field i8) (field (mut i16)) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field funcref) (field (mut i16)) (field (mut i64)) (field (mut externref)) (field f32) (field i8) (field (mut i8)) (field (mut i64)) (field f32) (field (mut i16)) (field i8) (field i16) (field i16) (field i64) (field i16))))
    (type (;1;) (struct (field i16) (field i8) (field f32) (field i8) (field i16) (field i32) (field i8) (field (mut i8)) (field f64) (field f64) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field (mut i64)) (field i32) (field i16) (field (mut i8)) (field (mut i16))))
    (type (;2;) (struct (field (mut f32)) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field funcref) (field (mut i16)) (field f32) (field (mut i8)) (field (mut f64))))
    (type (;3;) (struct (field i16) (field (mut i8)) (field f64) (field (mut i8)) (field structref) (field i64) (field i16) (field f64) (field (mut i32)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i16) (field i16) (field (mut f64))))
    (type (;4;) (sub (struct (field i8) (field i16) (field i16) (field (mut i8)) (field (mut i8)) (field i8))))
    (type (;5;) (sub (struct (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field (mut i16)))))
    (type (;6;) (sub (struct (field (mut i8)) (field i16) (field f32) (field i8) (field (mut i16)) (field (mut i8)) (field i8) (field funcref) (field (mut f64)) (field (mut f32)) (field i16))))
    (type (;7;) (sub (struct (field (mut f64)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut f64)) (field i64) (field i16) (field (mut funcref)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut structref)) (field i32) (field i16))))
    (type (;8;) (struct (field i8) (field i8) (field i8) (field i32) (field i8) (field i32) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i32)) (field eqref)))
    (type (;9;) (struct (field (mut i32)) (field i16) (field i16) (field (mut f64)) (field i32) (field (mut i16)) (field i8) (field (mut (ref null 7))) (field (mut i8)) (field (mut i8))))
    (type (;10;) (sub (array (mut f64))))
    (type (;11;) (func))
    (type (;12;) (sub (func (result f32 (ref null 8)))))
    (type (;13;) (sub (func (result eqref i64 f32 i64))))
    (type (;14;) (struct (field (mut i8)) (field i32) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field f32) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field (mut i16)) (field (mut f32)) (field i16) (field f32)))
    (type (;15;) (struct (field (mut i16)) (field i16) (field i32) (field i16) (field (mut i16)) (field (mut i64)) (field eqref) (field i16) (field i64) (field i8)))
    (type (;16;) (func (result eqref)))
    (type (;17;) (array (mut exnref)))
    (type (;18;) (struct (field i8) (field i16) (field (mut i8)) (field i16) (field (mut i16)) (field (mut f64))))
    (type (;19;) (sub (func (result f64 f64))))
    (type (;20;) (struct (field (mut i32)) (field (mut i8)) (field (mut f64)) (field i16) (field i16) (field i8) (field i8) (field (mut i16)) (field f64) (field (mut i8)) (field f32)))
  )
  (import "*" "" (memory (;0;) 9 51088 shared))
  (import "S\u{1a}t" "" (func (;0;) (type 11)))
  (import "" "" (table (;0;) 2 555791 (ref null 5)))
  (tag (;0;) (type 11))
  (tag (;1;) (type 11))
  (global (;0;) (mut i64) i64.const 6015166438781014450)
  (export "5" (memory 0))
  (start 0)
  (func (;1;) (type 13) (result eqref i64 f32 i64)
    struct.new_default 3
    extern.convert_any
    global.get 0
    return_call 1
    i64.clz
    br 0
    i64.popcnt
    i64.clz
    f32.convert_i64_s
    i64.trunc_f32_s
    global.set 0
    struct.new_default 2
    f64.const -nan:0xfffffffff7fff (;=NaN;)
    i64.trunc_sat_f64_u
    ref.null 14
    ref.test (ref 14)
    i32.eqz
    i64.load32_u offset=159683 align=1
    global.get 0
    memory.size
    return_call 1
    loop (result i64) ;; label = @1
      f32.const -0x1.d94518p-16 (;=-0.000028209084;)
      i64.const 8388608
      i64.popcnt
      nop
      global.get 0
      global.set 0
      global.set 0
      f32.const 0x1.1ffep-130 (;=0.000000000000000000000000000000000000000826497;)
      f32.neg
      f32.lt
      i32.popcnt
      i64.extend_i32_u
      f32.convert_i64_s
      return_call 1
      ref.null nofunc
      global.get 0
      try_table (type 13) (result eqref i64 f32 i64) (catch 1 0 (;@1;)) (catch 0 0 (;@1;)) (catch 1 0 (;@1;)) (catch_all 0 (;@1;)) ;; label = @2
        return_call 1
        i64.popcnt
      end
      block (type 19) (result f64 f64) ;; label = @2
        call 1
        i32.const -1073741824
        table.get 0
        loop ;; label = @3
          try_table (type 11) (catch 1 0 (;@3;)) (catch 1 2 (;@1;)) (catch_all 2 (;@1;)) (catch 0 0 (;@3;)) (catch 0 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 2 (;@1;)) ;; label = @4
            f32.const nan:0x7fffff (;=NaN;)
            i32.trunc_sat_f32_s
            i32.load offset=342367 align=2
            i32.clz
            i64.extend_i32_s
            i64.extend32_s
            call 1
            struct.new_default 20
            table.size 0
            i64.load8_s offset=273108
            global.get 0
            i64.const 16
            i64.rotl
            i64.mul
            call 1
            i64.extend32_s
            try_table (result nullfuncref) (catch_all 0 (;@4;)) (catch 1 1 (;@3;)) (catch_all 3 (;@1;)) (catch_all 0 (;@4;)) (catch_all 0 (;@4;)) (catch 0 3 (;@1;)) (catch_all 3 (;@1;)) (catch_all 1 (;@3;)) ;; label = @5
              struct.new_default 5
              loop ;; label = @6
                table.size 0
                i64.const -4604735957099973069
                f64.convert_i64_s
                f64.store offset=224427 align=4
              end
              call 0
              call 0
              extern.convert_any
              f64.const -nan:0xffffffffffffe (;=NaN;)
              return_call 1
              i64.extend8_s
              global.set 0
              try_table (type 16) (result eqref) (catch_all 2 (;@3;)) (catch_all 4 (;@1;)) (catch_all 1 (;@4;)) (catch 0 2 (;@3;)) ;; label = @6
                try_table (type 19) (result f64 f64) (catch 0 3 (;@3;)) (catch_all 3 (;@3;)) (catch 0 2 (;@4;)) (catch 0 3 (;@3;)) (catch 0 2 (;@4;)) (catch_all 5 (;@1;)) (catch 0 2 (;@4;)) ;; label = @7
                  memory.size
                  memory.size
                  f32.const -0x1.a1a81ep-115 (;=-0.000000000000000000000000000000000039276248;)
                  f32.abs
                  i64.trunc_f32_s
                  i64.ctz
                  i32.const -32769
                  i32.extend8_s
                  f64.load offset=456261 align=1
                  block ;; label = @8
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
