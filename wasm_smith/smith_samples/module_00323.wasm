(module
  (rec
    (type (;0;) (struct (field i8) (field i16) (field i16) (field (mut i8))))
    (type (;1;) (array i8))
    (type (;2;) (struct (field (mut i16)) (field (mut i64)) (field f64)))
    (type (;3;) (struct (field (mut i8)) (field (mut i8)) (field (mut i16)) (field f32) (field i8) (field (mut f64)) (field (mut i8)) (field i16)))
    (type (;4;) (sub (func)))
    (type (;5;) (sub (array (mut i16))))
    (type (;6;) (sub (array (mut f32))))
    (type (;7;) (sub (func (param f64) (result i64))))
    (type (;8;) (sub (func (param nullfuncref) (result f32))))
    (type (;9;) (array i32))
    (type (;10;) (sub (func (result i64 i32 i32 i32 i32 i64 f32))))
    (type (;11;) (sub (func)))
    (type (;12;) (sub (array i8)))
    (type (;13;) (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i8))))
    (type (;14;) (struct (field f64) (field (mut i32)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut exnref)) (field (mut i16)) (field (mut i16)) (field i8) (field f32) (field i8) (field (mut i8)) (field f32) (field (mut i32)) (field (mut i16)) (field f32) (field i16) (field (mut f32))))
    (type (;15;) (func (param f32 i32) (result i64 f32)))
    (type (;16;) (sub (struct (field (mut i16)) (field i16) (field i8) (field i8) (field (mut f32)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i64)))))
    (type (;17;) (sub (array i8)))
    (type (;18;) (sub (func (param exnref nullref f32 i32) (result f32 f32 i31ref i32))))
    (type (;19;) (array (mut i32)))
    (type (;20;) (func))
    (type (;21;) (sub (array (mut i16))))
    (type (;22;) (struct (field f32) (field i8) (field (mut i16)) (field (mut f32))))
    (type (;23;) (sub (func)))
    (type (;24;) (func (param f64) (result f32)))
    (type (;25;) (array f32))
    (type (;26;) (sub (struct (field i16))))
    (type (;27;) (struct (field (mut i64)) (field (mut i32)) (field (mut i16)) (field (ref null 10)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut i32)) (field (mut i32))))
    (type (;28;) (sub (array (mut f64))))
    (type (;29;) (array (mut i32)))
    (type (;30;) (sub (struct (field (mut i8)) (field i32) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut i64)) (field i64) (field i8) (field f64) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut externref)) (field i16) (field (mut anyref)))))
    (type (;31;) (func))
    (type (;32;) (sub (struct (field (mut i16)) (field i16) (field f64) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field i64) (field i16) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field f64) (field f64) (field i32) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field i64))))
    (type (;33;) (struct (field (mut i32)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field i16) (field (mut f32)) (field (ref null 2)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)) (field i8) (field f32) (field (mut i16)) (field i8) (field exnref) (field i16) (field i16) (field i16)))
    (type (;34;) (struct (field (mut i8)) (field (mut i16)) (field i16) (field i16) (field i8) (field (mut nullref)) (field i8) (field (mut i8)) (field f64) (field i64) (field (mut nullfuncref)) (field (mut i8)) (field (mut i8))))
    (type (;35;) (sub (array (mut i32))))
    (type (;36;) (array i32))
    (type (;37;) (sub (array i16)))
    (type (;38;) (array (mut i16)))
    (type (;39;) (array (mut i8)))
    (type (;40;) (sub (func (result f64))))
    (type (;41;) (sub (struct (field (mut f32)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i8)) (field i8))))
    (type (;42;) (func))
    (type (;43;) (func (result i32 i32)))
    (type (;44;) (func (param i31ref) (result i64)))
    (type (;45;) (struct (field (ref null 27)) (field i16)))
    (type (;46;) (sub (array f32)))
    (type (;47;) (func (result (ref null 36))))
  )
  (table (;0;) i64 682 (ref null 17))
  (global (;0;) (mut (ref null 8)) ref.null nofunc)
  (start 1)
  (func (;0;) (type 44) (param i31ref) (result i64)
    table.size 0
    struct.new_default 33
    data.drop 0
    ref.as_non_null
    struct.get 33 12
    f32.sqrt
    global.get 0
    ref.cast (ref 8)
    try_table (type 40) (result f64) ;; label = @1
      table.size 0
      f64.convert_i64_s
      global.get 0
      table.size 0
      f64.const -0x1.56ee0b039ee94p-329 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012248890656318164;)
      i64.reinterpret_f64
      i64.const -6652451143485717463
      i64.and
      f64.const -0x1.52f533ef0ddfep-981 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006478581863698886;)
      loop (type 10) (result i64 i32 i32 i32 i32 i64 f32) ;; label = @2
        struct.new_default 34
        i32.const -115312655
        f64.const 0x1.fep-1044 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010568533725;)
        i64.reinterpret_f64
        call 1
        i32.const -1048576
        f32.convert_i32_s
        global.get 0
        ref.cast nullfuncref
        loop (type 40) (result f64) ;; label = @3
          local.get 0
          global.get 0
          ref.null 4
          block (type 23) ;; label = @4
            table.size 0
            br 4
            struct.new_default 27
            i64.const 2
            block (type 31) ;; label = @5
              block (type 31) ;; label = @6
                global.get 0
                loop (type 47) (result (ref null 36)) ;; label = @7
                  table.size 0
                  f32.convert_i64_s
                  f32.abs
                  f32.abs
                  f32.trunc
                  data.drop 1
                  i64.const -70368744177664
                  f64.convert_i64_u
                  br 1 (;@6;)
                  f64.sqrt
                  i64.reinterpret_f64
                  f64.reinterpret_i64
                  i64.trunc_sat_f64_s
                  global.get 0
                  try_table (result i32) (catch_all 2 (;@5;)) (catch_all 4 (;@3;)) (catch_all 1 (;@6;)) (catch_all 5 (;@2;)) ;; label = @8
                    try_table (result i64) (catch_all 1 (;@7;)) (catch_all 6 (;@2;)) (catch_all 5 (;@3;)) (catch_all 5 (;@3;)) ;; label = @9
                      br 6 (;@3;)
                      br 3 (;@6;)
                      i64.const -5646956366833149281
                      f32.const -0x1p+97 (;=-158456330000000000000000000000;)
                      f64.const -0x1.1385a742966fap+540 (;=-3873594068358371000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                      data.drop 0
                      f64.floor
                      struct.new_default 22
                      block (type 42) ;; label = @10
                        i32.const -1012606394
                        br 7 (;@3;)
                        struct.new 26
                        try_table (result i32) ;; label = @11
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 23))
  (data (;0;) "\9a")
  (data (;1;) "")
)
