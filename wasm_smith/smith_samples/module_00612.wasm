(module
  (rec
    (type (;0;) (array (mut i8)))
    (type (;1;) (func))
    (type (;2;) (struct (field i16) (field (mut i16))))
    (type (;3;) (sub (array i16)))
    (type (;4;) (sub (func (param i64) (result f64 f32 i32))))
    (type (;5;) (array (mut i16)))
    (type (;6;) (sub (array (mut i8))))
    (type (;7;) (sub (func (param f32 f64))))
    (type (;8;) (sub (struct (field i16) (field (mut i8)) (field i16) (field (mut i16)) (field i8) (field i8) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field i8))))
    (type (;9;) (struct (field nullfuncref) (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field i16) (field i8) (field (mut i16)) (field (mut i64))))
    (type (;10;) (sub (array i8)))
    (type (;11;) (array i8))
    (type (;12;) (array (mut i16)))
    (type (;13;) (array (mut i32)))
    (type (;14;) (sub (struct (field f32) (field (mut i8)) (field (mut i32)) (field (mut i64)) (field (mut i8)) (field i16) (field f32) (field (mut i8)) (field (mut i16)) (field i16) (field i8) (field i32) (field nullref) (field i32) (field i8) (field (mut f64)))))
    (type (;15;) (sub 8 (struct (field i16) (field (mut i8)) (field i16) (field (mut i16)) (field i8) (field i8) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut f64)) (field (mut i16)) (field i8) (field i16) (field (mut i8)))))
    (type (;16;) (sub (array (mut i8))))
    (type (;17;) (sub (array i8)))
    (type (;18;) (sub (array (mut i8))))
    (type (;19;) (sub (func)))
    (type (;20;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut f64)) (field i16) (field (mut f64)) (field (mut i64)) (field i16) (field i8) (field (mut i8)) (field i32) (field (ref null 2)) (field (mut i8)) (field i64))))
    (type (;21;) (sub (func)))
    (type (;22;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut exnref)) (field (mut funcref)) (field f64) (field i16) (field (mut i16)) (field (mut i8)) (field i16) (field f64) (field (mut f32)) (field f32) (field i64) (field (mut i8)) (field (mut i8)))))
    (type (;23;) (sub (func (param i64 i32))))
    (type (;24;) (sub (array i8)))
    (type (;25;) (func (param i64)))
    (type (;26;) (array (mut i8)))
    (type (;27;) (struct (field (mut f64)) (field i16) (field i16) (field (mut i8)) (field i8) (field (mut i16))))
    (type (;28;) (array i16))
  )
  (table (;0;) 476 anyref ref.null 27)
  (tag (;0;) (type 19))
  (global (;0;) (mut i32) i32.const 0)
  (global (;1;) (mut i64) i64.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (global (;3;) (mut i32) i32.const 0)
  (export ";Bs" (func 0))
  (export "" (global 0))
  (export "M\u{13}" (global 1))
  (export "x\u{11}c)#" (global 2))
  (export "6\u{774}!6Ub" (global 3))
  (start 0)
  (func (;0;) (type 19)
    (local exnref f32)
    try_table (type 1) (catch 0 0) ;; label = @1
      try_table (result i64) (catch 0 0 (;@1;)) (catch 0 0 (;@1;)) (catch 0 1) (catch 0 0 (;@1;)) (catch 0 1) (catch 0 0 (;@1;)) (catch_all 1) (catch_all 0 (;@1;)) (catch 0 0 (;@1;)) ;; label = @2
        loop (type 1) ;; label = @3
          loop (result f64) ;; label = @4
            table.size 0
            i64.extend_i32_s
            f32.convert_i64_s
            block (type 21) ;; label = @5
              f32.const 0x1.fff8p-136 (;=0.000000000000000000000000000000000000000022957;)
              i32.trunc_sat_f32_u
              f64.convert_i32_s
              try_table (type 1) (catch 0 0 (;@5;)) (catch 0 4 (;@1;)) (catch_all 0 (;@5;)) (catch 0 5) (catch 0 5) (catch 0 5) (catch 0 2 (;@3;)) (catch_all 5) (catch_all 5) (catch 0 4 (;@1;)) ;; label = @6
                local.get 0
                ref.as_non_null
                ref.as_non_null
                table.size 0
                local.get 1
                i32.trunc_f32_u
                throw 0
                i32.shr_u
                array.new_fixed 17 0
                table.set 0
                block (type 19) ;; label = @7
                  table.size 0
                  br_table 0 (;@7;) 1 (;@6;) 2 (;@5;) 3 (;@4;) 4 (;@3;) 6 (;@1;) 7 6 (;@1;)
                  try_table (type 21) (catch 0 3 (;@4;)) (catch_all 6 (;@1;)) (catch 0 2 (;@5;)) (catch 0 4 (;@3;)) (catch 0 1 (;@6;)) (catch_all 2 (;@5;)) (catch_all 0 (;@7;)) ;; label = @8
                    loop ;; label = @9
                    end
                    table.size 0
                    f32.convert_i32_s
                    i32.trunc_sat_f32_s
                    br_if 3 (;@5;)
                    f64.const 0x1p-959 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020522684006491881;)
                    i32.const -8193
                    f64.const -0x1.9449200c9d052p+317 (;=-421654734928489300000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                    i64.trunc_sat_f64_s
                    i32.const 872415232
                    local.get 0
                    ref.as_non_null
                    call 0
                    ref.cast (ref exn)
                    i64.const 35184372088831
                    f64.reinterpret_i64
                    i32.trunc_f64_u
                    ref.null 7
                    table.size 0
                    array.new_fixed 3 0
                    block (type 21) ;; label = @9
                      table.size 0
                      call 0
                      br 0 (;@9;)
                      table.size 0
                      global.get 0
                      i32.xor
                      global.set 0
                      global.get 0
                      i32.xor
                      global.set 0
                    end
                    drop
                    global.get 0
                    i32.xor
                    global.set 0
                    drop
                    global.get 0
                    i32.xor
                    global.set 0
                    drop
                    global.get 0
                    i32.xor
                    global.set 0
                    global.get 1
                    i64.xor
                    global.set 1
                    global.get 0
                    i32.xor
                    global.set 0
                    i64.reinterpret_f64
                    global.get 2
                    i64.xor
                    global.set 2
                  end
                end
                drop
              end
              i64.reinterpret_f64
              global.get 2
              i64.xor
              global.set 2
            end
            i32.reinterpret_f32
            global.get 3
            i32.xor
            global.set 3
            f64.const 0x1.18e6c68377073p-706 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000032593958072990254;)
          end
          i64.reinterpret_f64
          global.get 2
          i64.xor
          global.set 2
        end
        i64.const -262145
      end
      drop
    end
  )
)
