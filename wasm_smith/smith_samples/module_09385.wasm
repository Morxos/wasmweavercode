(module
  (rec
    (type (;0;) (func (param exnref)))
    (type (;1;) (array externref))
    (type (;2;) (array (mut i64)))
    (type (;3;) (struct (field f64) (field i64) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field arrayref) (field (mut i16))))
    (type (;4;) (func (result i64 i32)))
    (type (;5;) (sub (array (mut i8))))
    (type (;6;) (func (param eqref f64 i32) (result nullfuncref i64)))
    (type (;7;) (struct (field i16) (field (mut i8)) (field i16) (field i16) (field i16) (field i16) (field i8) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i32)) (field (mut i32)) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field i16) (field funcref) (field (mut arrayref))))
    (type (;8;) (sub (array (mut i16))))
    (type (;9;) (sub 5 (array (mut i8))))
    (type (;10;) (sub (struct (field (mut i16)) (field (mut i16)))))
    (type (;11;) (array (mut i32)))
    (type (;12;) (func (param funcref)))
    (type (;13;) (func (param nullexternref i64) (result i32)))
    (type (;14;) (sub (array i8)))
    (type (;15;) (sub (func (param i32 i64 i32 nullfuncref f32 i64) (result f64))))
    (type (;16;) (sub (func (param i64))))
    (type (;17;) (struct (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field i8) (field i64) (field (mut i8)) (field i16) (field i16) (field (mut i8)) (field i8) (field i8) (field (mut f64)) (field (mut i8)) (field (mut i8))))
    (type (;18;) (struct (field (mut i64)) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i64)) (field i16) (field (mut i16)) (field i16) (field i16) (field (mut f32)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i8)) (field (ref null 12)) (field i64)))
    (type (;19;) (array (mut i8)))
    (type (;20;) (sub (array i16)))
    (type (;21;) (func (param nullref i32 i32 i32) (result f32 i32)))
    (type (;22;) (sub (struct (field (mut i8)) (field i16) (field (ref null 0)) (field (mut exnref)) (field f32) (field (mut f64)) (field (mut i16)) (field i16) (field i32) (field (mut i16)) (field funcref) (field (mut i16)) (field i16) (field i16))))
    (type (;23;) (sub (func (result f64 arrayref f32 i32 f32 exnref))))
    (type (;24;) (array i64))
    (type (;25;) (func (param f64 i64)))
    (type (;26;) (struct (field f32) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field i32) (field (mut i8)) (field (mut i8)) (field f64)))
    (type (;27;) (sub (array i16)))
    (type (;28;) (sub (array i16)))
    (type (;29;) (func (param (ref null 24))))
    (type (;30;) (array i8))
    (type (;31;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field f32) (field i8) (field (mut f32)) (field (mut i8)) (field (mut i16)))))
    (type (;32;) (sub final 9 (array (mut i8))))
    (type (;33;) (func (param i32 f64 f64 (ref null 0) i32 f32) (result f64)))
    (type (;34;) (func))
    (type (;35;) (sub (func (result i32))))
    (type (;36;) (func (param i32)))
    (type (;37;) (array f32))
    (type (;38;) (func (param f64) (result i64)))
    (type (;39;) (struct (field (mut f32)) (field i16) (field i16) (field i16)))
    (type (;40;) (sub final 5 (array (mut i8))))
    (type (;41;) (sub (func (param i31ref) (result i32 i32 i64 (ref null 1) f32 i32 i64 f32 f64 i64))))
  )
  (rec)
  (memory (;0;) 0 22634 shared)
  (start 0)
  (func (;0;) (type 34)
    (local i64)
    ref.null 3
    call 0
    struct.get_s 3 9
    ref.null 21
    br 0
    i32.const 609724754
    f64.convert_i32_s
    block (type 4) (result i64 i32) ;; label = @1
      block (type 4) (result i64 i32) ;; label = @2
        return
        struct.new_default 22
        local.get 0
        i32.const -468850386
        try_table (type 36) (param i32) (catch_all 2) (catch_all 2) (catch_all 2) ;; label = @3
          return_call 0
          i32.load8_s
          i32.ctz
          f32.reinterpret_i32
          i64.trunc_f32_s
          f64.reinterpret_i64
          loop (result structref) ;; label = @4
            i32.const 1073741823
            f32.const -0x1.b6da68p-117 (;=-0.000000000000000000000000000000000010317388;)
            i32.trunc_f32_u
            i32.div_s
            i32.ctz
            br 0 (;@4;)
            if (type 23) (result f64 arrayref f32 i32 f32 exnref) ;; label = @5
              f64.const -0x1.fffffffffffffp+1008 (;=-5486124068793688000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
              i32.const -911432023
              i32.load align=1
              br_if 1 (;@4;)
              i32.trunc_f64_s
              ref.i31
              local.get 0
              local.tee 0
              array.new_fixed 24 0
              memory.size
              array.new_default 9
              ref.cast (ref none)
              local.get 0
              local.set 0
              f32.const 0x1.fffffep-124 (;=0.00000000000000000000000000000000000009403954;)
              call 0
              struct.new_default 39
              ref.as_non_null
              i64.const 1073741824
              call 0
              i64.eqz
              try_table (type 34) (catch_all 1 (;@4;)) (catch_all 1 (;@4;)) ;; label = @6
                local.get 0
                i64.extend8_s
                memory.size
                call 0
                return_call 0
                i32.eqz
                ref.null 9
                f64.const -nan:0xfffffffffff7f (;=NaN;)
                br 3 (;@3;)
                f64.floor
                block (type 34) ;; label = @7
                end
                f64.abs
                local.get 0
                f32.const 0x1.ep-146 (;=0.000000000000000000000000000000000000000000021;)
                return_call 0
                f32.sqrt
                f32.floor
                f32.abs
                f32.trunc
                f32.neg
                i64.trunc_sat_f32_u
                loop (type 35) (result i32) ;; label = @7
                  i64.const -198756264002762700
                  f32.const -nan:0x7fffbf (;=NaN;)
                  f32.sqrt
                  local.get 0
                  local.set 0
                  f32.nearest
                  f32.sqrt
                  block (type 35) (result i32) ;; label = @8
                    return_call 0
                    return_call 0
                    f64.const -0x1.b62d0d0708041p+898 (;=-3616968342603637000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                    f64.ceil
                    try_table (type 35) (result i32) (catch_all 2 (;@6;)) (catch_all 8) (catch_all 4 (;@4;)) (catch_all 1 (;@7;)) (catch_all 4 (;@4;)) (catch_all 5 (;@3;)) (catch_all 2 (;@6;)) (catch_all 1 (;@7;)) ;; label = @9
                      i32.const 822120278
                      br_if 3 (;@6;)
                      ref.null 34
                      br_on_null 9
                      i32.const -1048576
                      f32.convert_i32_s
                      f32.ceil
                      i32.trunc_sat_f32_u
                      i32.load8_s
                      if (type 12) (param funcref) ;; label = @10
                        unreachable
                      else
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            else
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
    end
    unreachable
  )
)
