(module
  (rec
    (type (;0;) (array (mut i32)))
    (type (;1;) (sub (array i8)))
    (type (;2;) (func))
    (type (;3;) (sub (func (param i32))))
    (type (;4;) (sub (array (mut i16))))
    (type (;5;) (sub (func (param f64 f32 f32))))
    (type (;6;) (func (param i32)))
    (type (;7;) (func))
    (type (;8;) (struct (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field i16)))
    (type (;9;) (sub (func)))
    (type (;10;) (func (param f64 nullfuncref)))
    (type (;11;) (func))
    (type (;12;) (sub (struct (field (mut i8)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i8)) (field eqref) (field f32) (field (mut f64)) (field f32) (field (mut i8)) (field exnref))))
    (type (;13;) (func (param i64)))
    (type (;14;) (array i16))
    (type (;15;) (sub (array (mut i8))))
    (type (;16;) (sub (func (result i32))))
    (type (;17;) (func (param i64 f32) (result f64)))
    (type (;18;) (sub (struct)))
    (type (;19;) (struct (field (mut f32)) (field (mut f32)) (field (mut i16)) (field f32) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field i16) (field (mut f64)) (field (mut i8)) (field (mut i16)) (field (mut eqref))))
    (type (;20;) (func (param f64 i32 f64 f32 (ref null 0))))
    (type (;21;) (sub (struct (field (mut f64)) (field i8) (field i16) (field (mut i8)) (field (mut nullfuncref)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field i64) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field i16) (field i16))))
    (type (;22;) (struct (field (mut i16))))
    (type (;23;) (array (mut i8)))
    (type (;24;) (array i8))
    (type (;25;) (func))
    (type (;26;) (func (param f32)))
    (type (;27;) (sub (struct (field i8) (field (mut f32)) (field i8) (field i16) (field (mut i31ref)) (field (mut i16)))))
    (type (;28;) (sub (array i16)))
    (type (;29;) (sub (struct (field (mut i32)) (field (mut i8)) (field f32) (field f64) (field i8) (field (mut f32)) (field i16) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i64)) (field i32) (field (mut i16)) (field i16) (field i64))))
    (type (;30;) (sub (struct (field (mut i16)) (field (mut i64)) (field i64) (field (mut i16)) (field i8) (field i8) (field (mut structref)) (field i16) (field (mut i8)) (field i16) (field f64) (field (mut i8)) (field i16) (field (mut i16)) (field i8) (field (mut nullref)) (field (mut i32)) (field (mut i16)))))
    (type (;31;) (sub (array i32)))
    (type (;32;) (sub (array (mut i16))))
    (type (;33;) (array i8))
    (type (;34;) (func))
    (type (;35;) (array (mut i16)))
    (type (;36;) (sub (array (mut i16))))
    (type (;37;) (sub (func (param i32 f64))))
    (type (;38;) (func (param i64) (result i32 f32 i64 structref i64)))
    (type (;39;) (sub (struct (field i16) (field (mut i16)) (field i16) (field (mut f64)) (field f64) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field i32) (field (mut i8)) (field i16) (field i16))))
    (type (;40;) (array (mut i8)))
    (type (;41;) (sub (struct (field i16) (field i8) (field i32) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field i8))))
    (type (;42;) (func (result f32)))
    (type (;43;) (sub (array i8)))
    (type (;44;) (sub (struct (field i16))))
    (type (;45;) (func (result i64)))
    (type (;46;) (func))
    (type (;47;) (sub (func (param i64 anyref f32 i32) (result structref))))
    (type (;48;) (sub (func (param (ref null 45) f64) (result i32 f64))))
    (type (;49;) (struct (field i8) (field i64) (field i64) (field i16) (field (mut i16)) (field i16) (field i64) (field (mut i16)) (field i8) (field (mut i16)) (field i32) (field i16) (field i8)))
    (type (;50;) (array i16))
    (type (;51;) (func))
    (type (;52;) (sub (struct (field (mut i16)) (field (mut f32)) (field (mut i64)) (field (mut f64)) (field i32) (field (mut i8)) (field (mut f64)) (field (mut i32)))))
    (type (;53;) (sub (func (param f32))))
    (type (;54;) (struct (field i8) (field (mut i16))))
    (type (;55;) (array i8))
    (type (;56;) (sub (func (param i31ref f64 f32) (result i31ref))))
    (type (;57;) (struct (field f64) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field eqref) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field i8) (field i16) (field i16) (field i8) (field i32) (field (mut f64))))
    (type (;58;) (struct (field i16) (field (mut i16)) (field i16) (field (mut f32)) (field (mut i8)) (field i8)))
    (type (;59;) (struct (field (mut f32)) (field i8) (field i8)))
    (type (;60;) (array i8))
    (type (;61;) (sub (array (mut i8))))
    (type (;62;) (array i16))
    (type (;63;) (array i8))
    (type (;64;) (array i64))
    (type (;65;) (array i32))
    (type (;66;) (func (param f32 i64 i64 f32 f32) (result f64)))
    (type (;67;) (struct (field (mut i16)) (field i8) (field i8) (field i16) (field i64) (field (mut i16)) (field (mut i64)) (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field i16) (field (ref null 6)) (field (mut f64)) (field (ref null 63)) (field (mut i8)) (field i16) (field i16)))
    (type (;68;) (func (result i32 i64)))
    (type (;69;) (sub (array i16)))
    (type (;70;) (sub (func (result f64 f32 i64))))
    (type (;71;) (struct (field i8) (field i8) (field i32) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i31ref))))
    (type (;72;) (sub (func (result funcref i64 i64 f32))))
  )
  (global (;0;) (mut f64) f64.const 0x1.6be99dfa9f935p+70 (;=1678250496325506600000;))
  (global (;1;) f32 f32.const 0x1.d2c30ap-99 (;=0.0000000000000000000000000000028766421;))
  (export "\u{3}" (func 1))
  (func (;0;) (type 5) (param f64 f32 f32)
    (local i32)
    nop
    block (type 34) ;; label = @1
      global.get 0
      try_table (type 51) ;; label = @2
      end
      unreachable
    end
  )
  (func (;1;) (type 56) (param i31ref f64 f32) (result i31ref)
    unreachable
  )
  (data (;0;) "\f4")
  (data (;1;) "\cd")
)
