(module
  (rec
    (type (;0;) (array i8))
    (type (;1;) (sub (func (param nullexternref i64))))
    (type (;2;) (sub (struct (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field f64) (field i16) (field f32) (field (mut i16)) (field nullref) (field i8) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i16)))))
    (type (;3;) (array (mut i16)))
    (type (;4;) (array i32))
    (type (;5;) (struct (field i64) (field i64) (field (mut i16)) (field i32) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field f32) (field (mut nullref))))
    (type (;6;) (array i64))
    (type (;7;) (func (result nullexternref i64 f64 i64)))
    (type (;8;) (struct (field i16) (field i8)))
    (type (;9;) (sub (array (mut i8))))
    (type (;10;) (sub (struct (field i16) (field (mut i32)) (field (mut f64)) (field i8) (field i32) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i31ref)) (field (mut i8)) (field i16) (field i8) (field i8))))
    (type (;11;) (sub (struct (field (mut i8)) (field i64) (field i8))))
    (type (;12;) (array f32))
    (type (;13;) (sub (array (mut i8))))
    (type (;14;) (struct (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field i8)))
    (type (;15;) (sub (struct (field i16) (field i16) (field f32) (field i16) (field i8) (field i16) (field (mut i64)) (field i32) (field (mut i64)) (field i16))))
    (type (;16;) (array (mut i8)))
    (type (;17;) (sub (func)))
    (type (;18;) (array f32))
    (type (;19;) (sub (array i32)))
    (type (;20;) (sub (struct (field f32) (field i16) (field i32) (field (mut i16)) (field i16) (field (mut nullref)) (field f64) (field i64) (field i32) (field (mut i8)) (field i8) (field (mut i16)) (field i16))))
    (type (;21;) (sub (array (mut i16))))
    (type (;22;) (func (param f64 i64) (result i32 anyref f32 nullexternref i64 i32)))
    (type (;23;) (struct (field i8) (field (mut i16)) (field (mut i32)) (field i16) (field (mut i8)) (field i32) (field (mut i64)) (field i8) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field i8)))
    (type (;24;) (func (result f32)))
    (type (;25;) (func (param i64 i32) (result funcref)))
    (type (;26;) (sub (func (param i64) (result i31ref))))
    (type (;27;) (struct (field f32) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8) (field i16) (field i16) (field i8) (field (mut i16)) (field f64) (field i16) (field i8)))
    (type (;28;) (sub 2 (struct (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field f64) (field i16) (field f32) (field (mut i16)) (field nullref) (field i8) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i16)) (field i8))))
    (type (;29;) (sub (array (mut i16))))
    (type (;30;) (sub (func (param i64 (ref null 20)) (result f64 i32))))
    (type (;31;) (struct (field (mut i8)) (field (mut i8)) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field i8) (field f32) (field (mut i16)) (field i64) (field (mut i16)) (field (mut i8)) (field (ref null 20)) (field (mut i16)) (field funcref) (field (mut i16))))
    (type (;32;) (sub (func (param (ref null 17) i64))))
    (type (;33;) (struct (field i8) (field (mut i8)) (field i8) (field (mut f64)) (field (mut (ref null 23))) (field i32) (field (mut i31ref)) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8))))
    (type (;34;) (sub (struct (field f64) (field (mut i32)))))
    (type (;35;) (sub (func (param f32))))
    (type (;36;) (sub (func)))
  )
  (rec
    (type (;37;) (struct (field (mut i8)) (field i16) (field f32) (field i16) (field (mut i16)) (field (mut f32)) (field i16) (field i32)))
    (type (;38;) (sub (struct (field f32) (field (mut i32)) (field (mut i16)) (field f64) (field (mut i16)) (field i8) (field i8) (field i8) (field i8) (field (mut i16)) (field i16) (field f32) (field (mut f64)) (field (mut i16)))))
    (type (;39;) (sub (func)))
    (type (;40;) (sub (struct (field i64) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field i32) (field i16) (field i8) (field (mut i8)) (field i32) (field f64))))
    (type (;41;) (array (mut i16)))
    (type (;42;) (struct (field i64)))
    (type (;43;) (func (param i32 anyref)))
    (type (;44;) (struct (field i16) (field (mut i8)) (field f64) (field i8) (field i8) (field (mut i8)) (field (mut i64)) (field i8) (field (mut (ref null 22))) (field i8)))
  )
  (tag (;0;) (type 1) (param nullexternref i64))
  (tag (;1;) (type 35) (param f32))
  (global (;0;) (mut i64) i64.const 1674147996074653167)
  (func (;0;) (type 43) (param i32 anyref)
    (local i32 i32)
    struct.new_default 27
    ref.null 19
    f64.const -nan:0xffffffffffbff (;=NaN;)
    data.drop 1
    f64.nearest
    br 0
    local.get 1
    ref.null 26
    ref.cast (ref 26)
    br 0
    nop
    br_on_null 0
    ref.as_non_null
    try_table (type 24) (result f32) ;; label = @1
      f64.const -0x1.2a277a98f0529p+596 (;=-302049695981075750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
      i64.trunc_sat_f64_u
      i64.extend16_s
      br 1
      i32.const 1367535724
      f64.convert_i32_u
      f64.floor
      i64.trunc_f64_u
      i32.const 8388607
      f32.convert_i32_s
      nop
      f32.sqrt
      block (type 24) (result f32) ;; label = @2
        ref.null 30
        ref.test (ref 30)
        br_if 2
        ref.null noextern
        i64.const 3973128082370457264
        try_table (type 24) (result f32) (catch_all 2) (catch_all 2) (catch_all 2) (catch_all 2) (catch_all 2) (catch 1 1 (;@1;)) (catch 1 0 (;@2;)) ;; label = @3
          f32.const -0x1.14675p+21 (;=-2264298;)
        end
        i32.const 128
        f32.convert_i32_s
        f32.sqrt
        f32.floor
        i64.const 5463766942983600769
        global.get 0
        i64.clz
        i32.const 32
        local.set 3
        i64.extend8_s
        i64.ge_u
        f32.const -0x1p+121 (;=-2658456000000000000000000000000000000;)
        i32.trunc_f32_u
        i64.const -562949953421313
        f64.convert_i64_u
        try_table (type 39) (catch 1 0 (;@2;)) (catch 1 1 (;@1;)) (catch 1 0 (;@2;)) (catch_all 2) (catch 1 1 (;@1;)) (catch_all 2) (catch 1 1 (;@1;)) (catch 1 0 (;@2;)) (catch 1 0 (;@2;)) ;; label = @3
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "")
  (data (;1;) "\8c\06")
)
