(module
  (rec
    (type (;0;) (sub (func (result f64 i64))))
    (type (;1;) (sub final 0 (func (result f64 i64))))
    (type (;2;) (sub 0 (func (result f64 i64))))
    (type (;3;) (struct (field exnref) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field (mut f64)) (field f32) (field (mut i32)) (field f64)))
    (type (;4;) (sub (struct (field (mut i8)) (field (mut eqref)) (field i8) (field i8) (field (mut i16)) (field i32) (field (ref null 1)) (field (mut i16)) (field (mut i16)) (field i8) (field f64))))
    (type (;5;) (struct))
    (type (;6;) (struct (field i8) (field (mut nullexternref)) (field i8) (field f32) (field i16) (field (mut i8)) (field i64) (field i8) (field (mut i16)) (field i16)))
    (type (;7;) (sub (array (mut i32))))
    (type (;8;) (func (param i64) (result f64)))
    (type (;9;) (sub 0 (func (result f64 i64))))
    (type (;10;) (func (param f64 f64 i32) (result i32 i64)))
    (type (;11;) (array (mut i16)))
    (type (;12;) (sub (array i64)))
    (type (;13;) (sub (struct (field (mut eqref)) (field f64) (field (mut i8)) (field arrayref) (field (mut f32)) (field (mut i8)) (field i16) (field f32) (field i32) (field i64) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i64)))))
    (type (;14;) (sub (func)))
    (type (;15;) (array (mut i16)))
    (type (;16;) (sub (array i64)))
    (type (;17;) (func (result i64 i32)))
    (type (;18;) (array (mut f32)))
    (type (;19;) (sub (array i8)))
    (type (;20;) (func (result i32)))
    (type (;21;) (func (param f32 structref f32 (ref null 8) i64) (result i64 i32 f64 i32 i32)))
    (type (;22;) (sub (array (mut i8))))
    (type (;23;) (sub (struct (field i64) (field (mut i16)))))
    (type (;24;) (array i16))
    (type (;25;) (array f64))
    (type (;26;) (array i8))
    (type (;27;) (sub (array i8)))
    (type (;28;) (sub (func (param f64 f64) (result f64 i32))))
    (type (;29;) (array i16))
    (type (;30;) (sub (struct (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field funcref) (field (mut i64)) (field i8) (field (mut i16)) (field (mut i8)) (field i8) (field i16) (field i16) (field (ref null 19)) (field (mut i8)) (field i8) (field (mut i8)) (field i8) (field i32) (field i8))))
    (type (;31;) (sub (array (mut i8))))
    (type (;32;) (array (mut i8)))
    (type (;33;) (array (ref null 12)))
    (type (;34;) (func (param externref f64) (result f32 i64)))
  )
  (table (;0;) i64 95 (ref null 5))
  (tag (;0;) (type 14))
  (global (;0;) i64 i64.const -1500270502292101561 i64.const -8763818751079793772 i64.const -3040778869660601859 i64.const 5040578164828771812 i64.const -5630606313360469110 i64.const 7030042110108072879 i64.const -9017978628424438153 i64.sub i64.const 7831810951807908565 i64.mul i64.sub i64.add i64.add i64.add i64.sub i64.const -5908405613107266201 i64.sub)
  (global (;1;) structref ref.null struct)
  (global (;2;) arrayref ref.null 12)
  (global (;3;) (mut i32) i32.const 0)
  (global (;4;) (mut i64) i64.const 0)
  (global (;5;) (mut i64) i64.const 0)
  (export "<," (func 0))
  (func (;0;) (type 20) (result i32)
    (local i32)
    f32.const -0x1.cb47f2p-110 (;=-0.0000000000000000000000000000000013820986;)
    i64.trunc_sat_f32_s
    f64.const -0x1.ba163f7d6e55ep-281 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000004444663690675698;)
    struct.new_default 6
    return_call 0
    loop (type 14) ;; label = @1
      data.drop 2
      call 1
      i64.clz
      global.get 1
      i32.const -105174972
      f32.convert_i32_u
      i64.trunc_f32_u
      loop (type 20) (result i32) ;; label = @2
        f64.const -nan:0xfefffffffffff (;=NaN;)
        data.drop 1
        i32.trunc_sat_f64_u
        i32.const -1025
        i32.and
        br_if 0 (;@2;)
        try_table (type 9) (result f64 i64) (catch 0 1 (;@1;)) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) ;; label = @3
          table.size 0
          local.get 0
          br 2 (;@1;)
          f32.reinterpret_i32
          i32.reinterpret_f32
          return_call 0
          loop (type 2) (result f64 i64) ;; label = @4
            call 1
            table.get 0
            struct.new 5
            ref.test (ref 5)
            block (type 9) (result f64 i64) ;; label = @5
              data.drop 2
              loop (type 2) (result f64 i64) ;; label = @6
                br 0 (;@6;)
                try_table (type 2) (result f64 i64) (catch_all 5 (;@1;)) (catch 0 5 (;@1;)) (catch_all 0 (;@6;)) (catch_all 4 (;@2;)) (catch 0 4 (;@2;)) ;; label = @7
                  br 1 (;@6;)
                  local.get 0
                  try_table (type 2) (result f64 i64) (catch 0 5 (;@2;)) (catch_all 6 (;@1;)) (catch 0 6 (;@1;)) (catch 0 5 (;@2;)) (catch_all 5 (;@2;)) (catch 0 6 (;@1;)) (catch_all 3 (;@4;)) (catch 0 6 (;@1;)) (catch 0 6 (;@1;)) (catch 0 3 (;@4;)) ;; label = @8
                    global.get 1
                    global.get 0
                    block (result f32) ;; label = @9
                      f64.const 0x1.b54047f13c615p-305 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000026202472005279952;)
                      f32.const 0x1.ep-146 (;=0.000000000000000000000000000000000000000000021;)
                      i32.trunc_sat_f32_u
                      i32.eqz
                      array.new 25
                      i64.const -3506964346688775563
                      f32.convert_i64_s
                      block (result i32) ;; label = @10
                        local.get 0
                        data.drop 1
                        try_table (catch_all 8 (;@2;)) (catch 0 8 (;@2;)) (catch_all 6 (;@4;)) (catch_all 4 (;@6;)) (catch_all 9 (;@1;)) (catch_all 9 (;@1;)) (catch 0 4 (;@6;)) (catch_all 8 (;@2;)) ;; label = @11
                          try_table (catch_all 0 (;@11;)) (catch_all 0 (;@11;)) (catch 0 0 (;@11;)) (catch_all 10 (;@1;)) (catch_all 0 (;@11;)) (catch_all 9 (;@2;)) (catch_all 5 (;@6;)) (catch 0 10 (;@1;)) ;; label = @12
                            loop (type 0) (result f64 i64) ;; label = @13
                              f64.const 0x1.ffffp-1058 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000647577;)
                              data.drop 2
                              i64.trunc_f64_u
                              f64.const -0x1.fffffffffffffp+1023 (;=-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                              block (type 17) (result i64 i32) ;; label = @14
                                table.size 0
                                table.get 0
                                i32.const 512
                                table.size 0
                                f64.convert_i64_s
                                f64.sqrt
                                try_table (type 9) (result f64 i64) (catch_all 2 (;@12;)) (catch_all 2 (;@12;)) (catch_all 3 (;@11;)) (catch 0 10 (;@4;)) (catch 0 13 (;@1;)) (catch 0 8 (;@6;)) (catch 0 10 (;@4;)) (catch 0 8 (;@6;)) ;; label = @15
                                  br 4 (;@11;)
                                  struct.new 5
                                  f64.const -nan:0xffffffff80000 (;=NaN;)
                                  block (type 9) (result f64 i64) ;; label = @16
                                    call 0
                                    br 6 (;@10;)
                                    table.size 0
                                    i64.eqz
                                    struct.new 5
                                    f32.const 0x0p+0 (;=0;)
                                    call 1
                                    table.size 0
                                    i64.clz
                                    f64.convert_i64_s
                                    return_call 0
                                    loop (type 2) (result f64 i64) ;; label = @17
                                      try_table (result f32) (catch 0 5 (;@12;)) (catch_all 4 (;@13;)) (catch 0 13 (;@4;)) (catch_all 16 (;@1;)) (catch 0 0 (;@17;)) (catch 0 13 (;@4;)) ;; label = @18
                                        block ;; label = @19
                                          block (type 1) (result f64 i64) ;; label = @20
                                            global.get 1
                                            br_on_null 19 (;@1;)
                                            f64.const -0x1p+1 (;=-2;)
                                            i64.const 34359738368
                                            f64.const 0x1.9235a6e73ae2ep+28 (;=421747310.4518765;)
                                            struct.new 5
                                            ref.as_non_null
                                            table.size 0
                                            local.get 0
                                            global.get 3
                                            i32.xor
                                            global.set 3
                                            global.get 4
                                            i64.xor
                                            global.set 4
                                            drop
                                            i64.reinterpret_f64
                                            global.get 5
                                            i64.xor
                                            global.set 5
                                            global.get 4
                                            i64.xor
                                            global.set 4
                                            i64.reinterpret_f64
                                            global.get 5
                                            i64.xor
                                            global.set 5
                                            drop
                                            f64.const 0x1.ffffcp-1056 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000259032;)
                                            i64.const 0
                                          end
                                          unreachable
                                        end
                                        unreachable
                                      end
                                      unreachable
                                    end
                                    unreachable
                                  end
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                        end
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
              end
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 2) (result f64 i64)
    unreachable
  )
  (data (;0;) "")
  (data (;1;) "")
  (data (;2;) "R&")
)
