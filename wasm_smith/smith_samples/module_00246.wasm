(module
  (rec
    (type (;0;) (sub (func (param i64) (result i32))))
    (type (;1;) (sub (array i64)))
    (type (;2;) (sub (func)))
    (type (;3;) (sub (struct (field i32) (field (mut f32)) (field (mut i8)) (field i8) (field (mut i8)) (field i8) (field i8) (field (mut f64)) (field i8) (field (mut i64)) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field f32) (field (mut i64)) (field i16) (field (mut i16)) (field (mut f32)))))
    (type (;4;) (array f32))
    (type (;5;) (sub (struct)))
    (type (;6;) (func (param structref f64) (result f32 i32)))
    (type (;7;) (sub (struct (field (mut i16)) (field (mut i32)) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i32)) (field i16) (field (mut f64)) (field i8) (field f32) (field (mut i16)) (field i16) (field i8) (field (mut i16)))))
    (type (;8;) (array (ref null 1)))
    (type (;9;) (func))
    (type (;10;) (sub final 0 (func (param i64) (result i32))))
    (type (;11;) (array f32))
    (type (;12;) (sub (struct)))
    (type (;13;) (sub (struct (field (mut i16)) (field i16) (field f32) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field f32) (field i8) (field (mut i8)))))
    (type (;14;) (sub (array (mut f32))))
    (type (;15;) (sub (struct (field (mut i32)) (field i8) (field (mut i64)) (field i32) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field i16) (field i16))))
    (type (;16;) (sub (array i16)))
    (type (;17;) (sub (array f64)))
    (type (;18;) (sub (func (result i64))))
    (type (;19;) (array (mut i8)))
    (type (;20;) (array i16))
    (type (;21;) (struct (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field i8) (field (mut f64)) (field (mut i8)) (field i8) (field i64) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)) (field externref) (field i16) (field (mut i8)) (field i8)))
    (type (;22;) (func))
    (type (;23;) (sub (func)))
    (type (;24;) (sub (func (result (ref null 5)))))
    (type (;25;) (func (param i32 i64 i64 f32 i64 f64 i32) (result i64 (ref null 22) eqref f32 nullexternref f64 f64)))
    (type (;26;) (struct))
    (type (;27;) (func (param f64) (result f64 anyref i64)))
    (type (;28;) (array (mut i8)))
    (type (;29;) (sub (struct (field (mut i16)) (field i16) (field (mut i8)) (field (mut f32)) (field i16) (field (mut i16)) (field i16) (field i32) (field (mut i16)) (field i8) (field i8))))
    (type (;30;) (func (param f32 i32) (result i31ref)))
    (type (;31;) (array (mut i32)))
    (type (;32;) (sub (array i8)))
    (type (;33;) (sub (array (mut i8))))
    (type (;34;) (func (param (ref null 24)) (result f64)))
    (type (;35;) (sub (array (mut i64))))
    (type (;36;) (array (mut f64)))
    (type (;37;) (func))
    (type (;38;) (sub (array f32)))
    (type (;39;) (sub (array i8)))
    (type (;40;) (sub (func (param i32 f64 arrayref) (result (ref null 39)))))
    (type (;41;) (sub (array i16)))
    (type (;42;) (sub (func (param i32 (ref null 38) i32))))
    (type (;43;) (array (mut i16)))
    (type (;44;) (array i16))
    (type (;45;) (sub (func (result i64 i32))))
    (type (;46;) (sub (struct (field (mut i16)) (field (mut i8)) (field i16) (field i32) (field i8) (field funcref) (field i8) (field i16) (field (mut i31ref)))))
    (type (;47;) (sub (func (result i64))))
    (type (;48;) (sub (struct (field (mut structref)) (field (mut i16)) (field i64) (field i16) (field (ref null 0)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field f64) (field anyref) (field exnref) (field i8) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut f32)) (field i32))))
    (type (;49;) (array (mut i8)))
  )
  (import "\u{18}" "" (tag (;0;) (type 9)))
  (table (;0;) 2438 838399 (ref null 15) ref.null 15)
  (global (;0;) i32 i32.const -1260830766)
  (global (;1;) i64 i64.const 1613810930323619804)
  (export "" (table 0))
  (func (;0;) (type 30) (param f32 i32) (result i31ref)
    (local nullexternref)
    struct.new_default 13
    block (type 45) (result i64 i32) ;; label = @1
      f32.const 0x1.p-146 (;=0.000000000000000000000000000000000000000000011;)
      i64.trunc_f32_u
      global.get 0
      f32.const inf (;=inf;)
      f32.ceil
      f32.abs
      f32.neg
      i64.trunc_sat_f32_u
      i64.ctz
      struct.new 5
      block (type 47) (result i64) ;; label = @2
        f32.const 0x1.p-142 (;=0.00000000000000000000000000000000000000000018;)
        f32.ceil
        f32.trunc
        try_table (type 2) ;; label = @3
          f64.const -0x1.339a98ca8e713p-446 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006612623518359966;)
          i32.const 1984406261
          f64.convert_i32_s
          block (type 47) (result i64) ;; label = @4
            br 1 (;@3;)
            i64.const 7882665204519658655
            f32.convert_i64_s
            try_table (type 9) (catch_all 1 (;@3;)) ;; label = @5
              block (type 23) ;; label = @6
                block (result i32) ;; label = @7
                  local.get 1
                  local.set 1
                  f64.const 0x1.fffffffffffffp-896 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037857669957336787;)
                  ref.null array
                  extern.convert_any
                  any.convert_extern
                  ref.as_non_null
                  try_table (type 22) (catch 0 1 (;@6;)) (catch 0 1 (;@6;)) ;; label = @8
                    table.size 0
                    struct.new_default 7
                    struct.get_s 7 15
                    i32.gt_s
                    i32.extend16_s
                    struct.new_default 3
                    table.size 0
                    if (type 23) ;; label = @9
                      global.get 1
                      f32.const 0x1.fp-145 (;=0.000000000000000000000000000000000000000000043;)
                      i32.reinterpret_f32
                      loop (type 45) (result i64 i32) ;; label = @10
                        try_table (type 22) ;; label = @11
                          struct.new_default 26
                          try_table (catch_all 6 (;@5;)) ;; label = @12
                            struct.new 26
                            extern.convert_any
                            ref.cast (ref extern)
                            try_table (type 47) (result i64) ;; label = @13
                              struct.new 5
                              loop (type 47) (result i64) ;; label = @14
                                f32.const -nan:0x7fc000 (;=NaN;)
                                global.get 0
                                local.set 1
                                f32.nearest
                                i32.reinterpret_f32
                                i32.clz
                                br 9 (;@5;)
                                table.get 0
                                struct.get_s 15 8
                                i64.extend_i32_s
                                i64.extend8_s
                                i64.extend32_s
                                ref.null 13
                                try_table (type 37) (catch_all 2 (;@12;)) ;; label = @15
                                end
                                extern.convert_any
                                ref.as_non_null
                                f32.const -0x0p+0 (;=-0;)
                                i32.reinterpret_f32
                                block (type 24) (result (ref null 5)) ;; label = @15
                                  f64.const -0x1.f0dede502986ep+264 (;=-57533682507401970000000000000000000000000000000000000000000000000000000000000000;)
                                  f64.sqrt
                                  f64.abs
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
