(module
  (rec
    (type (;0;) (array i16))
    (type (;1;) (struct (field i8) (field i32) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8))))
    (type (;2;) (array i16))
    (type (;3;) (struct (field (mut f32)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field f32) (field i8) (field (mut i8)) (field i8) (field i16) (field i16) (field (mut i64)) (field (mut i8)) (field i16)))
    (type (;4;) (sub (func (result i31ref))))
    (type (;5;) (func (param i32 f64 f32) (result exnref)))
    (type (;6;) (sub (array (mut i8))))
    (type (;7;) (sub (struct (field structref) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)))))
    (type (;8;) (func (result i32 i32)))
    (type (;9;) (sub (func (result f32 eqref f64))))
    (type (;10;) (sub (array (mut i16))))
    (type (;11;) (sub (func (result arrayref))))
    (type (;12;) (func))
    (type (;13;) (struct (field (mut i8)) (field i16) (field (mut f64)) (field (mut f32)) (field f64) (field i16) (field i8) (field (mut i16)) (field (mut i16)) (field i32) (field i64) (field i16) (field (mut f64)) (field i32) (field (mut i8)) (field i16)))
    (type (;14;) (sub (func (result arrayref f32 (ref null 10) f32))))
    (type (;15;) (struct (field i8) (field i16) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field (mut i8)) (field i8) (field i16) (field (mut i32)) (field i16) (field (mut i64)) (field (mut f32)) (field i16) (field i8)))
    (type (;16;) (func (param nullfuncref) (result anyref f32 f64)))
    (type (;17;) (struct (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i32))))
    (type (;18;) (sub (array i16)))
    (type (;19;) (func))
    (type (;20;) (func (param i64 f64) (result (ref null 0))))
    (type (;21;) (func (result f32)))
    (type (;22;) (func (param f32 f32 f32 arrayref) (result i64 i32)))
    (type (;23;) (sub (func (param i64) (result i64))))
    (type (;24;) (sub (array (mut i8))))
    (type (;25;) (func (param f32 f32 anyref) (result i32)))
    (type (;26;) (sub (func (param (ref null 0)))))
    (type (;27;) (array i8))
    (type (;28;) (sub (struct (field i8) (field i8) (field (mut i8)) (field (mut i64)) (field (mut i8)) (field f64))))
    (type (;29;) (sub (func)))
    (type (;30;) (func (param f32) (result (ref null 22) i64)))
    (type (;31;) (array (mut i64)))
    (type (;32;) (array (mut i8)))
    (type (;33;) (sub (struct (field (mut nullfuncref)) (field i16) (field i8) (field i8) (field (mut i64)) (field i16) (field (mut i16)) (field f64) (field f64) (field (mut i8)) (field i32) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i64)) (field i64) (field (mut i64)) (field (mut i16)) (field f64))))
    (type (;34;) (sub final 4 (func (result i31ref))))
  )
  (rec
    (type (;35;) (sub (struct (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field f32) (field (mut i8)) (field i8) (field i16) (field (mut i16)) (field f32) (field (mut i16)) (field i16) (field (mut i32)) (field i8) (field (mut i8)) (field (mut i16)) (field f32) (field (mut i8)))))
    (type (;36;) (sub (struct (field (mut i32)) (field (mut i8)) (field (mut i64)) (field i32) (field (mut i8)) (field (mut eqref)) (field (mut i8)) (field (mut f64)) (field i8) (field i8) (field i32) (field i8) (field (mut i16)) (field (mut i16)) (field (ref null 26)) (field f64) (field (mut i16)) (field (mut f64)) (field f64) (field (mut i16)))))
    (type (;37;) (sub (array nullref)))
    (type (;38;) (func))
    (type (;39;) (func (param i64 f32)))
    (type (;40;) (sub (func (param externref f64 i31ref arrayref i32 i64 i32))))
    (type (;41;) (array (mut f32)))
    (type (;42;) (struct (field i16) (field (mut i8)) (field i32)))
    (type (;43;) (func))
    (type (;44;) (struct (field (mut i8))))
    (type (;45;) (array f64))
    (type (;46;) (struct (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16))))
    (type (;47;) (func (param i32 f32 i32 i31ref (ref null 19)) (result i32)))
    (type (;48;) (sub (struct (field i16) (field i16) (field (mut f32)))))
    (type (;49;) (array (mut i8)))
  )
  (import "\u{44f}" "" (global (;0;) (mut f32)))
  (import "" "" (tag (;0;) (type 29)))
  (export "" (func 0))
  (func (;0;) (type 26) (param (ref null 0))
    struct.new_default 42
    br_on_null 0
    return
    try_table (type 4) (result i31ref) (catch 0 0) (catch 0 0) (catch 0 0) (catch 0 0) (catch_all 0) ;; label = @1
      br 1
      i64.const -18014398509481984
      i32.wrap_i64
      if (result f64) ;; label = @2
        local.get 0
        i32.const 8
        struct.new 44
        extern.convert_any
        local.get 0
        br 2
        block (type 4) (result i31ref) ;; label = @3
          f64.const -0x1.fb28cf33af82p-483 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007932619411152698;)
          i32.trunc_f64_u
          i64.extend_i32_s
          i64.clz
          f32.const -nan:0x7fff7f (;=NaN;)
          i32.trunc_f32_u
          i64.const -3723463712605592227
          global.get 0
          i64.trunc_f32_u
          i64.ctz
          nop
          i64.or
          block (type 11) (result arrayref) ;; label = @4
            block (type 43) ;; label = @5
              br 0 (;@5;)
              br 5
              throw 0
              ref.null i31
              f64.const -nan:0xffffffffff800 (;=NaN;)
              f64.trunc
              i64.trunc_sat_f64_u
              i64.extend8_s
              struct.new_default 36
              br 5
              extern.convert_any
              ref.is_null
              if (type 19) ;; label = @6
                try_table (type 38) (catch 0 0 (;@6;)) (catch_all 6) (catch_all 1 (;@5;)) (catch 0 1 (;@5;)) (catch 0 1 (;@5;)) (catch_all 0 (;@6;)) (catch 0 1 (;@5;)) (catch 0 1 (;@5;)) ;; label = @7
                  struct.new_default 36
                  i64.const -8388609
                  i64.ctz
                  f32.convert_i64_u
                  i32.const -610990919
                  f64.const -0x1.0679d50fede23p+5 (;=-32.80948841519082;)
                  i64.trunc_sat_f64_s
                  f32.convert_i64_u
                  i32.trunc_sat_f32_s
                  loop (type 29) ;; label = @8
                    unreachable
                    block (type 21) (result f32) ;; label = @9
                      local.get 0
                      local.set 0
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      else
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "\e1*\94")
)
