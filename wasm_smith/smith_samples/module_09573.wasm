(module
  (rec
    (type (;0;) (sub (func (param i32) (result f64))))
    (type (;1;) (sub (array i32)))
    (type (;2;) (array (mut i64)))
    (type (;3;) (sub (struct (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field i16) (field (mut f64)) (field funcref) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i64)) (field f32) (field f32) (field i8))))
    (type (;4;) (struct (field i8) (field i8) (field i31ref) (field i16) (field f32) (field (mut funcref)) (field i8) (field i8) (field i16) (field i64) (field i8)))
    (type (;5;) (array i16))
    (type (;6;) (sub (func (result i64 f32))))
    (type (;7;) (sub (struct (field (mut i8)) (field i16) (field i64) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut externref)) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field i8) (field i8) (field (mut i16)) (field i8))))
    (type (;8;) (array i8))
    (type (;9;) (sub (array (mut i16))))
    (type (;10;) (func (param i32 i64 nullexternref) (result eqref i64 i32 i32 i32)))
    (type (;11;) (func (param i64 exnref)))
    (type (;12;) (struct (field i64) (field (mut i8)) (field i16) (field i16) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field i32)))
    (type (;13;) (struct (field (mut i16)) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field f32) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field (mut i16))))
    (type (;14;) (func (param i32 f64 f64)))
    (type (;15;) (struct (field i32) (field i16) (field (mut f64)) (field i16) (field (mut (ref null 6))) (field i16) (field i16) (field (mut f32)) (field f64) (field (mut f64)) (field (mut i16)) (field i8) (field (mut i8)) (field i64) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16)))
    (type (;16;) (sub (func (result i32 f64))))
    (type (;17;) (func (param i64) (result f32 f32)))
    (type (;18;) (sub (array f64)))
    (type (;19;) (array (mut i16)))
    (type (;20;) (struct (field i32) (field (mut i64))))
    (type (;21;) (sub (array i16)))
    (type (;22;) (func (result f32)))
    (type (;23;) (sub (struct (field f32) (field i16) (field (mut f32)) (field i16) (field i16) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i8) (field f64) (field i16) (field (mut f64)) (field (mut i16)) (field i8) (field (mut i16)) (field i8))))
    (type (;24;) (sub (array i16)))
    (type (;25;) (array i16))
    (type (;26;) (sub (array (mut i16))))
    (type (;27;) (sub (func (param (ref null 4) i64 i32 f64 structref) (result structref))))
    (type (;28;) (sub (func)))
    (type (;29;) (sub (struct (field (mut (ref null 16))) (field (mut i8)) (field i8) (field (mut f32)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut f32)) (field i32))))
    (type (;30;) (struct (field (mut i16)) (field (mut (ref null 8))) (field (mut i8)) (field (mut i16)) (field f32) (field (mut f32))))
    (type (;31;) (sub (array i8)))
    (type (;32;) (array (mut i8)))
    (type (;33;) (sub (array (mut i8))))
  )
  (global (;0;) f32 f32.const -0x1.c0029p-97 (;=-0.0000000000000000000000000000110442994;))
  (elem (;0;) declare (ref null 3) (ref.null 3))
  (func (;0;) (type 11) (param i64 exnref)
    (local f32)
    local.get 1
    ref.cast exnref
    i64.const 18014398509481983
    try_table (type 6) (result i64 f32) (catch_all 0) ;; label = @1
      i64.const 1229782938247303441
      f32.convert_i64_u
      i32.const 542687741
      f64.convert_i32_u
      try_table (type 28) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) ;; label = @2
        global.get 0
        loop ;; label = @3
          local.get 0
          local.get 1
          elem.drop 0
          i32.const 1201663337
          br_table 0 (;@3;) 1 (;@2;) 3 1 (;@2;)
          ref.test exnref
          try_table (catch_all 3) (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) (catch_all 1 (;@2;)) (catch_all 3) (catch_all 0 (;@3;)) (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) ;; label = @4
            elem.drop 0
          end
          i64.extend_i32_u
          i64.ne
          i32.clz
          elem.drop 0
          global.get 0
          f32.trunc
          struct.new_default 4
          br_on_null 0 (;@3;)
          loop ;; label = @4
            local.get 1
            throw_ref
            f64.const 0x1.de0f221ff294ep+787 (;=1520016229125364500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
            elem.drop 0
            global.get 0
            f32.const -0x1.a46124p-60 (;=-0.000000000000000001424301;)
            i64.const -2
            try_table (type 22) (result f32) ;; label = @5
              i64.const 131072
              f32.convert_i64_s
              i64.trunc_sat_f32_s
              f64.reinterpret_i64
              f32.const 0x1.p-142 (;=0.00000000000000000000000000000000000000000018;)
              i32.trunc_f32_u
              loop (type 28) ;; label = @6
              end
              ref.i31
              struct.new_default 13
              extern.convert_any
              any.convert_extern
              elem.drop 0
              local.get 0
              f32.convert_i64_s
              local.get 0
              loop (type 17) (param i64) (result f32 f32) ;; label = @6
                f64.convert_i64_u
                f64.const -0x1.9842772e5a6d5p+253 (;=-23082634585717994000000000000000000000000000000000000000000000000000000000000;)
                global.get 0
                i64.trunc_sat_f32_u
                br 3 (;@3;)
                block (type 6) (result i64 f32) ;; label = @7
                  f64.const -nan:0xffffffffffffe (;=NaN;)
                  br 4 (;@3;)
                  i64.trunc_f64_s
                  i32.wrap_i64
                  struct.new_default 30
                  br_on_null 5 (;@2;)
                  ref.test (ref none)
                  i32.shl
                  f64.convert_i32_u
                  block (type 28) ;; label = @8
                    f32.const -0x1.d26334p-6 (;=-0.028466035;)
                    f32.floor
                    br 3 (;@5;)
                    global.get 0
                    i32.const -32769
                    f32.convert_i32_s
                    f32.ge
                    elem.drop 0
                    if (result (ref null 23)) ;; label = @9
                      i64.const 34359738367
                      i32.const -1593360644
                      i32.extend16_s
                      global.get 0
                      struct.new_default 12
                      elem.drop 0
                      f32.const 0x1.5c8e48p+27 (;=182743620;)
                      i64.trunc_f32_s
                      try_table (type 28) (catch_all 9) (catch_all 7 (;@2;)) ;; label = @10
                        br 8 (;@2;)
                        struct.new_default 12
                        br 6 (;@4;)
                        local.get 1
                        br_on_null 10
                        try_table (result i64) (catch_all 7 (;@3;)) (catch_all 8 (;@2;)) (catch_all 10) (catch_all 2 (;@8;)) (catch_all 2 (;@8;)) (catch_all 10) (catch_all 0 (;@10;)) (catch_all 7 (;@3;)) (catch_all 0 (;@10;)) (catch_all 7 (;@3;)) ;; label = @11
                          f64.const 0x1.cff95bbcfaaf2p-360 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007717120693459147;)
                          i64.trunc_f64_s
                          try_table (type 16) (result i32 f64) ;; label = @12
                            ref.null 13
                            i32.const -2049
                            ref.i31
                            drop
                            drop
                            i32.const 0
                            f64.const 0x0p+0 (;=0;)
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    else
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
