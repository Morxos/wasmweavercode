(module
  (rec
    (type (;0;) (func (param exnref i32) (result i64 f64)))
    (type (;1;) (sub (array (mut f32))))
    (type (;2;) (func))
    (type (;3;) (sub (array (mut i16))))
    (type (;4;) (sub (array (mut i16))))
    (type (;5;) (func (result f64)))
    (type (;6;) (array (mut i8)))
    (type (;7;) (struct (field (mut i16)) (field (mut i16)) (field (mut f32)) (field i16) (field (mut exnref)) (field (mut i8)) (field i64) (field i16) (field f64) (field (mut i8)) (field i8) (field (mut i32)) (field (mut i16)) (field (mut f64))))
    (type (;8;) (sub (struct (field (mut i16)) (field i64) (field f64) (field i8) (field i8) (field (mut funcref)))))
    (type (;9;) (array (mut i16)))
    (type (;10;) (func (param f64) (result structref)))
    (type (;11;) (array (mut i8)))
    (type (;12;) (sub (func (result i32))))
    (type (;13;) (array (mut i16)))
    (type (;14;) (func))
    (type (;15;) (array (mut i16)))
    (type (;16;) (func (result i32)))
    (type (;17;) (sub (struct (field i32) (field i8) (field i32) (field i8) (field (mut i8)) (field i16))))
    (type (;18;) (struct (field i32) (field i16) (field (mut i16)) (field (mut i16))))
    (type (;19;) (sub (array (mut f32))))
    (type (;20;) (array (mut i8)))
    (type (;21;) (array (mut f32)))
    (type (;22;) (struct (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field f64) (field i8) (field i8) (field i8) (field i8) (field (mut i8))))
    (type (;23;) (struct (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field i64)))
    (type (;24;) (struct (field f32) (field i32) (field i8) (field (mut i8)) (field (mut f64)) (field i16) (field i8) (field f64) (field (mut i8))))
    (type (;25;) (sub (struct (field f64) (field (mut i16)) (field i16) (field f64) (field (mut f32)) (field (mut f32)) (field i16) (field (mut i16)))))
    (type (;26;) (func))
    (type (;27;) (func (param i64) (result f64 i32)))
    (type (;28;) (sub (array i64)))
    (type (;29;) (sub (array i16)))
    (type (;30;) (sub (func (result i32 i64))))
    (type (;31;) (func (param f32) (result f32 i64 f32)))
    (type (;32;) (sub (func)))
    (type (;33;) (func (param f32)))
  )
  (table (;0;) 6970 455851 externref ref.null extern)
  (memory (;0;) i64 3893 61104728512748 shared)
  (tag (;0;) (type 14))
  (tag (;1;) (type 14))
  (tag (;2;) (type 2))
  (tag (;3;) (type 32))
  (tag (;4;) (type 14))
  (global (;0;) (mut i32) i32.const 789591638 i32.const -1077644304 i32.const 1563360310 i32.const 2144045396 i32.const -1359616778 i32.const -65668501 i32.const 560963546 i32.const -2093693266 i32.const 1553709457 i32.const 1438975497 i32.mul i32.sub i32.mul i32.mul i32.sub i32.mul i32.const 287756136 i32.mul i32.sub i32.add i32.add)
  (func (;0;) (type 26)
    (local i32 i64 i32 i64)
    i32.const 128
    loop (type 12) (result i32) ;; label = @1
      i32.const -400329954
      i64.const 4503599627370495
      call 0
      f64.const -0x1.ae42e73158314p-229 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000019481543085355952;)
      struct.new_default 7
      ref.cast (ref none)
      ref.as_non_null
      f32.const -0x1.86973ep-30 (;=-0.000000001420961;)
      i32.const -3
      memory.size
      global.get 0
      if (type 32) ;; label = @2
        try_table (type 14) (catch_all 1 (;@1;)) (catch 4 2) (catch 4 1 (;@1;)) (catch 3 2) ;; label = @3
          f64.const -nan:0xfffffffffc000 (;=NaN;)
          i64.reinterpret_f64
          i64.load offset=47539527
          i32.load8_u offset=38273575
          i64.const 4931513064030765175
          block (result exnref) ;; label = @4
            loop (type 14) ;; label = @5
              try_table (result i32) (catch_all 5) (catch_all 3 (;@2;)) ;; label = @6
                try_table (catch 0 6) (catch_all_ref 2 (;@4;)) (catch_all 4 (;@2;)) (catch 4 1 (;@5;)) (catch_all 4 (;@2;)) (catch 1 3 (;@3;)) (catch_all 5 (;@1;)) (catch 0 3 (;@3;)) (catch 1 6) (catch_all 5 (;@1;)) ;; label = @7
                  nop
                  nop
                  loop (type 16) (result i32) ;; label = @8
                    ref.null array
                    memory.size
                    i64.const 72057594037927935
                    i32.const -1275068416
                    i32.store offset=79208096 align=1
                    i32.load8_s offset=151898156
                    table.get 0
                    ref.cast (ref extern)
                    br 1 (;@7;)
                    call 0
                    try_table (type 32) (catch 2 5 (;@3;)) (catch_all_ref 4 (;@4;)) (catch_all_ref 4 (;@4;)) (catch 0 8) (catch 2 6 (;@2;)) ;; label = @9
                      memory.size
                      local.tee 1
                      memory.grow
                      loop (type 26) ;; label = @10
                        call 1
                        ref.null none
                        ref.null 26
                        f32.const -nan:0x7fffff (;=NaN;)
                        f64.promote_f32
                        f64.nearest
                        f64.abs
                        f64.nearest
                        try_table (type 26) (catch 1 7 (;@3;)) (catch_all 8 (;@2;)) (catch_all_ref 6 (;@4;)) (catch_all 1 (;@9;)) (catch_all 5 (;@5;)) (catch_all_ref 6 (;@4;)) (catch 1 3 (;@7;)) (catch_all 9 (;@1;)) (catch 1 8 (;@2;)) (catch_all 8 (;@2;)) ;; label = @11
                          try_table (type 14) (catch_all_ref 7 (;@4;)) (catch_all 3 (;@8;)) (catch 4 9 (;@2;)) (catch_all 4 (;@7;)) (catch 1 1 (;@10;)) ;; label = @12
                            i64.const 9115999803262246404
                            loop (type 2) ;; label = @13
                              return
                              global.get 0
                              f32.const -0x1.dde9ap-98 (;=-0.0000000000000000000000000000058907276;)
                              loop (type 5) (result f64) ;; label = @14
                                return_call 1
                                global.get 0
                                return
                                call 0
                                f64.convert_i32_s
                                i32.trunc_sat_f64_s
                                i64.extend_i32_u
                                i64.eqz
                                f64.const -nan:0xffffbffffffff (;=NaN;)
                                block (type 12) (result i32) ;; label = @15
                                  ref.null i31
                                  struct.new_default 18
                                  block (type 32) ;; label = @16
                                    struct.new_default 25
                                    extern.convert_any
                                    ref.null nofunc
                                    br_on_null 4 (;@12;)
                                    f32.const -nan:0x7c0000 (;=NaN;)
                                    block (type 30) (result i32 i64) ;; label = @17
                                      loop (type 14) ;; label = @18
                                        call 0
                                        return_call 0
                                        local.get 1
                                        f32.load offset=49941674 align=2
                                        call 1
                                        table.size 0
                                        if (type 5) (result f64) ;; label = @19
                                          block (result i32) ;; label = @20
                                            global.get 0
                                            i32.clz
                                            f32.convert_i32_s
                                            i64.trunc_sat_f32_u
                                            i32.load8_u offset=196817211
                                            struct.new_default 22
                                            ref.as_non_null
                                            loop (type 32) ;; label = @21
                                              i64.const -8232549062988376501
                                              loop (type 12) (result i32) ;; label = @22
                                                try_table (catch_all 19 (;@3;)) (catch 0 4 (;@18;)) (catch_all 9 (;@13;)) (catch 4 0 (;@22;)) (catch 1 6 (;@16;)) (catch_all 14 (;@8;)) (catch_all 20 (;@2;)) (catch_all_ref 18 (;@4;)) ;; label = @23
                                                  try_table (type 16) (result i32) ;; label = @24
                                                    table.size 0
                                                    loop ;; label = @25
                                                    end
                                                  end
                                                  drop
                                                end
                                                unreachable
                                              end
                                              unreachable
                                            end
                                            unreachable
                                          end
                                          unreachable
                                        else
                                          unreachable
                                        end
                                        unreachable
                                      end
                                      unreachable
                                    end
                                    unreachable
                                  end
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 26))
)
