(module
  (rec
    (type (;0;) (sub (array (mut i16))))
    (type (;1;) (struct (field (mut i16)) (field i16) (field f32) (field structref) (field f32)))
    (type (;2;) (array i16))
    (type (;3;) (func (result i32)))
    (type (;4;) (array (mut i16)))
    (type (;5;) (func (param i32) (result i64 i32)))
    (type (;6;) (sub (func (result i32))))
    (type (;7;) (sub (array i16)))
    (type (;8;) (sub (func (param i64))))
    (type (;9;) (array (mut f32)))
    (type (;10;) (array f32))
    (type (;11;) (sub (struct (field (mut externref)) (field i8) (field f64))))
    (type (;12;) (sub (array (mut i8))))
    (type (;13;) (sub 8 (func (param i64))))
    (type (;14;) (sub (struct (field (mut i16)) (field i8) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field i16) (field (mut f32)) (field (mut f32)) (field (mut i32)) (field (mut i64)) (field i16) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i8)) (field f64))))
    (type (;15;) (struct (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field i16) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field i8) (field i64)))
    (type (;16;) (sub (struct (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field structref) (field (mut f32)) (field i8))))
    (type (;17;) (array (mut i64)))
    (type (;18;) (sub (array i16)))
    (type (;19;) (struct (field f64) (field (mut i16)) (field i32) (field (mut i32))))
    (type (;20;) (sub (func (result externref))))
    (type (;21;) (array i8))
    (type (;22;) (array (mut i16)))
    (type (;23;) (func (result nullexternref i32)))
    (type (;24;) (sub (func (param i64) (result i64 f32 i32 f64))))
    (type (;25;) (sub (array (mut i8))))
    (type (;26;) (sub (array i8)))
    (type (;27;) (sub (func)))
    (type (;28;) (func))
    (type (;29;) (sub (func)))
    (type (;30;) (array i16))
    (type (;31;) (sub (struct (field i8) (field i8) (field i32) (field i8) (field (mut i8)) (field i8) (field i16) (field (mut i16)) (field i16) (field (mut i8)))))
    (type (;32;) (sub (func (result i64 i32))))
    (type (;33;) (func (param i32) (result f32)))
    (type (;34;) (func (param nullfuncref)))
    (type (;35;) (func))
    (type (;36;) (sub (func (param f32))))
    (type (;37;) (array i8))
    (type (;38;) (struct (field i8) (field i8) (field i8) (field (mut f64)) (field (mut i8)) (field i64) (field i32) (field (mut i8)) (field i31ref) (field (mut i16)) (field (mut i32)) (field f32)))
    (type (;39;) (array (mut i16)))
    (type (;40;) (sub (struct (field i8) (field (mut (ref null 25))) (field f64) (field i32) (field i64) (field (ref null 14)) (field (mut i16)) (field i64) (field f64) (field i8) (field (mut i8)) (field (mut f32)) (field i8) (field (mut i16)) (field f32))))
    (type (;41;) (sub (array (mut i16))))
  )
  (rec
    (type (;42;) (struct (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16))))
    (type (;43;) (sub (array i16)))
    (type (;44;) (sub (func (param i32))))
    (type (;45;) (sub (func)))
    (type (;46;) (struct))
    (type (;47;) (sub (array f64)))
    (type (;48;) (array (mut nullexternref)))
    (type (;49;) (array i8))
    (type (;50;) (func (param i64 f32) (result f32)))
    (type (;51;) (struct (field i64) (field i16) (field (mut i64)) (field (mut i8)) (field f32) (field (mut f64)) (field (mut f32)) (field (mut (ref null 29))) (field i32)))
    (type (;52;) (sub (func (result f64))))
    (type (;53;) (array i8))
    (type (;54;) (sub (struct (field i16) (field i8) (field (mut i64)) (field (mut i16)) (field f32) (field (mut f32)) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field i8) (field (mut i8)) (field (mut f32)) (field i16) (field i8) (field (mut i8)))))
    (type (;55;) (sub (func (param arrayref))))
    (type (;56;) (sub (func)))
  )
  (import "" "" (global (;0;) (mut i32)))
  (memory (;0;) i64 0)
  (tag (;0;) (type 56))
  (global (;1;) f32 f32.const -0x1.a8796p+70 (;=-1957541400000000000000;))
  (global (;2;) f32 global.get 1)
  (global (;3;) (mut i64) i64.const -7771398149046983018)
  (func (;0;) (type 55) (param arrayref)
    ref.null 15
    ref.cast (ref 15)
    struct.new_default 54
    f64.const -0x1.dced508fc5ff2p+813 (;=-101764998067057010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
    i64.trunc_sat_f64_s
    i64.extend32_s
    ref.null 34
    ref.as_non_null
    ref.null func
    ref.as_non_null
    ref.test (ref 50)
    f32.const -nan:0x5fffff (;=NaN;)
    loop (type 56) ;; label = @1
      f64.const -nan:0xfffbfffffffff (;=NaN;)
      f64.nearest
      i64.trunc_f64_u
      i64.clz
      f64.const 0x1.7cdccd81f6d5ep+19 (;=780006.4221147706;)
      block (type 20) (result externref) ;; label = @2
        ref.null 21
        local.set 0
        f64.const -0x1.d6c0387ad5717p+109 (;=-1193495225072060000000000000000000;)
        f64.ceil
        br 2
        f64.sqrt
        i32.trunc_sat_f64_s
        memory.size
        i64.load8_s
        i32.load16_u
        struct.new_default 54
        struct.new_default 1
        local.get 0
        extern.convert_any
        ref.cast (ref extern)
        loop (type 35) ;; label = @3
          global.get 0
          f32.const -nan:0x3fffff (;=NaN;)
          i64.trunc_f32_s
          br 3
          try_table (type 35) ;; label = @4
            block (result i32) ;; label = @5
              br 4 (;@1;)
              memory.size
              i32.load8_u
              f64.const -0x1.36712ef6d7d44p+227 (;=-261546971116849830000000000000000000000000000000000000000000000000000;)
              i64.trunc_f64_u
              loop (type 32) (result i64 i32) ;; label = @6
                memory.size
                try_table (type 3) (result i32) (catch 0 3 (;@3;)) (catch_all 6) (catch_all 6) (catch_all 6) (catch_all 0 (;@6;)) (catch_all 5 (;@1;)) (catch 0 6) (catch 0 3 (;@3;)) (catch_all 6) ;; label = @7
                  struct.new 46
                  throw 0
                  try_table (catch_all 1 (;@6;)) (catch_all 6 (;@1;)) (catch_all 3 (;@4;)) (catch_all 6 (;@1;)) (catch_all 4 (;@3;)) ;; label = @8
                    br 0 (;@8;)
                    memory.size
                    struct.new 46
                    f64.const -nan:0xffeffffffffff (;=NaN;)
                    i32.trunc_f64_u
                    block ;; label = @9
                      struct.new_default 31
                      struct.new 46
                      f32.const 0x1.ffcp-139 (;=0.000000000000000000000000000000000000000002868;)
                      try_table (type 23) (result nullexternref i32) ;; label = @10
                        loop (type 29) ;; label = @11
                          struct.new_default 15
                          global.get 3
                          f32.const 0x1.0a222ep-35 (;=0.000000000030255878;)
                          try_table (type 36) (param f32) (catch 0 0 (;@11;)) (catch_all 7 (;@4;)) (catch 0 8 (;@3;)) ;; label = @12
                            i64.trunc_f32_u
                            f64.load
                            f64.nearest
                            global.get 2
                            loop (type 32) (result i64 i32) ;; label = @13
                              memory.size
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
