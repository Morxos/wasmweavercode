(module
  (rec
    (type (;0;) (sub (struct (field (mut i64)) (field i16) (field (mut i16)) (field i16) (field i32) (field (mut arrayref)) (field i16) (field i8))))
    (type (;1;) (array i16))
    (type (;2;) (sub (func (param f64))))
    (type (;3;) (sub (array (mut structref))))
    (type (;4;) (array (mut f32)))
    (type (;5;) (struct (field i8) (field (mut i16)) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i64)) (field (mut f32)) (field (mut i8)) (field (mut i32)) (field (mut f32))))
    (type (;6;) (sub (struct (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field i32) (field i8) (field i16) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i64)) (field (mut f64)) (field i64))))
    (type (;7;) (array i64))
    (type (;8;) (struct (field eqref) (field (mut i8)) (field f32) (field (mut i16)) (field (mut i8))))
    (type (;9;) (sub (array i8)))
    (type (;10;) (array (mut externref)))
    (type (;11;) (sub (struct (field i64) (field i8) (field (mut i8)) (field (mut i32)) (field i16))))
    (type (;12;) (sub (func (result f64 f32 f64 f32 f32 f32 f64 i32 i64 f32 i64 f32))))
    (type (;13;) (sub (func (param i32 f32 nullref))))
    (type (;14;) (struct (field i16) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i32)) (field i16) (field arrayref) (field (mut i16)) (field i16)))
    (type (;15;) (sub (func)))
    (type (;16;) (struct (field (mut i8))))
    (type (;17;) (sub (array i32)))
    (type (;18;) (sub (func)))
    (type (;19;) (struct (field (mut i16)) (field (mut i16)) (field (mut i32)) (field i16) (field i64) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field i16) (field i64) (field i16) (field (mut f32)) (field (mut i64)) (field i16) (field i16) (field (ref null 12)) (field (mut i16)) (field i8) (field (mut f32))))
    (type (;20;) (sub 3 (array (mut structref))))
    (type (;21;) (sub (array (mut i16))))
    (type (;22;) (sub (array (mut i16))))
    (type (;23;) (struct (field (mut i8))))
    (type (;24;) (array i64))
    (type (;25;) (sub (func)))
    (type (;26;) (func (result eqref f32 f32 i32 arrayref i64)))
    (type (;27;) (array (mut i16)))
    (type (;28;) (func))
    (type (;29;) (array (mut i64)))
    (type (;30;) (struct))
    (type (;31;) (func (param (ref null 5) i64 exnref i64)))
    (type (;32;) (array i64))
    (type (;33;) (sub (array i8)))
    (type (;34;) (sub (struct (field i8) (field externref) (field i16) (field i8) (field i32) (field i16) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field f32) (field (mut i8)) (field i32))))
    (type (;35;) (sub (array (mut i16))))
    (type (;36;) (sub (array i8)))
    (type (;37;) (sub (array (mut i32))))
    (type (;38;) (struct (field i8) (field (mut i8)) (field f32) (field anyref) (field f32) (field (mut exnref)) (field f64) (field i8) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i64) (field (mut i64)) (field (mut i8)) (field i8)))
    (type (;39;) (array (mut i8)))
    (type (;40;) (array (mut (ref null 13))))
    (type (;41;) (struct (field (mut i32)) (field i16) (field i64) (field (mut f32)) (field i32)))
    (type (;42;) (func (param i32)))
    (type (;43;) (sub (struct (field f32) (field (mut i16)) (field (mut i16)))))
    (type (;44;) (sub (func (param i64 i32))))
    (type (;45;) (sub (struct (field i32) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field structref) (field (mut f32)))))
    (type (;46;) (sub (array (mut i8))))
    (type (;47;) (sub (struct (field (mut i16)) (field (mut f64)) (field (mut i8)))))
    (type (;48;) (sub (func (result i32))))
    (type (;49;) (sub (func (result f32 i64 i64))))
    (type (;50;) (struct (field i8) (field (mut i16)) (field f32) (field i16) (field i16) (field i16) (field i64) (field (mut i16)) (field i16) (field i16) (field i16) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i16) (field i32) (field f64)))
    (type (;51;) (sub (array i16)))
    (type (;52;) (array i16))
    (type (;53;) (sub (array f64)))
    (type (;54;) (sub (struct (field i16))))
    (type (;55;) (func (param (ref null 31)) (result i64)))
    (type (;56;) (func (param f32 i32) (result f64)))
    (type (;57;) (array i16))
    (type (;58;) (sub (struct (field (mut i8)) (field i8) (field i16) (field (mut i32)) (field (mut i16)) (field i32) (field f32) (field (mut i8)) (field i16) (field f32) (field i16) (field i16) (field (mut funcref)) (field (mut i8)) (field (mut f32)))))
    (type (;59;) (func (result f64)))
    (type (;60;) (array i16))
    (type (;61;) (array (mut i16)))
    (type (;62;) (sub (struct (field i16) (field i8) (field (mut i8)))))
    (type (;63;) (array i16))
    (type (;64;) (sub (array f32)))
    (type (;65;) (struct (field (mut f32)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i64) (field (mut i64)) (field nullref) (field i16) (field (mut i16)) (field i16) (field i8) (field i16) (field f64) (field f64) (field (mut i64)) (field i8)))
    (type (;66;) (sub (struct (field i8) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field (mut i64)) (field f32) (field (mut i8)) (field i8) (field (mut i16)))))
    (type (;67;) (sub (array i8)))
    (type (;68;) (sub (struct (field i16) (field (mut i8)))))
    (type (;69;) (array i8))
    (type (;70;) (sub (array (mut i16))))
    (type (;71;) (struct (field (mut i8)) (field (mut i32)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut externref)) (field i64) (field (mut i8)) (field i32) (field i16) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field i32)))
    (type (;72;) (array (mut i8)))
    (type (;73;) (func))
    (type (;74;) (sub (array i8)))
    (type (;75;) (sub (struct (field i8) (field (mut i16)) (field f32))))
    (type (;76;) (func (result f64 externref i32)))
    (type (;77;) (func (param i32 i64) (result i64)))
    (type (;78;) (sub (array (mut i8))))
  )
  (import "" "" (memory (;0;) i64 1647 1647 shared))
  (func (;0;) (type 2) (param f64))
)
