(module
  (rec
    (type (;0;) (sub (func (param f32) (result nullexternref))))
    (type (;1;) (array nullexternref))
    (type (;2;) (struct (field i8) (field (mut i16)) (field (mut structref)) (field externref) (field i8) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field i16) (field (mut i8))))
    (type (;3;) (array f64))
    (type (;4;) (sub (array (mut anyref))))
    (type (;5;) (sub (struct (field f32) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field i8) (field f32) (field (mut i8)) (field (mut i16)) (field i64) (field (mut f64)) (field (mut i32)) (field (mut i8)) (field (mut i32)) (field i8) (field i16) (field i8) (field (mut i8)) (field (mut f64)))))
    (type (;6;) (func (result f32 funcref funcref)))
    (type (;7;) (array i64))
    (type (;8;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut f32)) (field (mut i32)) (field (mut i64)) (field (mut i8)) (field i8))))
    (type (;9;) (sub final 8 (struct (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut f32)) (field (mut i32)) (field (mut i64)) (field (mut i8)) (field i8) (field i16))))
    (type (;10;) (sub (array f32)))
    (type (;11;) (func (param f64 i32) (result funcref f32 eqref f64 i64)))
    (type (;12;) (sub (func)))
    (type (;13;) (sub (struct (field i16) (field i16) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field i16) (field i8) (field i16) (field i8) (field i64) (field (mut i8)) (field i8) (field eqref) (field (ref null 8)) (field (mut i32)) (field i8) (field (mut i8)) (field (mut i16)))))
    (type (;14;) (sub (struct (field i8) (field i8) (field (mut f32)) (field f64) (field (mut i16)) (field i8) (field i8) (field i8) (field (mut f64)) (field i8) (field f64) (field i16) (field i8) (field (mut i16)))))
    (type (;15;) (func (param i64 i32)))
    (type (;16;) (sub (struct (field f32) (field i16) (field i64) (field i8) (field i16) (field i8) (field (mut f64)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field i8) (field (mut i16)) (field i16))))
    (type (;17;) (sub (func (param eqref nullfuncref) (result funcref i32 i64 f32))))
    (type (;18;) (sub (array (mut f32))))
    (type (;19;) (sub (func (param f64))))
    (type (;20;) (func))
    (type (;21;) (func (result f32)))
    (type (;22;) (sub (func)))
    (type (;23;) (array (mut i16)))
    (type (;24;) (sub (struct (field i8))))
    (type (;25;) (func (result i64)))
    (type (;26;) (struct (field (mut (ref null 17))) (field (mut i8)) (field (mut i64)) (field i64) (field i64) (field (mut i32)) (field (mut externref))))
    (type (;27;) (sub (func (result i64 f32 i64 i64))))
    (type (;28;) (sub (func (result f32))))
    (type (;29;) (sub (func (param i32) (result i64 (ref null 3) i64 f32))))
    (type (;30;) (array i32))
    (type (;31;) (array i16))
    (type (;32;) (sub (array (mut i8))))
  )
  (import "\u{2}P\u{1a};}" "" (global (;0;) (mut f32)))
  (import "\u{1e}MF\u{1a}wW\u{c}G" "" (tag (;0;) (type 19) (param f64)))
  (import "" "" (global (;1;) (mut f32)))
  (table (;0;) 199 (ref null 3) ref.null none)
  (global (;2;) (mut i32) i32.const 0)
  (global (;3;) (mut i64) i64.const 0)
  (elem (;0;) declare anyref)
  (elem (;1;) (table 0) (i32.const 100) (ref null 3))
  (func (;0;) (type 11) (param f64 i32) (result funcref f32 eqref f64 i64)
    (local f64)
    table.size 0
    ref.i31
    f64.const -0x1.261828133e41p-469 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000753665727417479;)
    f64.trunc
    f64.ceil
    f64.floor
    i32.trunc_sat_f64_s
    f32.convert_i32_u
    global.set 1
    try_table (type 20) ;; label = @1
      try_table (catch_all 0 (;@1;)) ;; label = @2
        elem.drop 0
        i64.const 4294967295
        elem.drop 1
        i64.eqz
        try_table (type 22) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) ;; label = @3
          global.get 1
          br 0 (;@3;)
          f32.neg
          f32.trunc
          f32.trunc
          i32.trunc_sat_f32_s
          try_table (type 28) (result f32) (catch_all 1 (;@2;)) (catch_all 0 (;@3;)) (catch_all 1 (;@2;)) (catch_all 2 (;@1;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) ;; label = @4
            block (type 20) ;; label = @5
              global.get 1
              i32.reinterpret_f32
              f64.convert_i32_s
              loop (type 6) (result f32 funcref funcref) ;; label = @6
                elem.drop 1
                br 0 (;@6;)
                ref.null 18
                f32.const -0x1.c754ap+117 (;=-295526430000000000000000000000000000;)
                f64.const 0x1.a971804f854ap+219 (;=1400137989065939700000000000000000000000000000000000000000000000000;)
                i32.const -1048577
                i32.clz
                f32.const 0x1.p-131 (;=0.000000000000000000000000000000000000000367342;)
                i32.trunc_sat_f32_u
                i32.div_s
                try_table (type 12) (catch_all 0 (;@6;)) (catch_all 4 (;@2;)) (catch_all 1 (;@5;)) (catch_all 4 (;@2;)) ;; label = @7
                  br 5 (;@2;)
                  loop (result f64) ;; label = @8
                    struct.new_default 16
                    br 6 (;@2;)
                    br 0 (;@8;)
                    global.get 0
                    i64.trunc_sat_f32_u
                    local.get 2
                    i64.trunc_f64_s
                    i64.clz
                    nop
                    loop (result i32) ;; label = @9
                      loop (type 25) (result i64) ;; label = @10
                        local.get 2
                        i32.trunc_sat_f64_s
                        array.new_default 10
                        table.size 0
                        block (type 21) (result f32) ;; label = @11
                          f64.const 0x1.ffffffffffep-1031 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000086916947597933;)
                          loop (type 27) (result i64 f32 i64 i64) ;; label = @12
                            i32.const 1024
                            global.get 1
                            f64.const 0x1.f6b95ab2a504dp-624 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028208006432196256;)
                            global.get 1
                            i32.trunc_f32_s
                            i64.extend_i32_u
                            loop (type 20) ;; label = @13
                            end
                            i64.popcnt
                            struct.new_default 14
                            array.new_fixed 4 0
                            elem.drop 0
                            loop (type 20) ;; label = @13
                              struct.new_default 9
                              elem.drop 0
                              loop (type 22) ;; label = @14
                                local.get 2
                                throw 0
                                local.get 2
                                i32.const -1866528916
                                if (type 27) (result i64 f32 i64 i64) ;; label = @15
                                  ref.null 13
                                  loop (type 25) (result i64) ;; label = @16
                                    struct.new_default 13
                                    br_on_null 14 (;@2;)
                                    br_on_null 15 (;@1;)
                                    i32.const 745021184
                                    block (type 12) ;; label = @17
                                      local.get 2
                                      global.get 1
                                      local.get 0
                                      i64.const -128
                                      loop (type 25) (result i64) ;; label = @18
                                        ref.null 8
                                        i64.const -549755813888
                                        i64.extend16_s
                                        block (type 28) (result f32) ;; label = @19
                                          ref.null 30
                                          extern.convert_any
                                          ref.cast externref
                                          ref.cast (ref extern)
                                          drop
                                          f32.const 0x1p-126 (;=0.000000000000000000000000000000000000011754944;)
                                        end
                                        i32.reinterpret_f32
                                        global.get 2
                                        i32.xor
                                        global.set 2
                                        global.get 3
                                        i64.xor
                                        global.set 3
                                        drop
                                        i64.const -2305843009213693953
                                      end
                                      drop
                                      drop
                                      drop
                                      drop
                                      drop
                                    end
                                    unreachable
                                  end
                                  unreachable
                                else
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
    end
    unreachable
  )
)
