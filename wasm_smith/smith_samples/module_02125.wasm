(module
  (rec
    (type (;0;) (func (param exnref i32)))
    (type (;1;) (array i8))
    (type (;2;) (func))
    (type (;3;) (struct (field i16) (field i32) (field (mut i16)) (field (mut i32)) (field f32) (field (mut i16)) (field (mut f32)) (field (mut i64)) (field i8) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field i32) (field (mut i32)) (field (mut i16)) (field (mut f32)) (field (mut funcref)) (field f32)))
    (type (;4;) (sub (array i8)))
    (type (;5;) (sub (func (param f32) (result nullexternref))))
    (type (;6;) (sub (array i8)))
    (type (;7;) (array i8))
    (type (;8;) (sub (func (result funcref))))
    (type (;9;) (sub (func (param funcref i64 (ref null 4) i64 i64 eqref i64))))
    (type (;10;) (sub (func (param f32) (result i32 i64 f32 i32))))
    (type (;11;) (struct (field (mut f32)) (field i8) (field (mut f32)) (field (mut i8)) (field i16) (field (mut i8))))
    (type (;12;) (struct (field (mut i16)) (field i16) (field f32) (field (mut i32))))
    (type (;13;) (array f32))
    (type (;14;) (func (param i32 f32)))
    (type (;15;) (func (result i32)))
    (type (;16;) (array (mut i8)))
    (type (;17;) (array (mut i64)))
    (type (;18;) (sub (array (mut i8))))
    (type (;19;) (func))
    (type (;20;) (sub (struct (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field i8) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field i16) (field (mut f64)) (field i8) (field i32) (field i8) (field i16) (field (mut i8)) (field (mut i16)))))
    (type (;21;) (array (mut structref)))
    (type (;22;) (sub 6 (array i8)))
    (type (;23;) (struct))
    (type (;24;) (sub (func)))
    (type (;25;) (sub (func (param i32 arrayref))))
    (type (;26;) (sub (func (result i64 f64 f64 i31ref f32 i31ref))))
    (type (;27;) (struct (field i8) (field (mut i32)) (field i8) (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field i8) (field i8) (field i64) (field (mut i32)) (field (mut i8)) (field i64) (field i64)))
    (type (;28;) (sub (func (param i32 f32) (result f32))))
    (type (;29;) (array i16))
    (type (;30;) (array (ref null 26)))
    (type (;31;) (sub (func (param i64 i32 f64))))
    (type (;32;) (sub (func (result i64))))
    (type (;33;) (array (ref null 31)))
    (type (;34;) (func))
    (type (;35;) (struct (field i16) (field (mut i32)) (field i16) (field (mut i16)) (field (mut i64)) (field i16)))
    (type (;36;) (sub (array (mut i16))))
    (type (;37;) (func (param f32 i64 f64) (result i32)))
    (type (;38;) (array i16))
    (type (;39;) (sub (array (mut i16))))
    (type (;40;) (func (param i32) (result f32 f32 i32 f32 i64)))
    (type (;41;) (sub (array (mut f32))))
    (type (;42;) (struct (field i16) (field (mut f32)) (field (mut i8)) (field f32) (field i8) (field (ref null 5)) (field (mut i16)) (field (mut i8)) (field (mut i64))))
    (type (;43;) (sub (func (param (ref null 36) eqref f32) (result i64))))
    (type (;44;) (sub (struct (field (ref null 20)) (field (mut i16)) (field i8) (field (mut i32)) (field (mut i8)) (field i64))))
    (type (;45;) (sub final 6 (array i8)))
    (type (;46;) (sub (array (mut i32))))
    (type (;47;) (func (result i64)))
    (type (;48;) (sub final 25 (func (param i32 anyref))))
    (type (;49;) (sub (array (mut i16))))
    (type (;50;) (func))
    (type (;51;) (func (result f64)))
  )
  (table (;0;) i64 564 (ref null 37))
  (memory (;0;) 3398 38916)
  (tag (;0;) (type 50))
  (tag (;1;) (type 19))
  (func (;0;) (type 43) (param (ref null 36) eqref f32) (result i64)
    table.size 0
    block (type 2) ;; label = @1
      loop (type 24) ;; label = @2
        data.drop 1
        f32.const -0x1.e1684ep+57 (;=-271008300000000000;)
        i64.trunc_f32_u
        f64.convert_i64_u
        i32.const 1158767389
        data.drop 0
        block (type 51) (result f64) ;; label = @3
          struct.new 23
          i64.const 4544601376836556365
          ref.null 46
          memory.size
          i64.extend_i32_s
          i64.extend16_s
          ref.null 29
          struct.new 23
          ref.eq
          i32.load8_s offset=208821122
          if (type 32) (result i64) ;; label = @4
            f64.const -0x1.209efe15229efp-554 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019119232785275292;)
            loop (type 51) (result f64) ;; label = @5
              br 3 (;@2;)
              f64.const 0x1.3008002p-1043 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001260064525;)
              i32.trunc_sat_f64_u
              ref.null none
              br 3 (;@2;)
              struct.new 23
              data.drop 0
              struct.new_default 44
              ref.cast (ref none)
              extern.convert_any
              i64.const -6392433852599013050
              i64.extend32_s
              i64.extend32_s
              f64.convert_i64_u
              i32.trunc_sat_f64_u
              try_table (result f32) (catch_all 3 (;@2;)) (catch_all 3 (;@2;)) (catch_all 4 (;@1;)) (catch 1 3 (;@2;)) ;; label = @6
                loop (type 26) (result i64 f64 f64 i31ref f32 i31ref) ;; label = @7
                  memory.size
                  br_if 2 (;@5;)
                  memory.size
                  br 0 (;@7;)
                  i32.extend8_s
                  i32.eqz
                  i32.load16_u offset=39845125 align=1
                  if ;; label = @8
                    local.get 1
                    br_on_null 0 (;@8;)
                    ref.cast (ref 42)
                    throw 0
                    block (type 15) (result i32) ;; label = @9
                      loop (type 19) ;; label = @10
                        f64.const -nan:0xffbffffffffff (;=NaN;)
                        loop (type 34) ;; label = @11
                          f32.const 0x1.fffep-134 (;=0.000000000000000000000000000000000000000091834;)
                          try_table (type 50) (catch 0 1 (;@10;)) (catch_all 0 (;@11;)) ;; label = @12
                            struct.new_default 44
                            struct.get_u 44 1
                            i64.load offset=61396880
                            struct.new 23
                            f32.const -inf (;=-inf;)
                            f32.nearest
                            f32.abs
                            i64.trunc_f32_u
                            return
                            ref.as_non_null
                            struct.new 23
                            br 2 (;@10;)
                            local.tee 1
                            ref.eq
                            memory.grow
                            i64.load offset=182091548
                            ref.null 11
                            data.drop 1
                            ref.null 47
                            table.size 0
                            i64.extend16_s
                            f64.reinterpret_i64
                            struct.new 23
                            f32.const 0x1.p-133 (;=0.000000000000000000000000000000000000000091835;)
                            f64.const -nan:0xfbfffffffffff (;=NaN;)
                            i64.reinterpret_f64
                            i32.const 872415232
                            br_if 5 (;@7;)
                            block (type 32) (result i64) ;; label = @13
                              br 1 (;@12;)
                              loop (type 34) ;; label = @14
                                struct.new_default 3
                                unreachable
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          else
            unreachable
          end
          unreachable
        end
        unreachable
      end
    end
  )
  (data (;0;) "\22")
  (data (;1;) "")
)
