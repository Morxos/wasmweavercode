(module
  (rec
    (type (;0;) (func (param f32 f32 i64 i64)))
    (type (;1;) (func))
    (type (;2;) (sub (func (result i64))))
    (type (;3;) (sub (func (result f64))))
    (type (;4;) (struct (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut i16)) (field i32) (field (mut i8)) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field (mut i16))))
    (type (;5;) (sub (array (mut i8))))
    (type (;6;) (struct (field i8) (field (mut structref)) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field i32) (field (mut i16))))
    (type (;7;) (sub (array (mut i32))))
    (type (;8;) (array (ref null 5)))
    (type (;9;) (sub (struct (field i8) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i16)))))
    (type (;10;) (array f32))
    (type (;11;) (struct))
    (type (;12;) (struct (field i16) (field f64) (field structref) (field (mut i16)) (field (mut f64)) (field i16) (field i8) (field i8) (field i8)))
    (type (;13;) (func (param f64 f32) (result i32 i64)))
    (type (;14;) (array i8))
    (type (;15;) (sub (struct (field (mut nullexternref)) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field i16) (field (mut f64)) (field i8) (field (mut f32)) (field (mut i64)) (field i16) (field structref) (field i16))))
    (type (;16;) (array (mut i8)))
    (type (;17;) (struct (field (mut i8)) (field (mut i8)) (field (mut i16))))
    (type (;18;) (func (param i32 nullref) (result f32 i32 (ref null 15))))
    (type (;19;) (sub (array (mut nullref))))
    (type (;20;) (sub 3 (func (result f64))))
    (type (;21;) (array (mut i16)))
    (type (;22;) (sub (struct (field (mut eqref)) (field (mut i8)) (field (mut i16)) (field i64) (field (mut i8)) (field i8) (field i8) (field (mut i16)) (field (mut i8)))))
    (type (;23;) (sub (array (mut f64))))
    (type (;24;) (sub (func)))
    (type (;25;) (struct (field (mut i16)) (field (mut funcref)) (field (mut i8)) (field i16) (field i64) (field i8)))
    (type (;26;) (array (mut (ref null 17))))
    (type (;27;) (struct (field i8)))
    (type (;28;) (struct (field i32) (field i8) (field i32) (field (mut i16)) (field i8) (field (mut i64)) (field i16) (field (mut i8)) (field i16) (field i16) (field (mut f64)) (field i8) (field i8) (field (mut i8)) (field (mut f32)) (field (mut f64))))
    (type (;29;) (sub (func (result arrayref))))
    (type (;30;) (sub (struct (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field i8))))
    (type (;31;) (sub (func)))
    (type (;32;) (sub (func (param nullfuncref f32 (ref null 16) i64))))
    (type (;33;) (array i16))
    (type (;34;) (sub (struct (field (mut nullfuncref)) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field eqref) (field i8) (field (mut f32)) (field (mut (ref null 22))) (field (mut i8)) (field i16) (field (mut f64)) (field i64) (field i16) (field i16) (field i32) (field f32) (field (mut i16)) (field (mut i16)))))
    (type (;35;) (struct (field (mut i8)) (field i16) (field (mut i32)) (field i8)))
    (type (;36;) (sub (array i8)))
    (type (;37;) (sub (struct (field (mut i8)) (field (mut i8)) (field (mut i8)) (field structref) (field (mut i16)))))
    (type (;38;) (struct (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field (mut i8)) (field i16) (field f64) (field f32) (field f32) (field f32) (field i8) (field f32) (field (mut i8))))
    (type (;39;) (struct (field i16) (field i8) (field (mut f64)) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i16)))
    (type (;40;) (sub (struct (field (mut i32)) (field f32) (field f64) (field i8) (field (mut f32)) (field (mut i64)) (field i16) (field i64) (field i16) (field (mut i8)))))
    (type (;41;) (struct (field (mut i16)) (field (mut i32)) (field (mut i31ref))))
  )
  (import "\u{2}l" "" (func (;0;) (type 0)))
  (table (;0;) 8344 nullexternref ref.null noextern)
  (tag (;0;) (type 0) (param f32 f32 i64 i64))
  (tag (;1;) (type 0) (param f32 f32 i64 i64))
  (tag (;2;) (type 31))
  (func (;1;) (type 2) (result i64)
    struct.new_default 9
    ref.cast (ref 9)
    i64.const -4043143459131805263
    i32.wrap_i64
    table.get 0
    try_table (result f32) ;; label = @1
      try_table (type 1) ;; label = @2
        table.size 0
        br_table 0 (;@2;) 0 (;@2;)
        ref.null 22
        block ;; label = @3
          return_call 1
          i64.ctz
          f64.reinterpret_i64
          f64.sqrt
          f64.nearest
          loop ;; label = @4
            f64.const -nan:0xfffffffc00000 (;=NaN;)
            i64.trunc_sat_f64_u
            i64.clz
            struct.new_default 27
            ref.test (ref none)
            data.drop 0
            f32.convert_i32_s
            i32.trunc_f32_u
            i32.extend8_s
            nop
            block (type 20) (result f64) ;; label = @5
              f64.const -0x1.796ffcc801471p-998 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005503885018321325;)
              f64.sqrt
              i64.reinterpret_f64
              i64.clz
              f64.const 0x1.15e7bdfc1f655p-902 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003210707079201255;)
              block (type 24) ;; label = @6
                br 4 (;@2;)
                struct.new 11
                table.size 0
                i32.ctz
                try_table (type 20) (result f64) (catch_all 0 (;@6;)) (catch_all 3 (;@3;)) (catch_all 3 (;@3;)) (catch 2 3 (;@3;)) (catch_all 2 (;@4;)) (catch_all 2 (;@4;)) (catch_all 3 (;@3;)) (catch 2 0 (;@6;)) (catch_all 4 (;@2;)) ;; label = @7
                  loop (result (ref null 30)) ;; label = @8
                    f32.const -nan:0x7f8000 (;=NaN;)
                    br 5 (;@3;)
                    i32.const 2139095039
                    i32.const 524287
                    i32.ge_s
                    i64.extend_i32_s
                    i64.const -67108865
                    i64.sub
                    i64.extend32_s
                    br 5 (;@3;)
                    f32.convert_i64_s
                    f32.lt
                    i32.const 8192
                    br 6 (;@2;)
                    i32.shr_u
                    br_table 0 (;@8;) 2 (;@6;) 4 (;@4;) 5 (;@3;) 6 (;@2;) 5 (;@3;)
                    data.drop 0
                    ref.null 35
                    loop ;; label = @9
                      try_table (type 20) (result f64) (catch 2 0 (;@9;)) (catch_all 1 (;@8;)) (catch 2 1 (;@8;)) (catch 2 3 (;@6;)) (catch_all 7 (;@2;)) (catch 2 6 (;@3;)) (catch_all 5 (;@4;)) (catch_all 6 (;@3;)) ;; label = @10
                        loop (type 1) ;; label = @11
                          struct.new_default 15
                          block (type 1) ;; label = @12
                            loop (type 24) ;; label = @13
                              ref.null 28
                              block (type 3) (result f64) ;; label = @14
                                loop ;; label = @15
                                end
                                table.size 0
                                f64.convert_i32_u
                                return_call 1
                                ref.null 9
                                call 1
                                i64.eqz
                                br_if 8 (;@6;)
                                ref.test (ref 9)
                                f64.convert_i32_u
                                struct.new_default 37
                                i64.const 268435455
                                return_call 1
                                ref.null 10
                                try_table (type 20) (result f64) ;; label = @15
                                  nop
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;2;) (type 1))
  (func (;3;) (type 13) (param f64 f32) (result i32 i64)
    unreachable
  )
  (data (;0;) "")
)
