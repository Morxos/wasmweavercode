(module
  (rec
    (type (;0;) (func (param i64)))
    (type (;1;) (sub (struct (field f64) (field i8) (field f64) (field (mut i8)) (field i8) (field f64) (field i8) (field (mut i8)) (field i8))))
    (type (;2;) (struct (field (mut i64)) (field i8) (field (mut externref)) (field (mut f64)) (field i8) (field (mut f32)) (field i16) (field (mut i16)) (field (mut f64)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut f32)) (field f32) (field (mut i16)) (field i64)))
    (type (;3;) (sub (func (param i32) (result i64 f32))))
    (type (;4;) (struct (field i8) (field (mut i8)) (field i8) (field i32)))
    (type (;5;) (struct (field f32) (field i16) (field i32) (field (mut i32)) (field i8) (field i16) (field (mut f64)) (field i64)))
    (type (;6;) (sub (array i64)))
    (type (;7;) (array (mut i64)))
    (type (;8;) (sub (array i16)))
    (type (;9;) (func (param i64)))
    (type (;10;) (sub (struct (field f64) (field i16) (field i8) (field anyref) (field i8) (field i8) (field i8) (field i8) (field (mut i16)) (field i16))))
    (type (;11;) (struct (field i8) (field (mut i16)) (field i16) (field (mut nullfuncref)) (field (mut i8)) (field (mut nullfuncref)) (field i8) (field (mut i64)) (field f32) (field i32) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i16) (field i32) (field (mut i16))))
    (type (;12;) (sub (array i64)))
    (type (;13;) (sub (func (result i64 i64))))
    (type (;14;) (sub (struct (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)) (field f64) (field i32) (field (mut i16)) (field (mut i8)))))
    (type (;15;) (array (mut i16)))
    (type (;16;) (sub (struct (field (mut i16)) (field (mut i8)))))
    (type (;17;) (sub (func (param funcref f32 externref) (result f64 eqref arrayref))))
    (type (;18;) (sub (func (param i32 i31ref))))
    (type (;19;) (array i16))
    (type (;20;) (array (mut f64)))
    (type (;21;) (sub (array (mut f64))))
    (type (;22;) (struct))
    (type (;23;) (sub (array i8)))
    (type (;24;) (array (mut i64)))
    (type (;25;) (sub (struct (field i8) (field (mut i16)) (field (mut i8)))))
    (type (;26;) (sub (struct (field f64) (field i16) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field i16) (field i8))))
    (type (;27;) (struct (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field i16)))
    (type (;28;) (array (mut i16)))
    (type (;29;) (func))
    (type (;30;) (sub (struct (field (mut i8)) (field i8) (field (mut i16)) (field f64) (field i8) (field (mut i32)) (field i16) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field f64) (field i8) (field (mut f32)) (field i8))))
    (type (;31;) (sub (array (mut f64))))
    (type (;32;) (func (result f64)))
    (type (;33;) (sub (func (param i32 f64) (result f32 f32))))
    (type (;34;) (sub (array (mut i16))))
    (type (;35;) (array i16))
    (type (;36;) (struct (field (mut i8)) (field i8) (field (mut i16)) (field (mut i32)) (field i8) (field i16) (field i8) (field (mut i16)) (field (mut i8)) (field f64)))
    (type (;37;) (sub (func (param i32) (result f32 f64))))
    (type (;38;) (sub (array (mut f32))))
    (type (;39;) (func (param i64 i32 f32 f32)))
    (type (;40;) (sub (struct (field i16))))
    (type (;41;) (sub (struct (field (mut i16)) (field i8) (field i16) (field i8) (field (mut f64)) (field i8) (field i8))))
    (type (;42;) (sub final 33 (func (param i32 f64) (result f32 f32))))
    (type (;43;) (func))
    (type (;44;) (func (param f64 i64)))
    (type (;45;) (sub (array i8)))
    (type (;46;) (sub (struct (field i8) (field (mut i16)) (field i8) (field (ref null 22)) (field i16) (field i16) (field (mut i8)))))
    (type (;47;) (array (mut i16)))
    (type (;48;) (struct (field (mut f32)) (field (mut i8))))
    (type (;49;) (sub (array i8)))
    (type (;50;) (func (param i64 externref f32 i32) (result i64 i64 i32 externref i32 i64)))
    (type (;51;) (array f64))
    (type (;52;) (sub (array i8)))
    (type (;53;) (sub (struct (field (mut i16)) (field (mut i16)))))
    (type (;54;) (array i8))
    (type (;55;) (func (param anyref) (result f32)))
    (type (;56;) (array (mut f64)))
    (type (;57;) (struct (field i8) (field i8) (field exnref) (field i32) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field i32) (field i16) (field (mut i8)) (field i16) (field i8)))
    (type (;58;) (array (mut arrayref)))
    (type (;59;) (struct))
    (type (;60;) (array i16))
    (type (;61;) (array i16))
    (type (;62;) (sub (array i8)))
    (type (;63;) (sub final 8 (array i16)))
    (type (;64;) (func (result f64)))
    (type (;65;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i16) (field i32) (field (mut i16)) (field (ref null 26)))))
    (type (;66;) (struct (field (mut i8)) (field i16) (field (mut i64)) (field i64) (field (mut (ref null 30))) (field (mut i16)) (field (mut i32)) (field i8) (field (mut i16))))
    (type (;67;) (struct (field i16) (field f64) (field (mut f64)) (field (mut i8)) (field (mut i64)) (field i16) (field i16) (field i8) (field i8)))
    (type (;68;) (struct (field (mut i8)) (field (mut (ref null 51)))))
    (type (;69;) (sub (func)))
    (type (;70;) (sub (func (param f64 i32 (ref null 27)))))
    (type (;71;) (func (result f32 f32)))
    (type (;72;) (array i16))
    (type (;73;) (array (mut i8)))
    (type (;74;) (array i8))
    (type (;75;) (array (mut i16)))
    (type (;76;) (sub (struct (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field i64) (field i8))))
    (type (;77;) (sub (func (result externref i32 (ref null 45)))))
    (type (;78;) (sub (struct (field i64) (field (mut i8)) (field i16))))
    (type (;79;) (sub (func (param i32 nullfuncref f64) (result i32))))
    (type (;80;) (func (result i31ref)))
    (type (;81;) (func (param f32 i32)))
    (type (;82;) (sub (func (result f64 anyref))))
    (type (;83;) (sub (func)))
    (type (;84;) (array i64))
    (type (;85;) (sub (struct (field i8))))
  )
  (rec)
  (func (;0;) (type 0) (param i64))
)
