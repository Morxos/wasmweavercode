(module
  (rec
    (type (;0;) (func (param f64)))
    (type (;1;) (array i8))
    (type (;2;) (sub (func)))
    (type (;3;) (sub (func (result nullref externref f64))))
    (type (;4;) (sub (array i16)))
    (type (;5;) (sub (struct (field i16) (field i8) (field f64) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field i8) (field f64) (field i32) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut i8)))))
    (type (;6;) (sub (func (param f32 i32) (result structref f32))))
    (type (;7;) (sub (array i8)))
    (type (;8;) (struct (field i32) (field i16) (field (mut i32)) (field i16) (field f32) (field i16) (field (mut i32)) (field i16) (field (mut i8)) (field i8)))
    (type (;9;) (sub (array (mut i16))))
    (type (;10;) (sub (func (param f64) (result anyref))))
    (type (;11;) (func (result i64 f64)))
    (type (;12;) (struct))
    (type (;13;) (func (param f64 exnref)))
    (type (;14;) (sub (array (mut i64))))
    (type (;15;) (sub (array i8)))
    (type (;16;) (func (param f64 i32)))
    (type (;17;) (array (mut f32)))
    (type (;18;) (struct (field f64) (field (mut nullref)) (field (mut f64)) (field (mut i32)) (field (mut i8)) (field i16) (field i16) (field i32) (field i16)))
    (type (;19;) (struct (field i16) (field (mut i16)) (field f32) (field i8) (field (mut i8)) (field (mut i32)) (field i16) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i32)) (field i16) (field (mut i8)) (field (mut i8)) (field i16)))
    (type (;20;) (func (param i64 f64) (result i32)))
    (type (;21;) (sub (struct (field f64) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field i64) (field i16) (field (mut f32)) (field (mut f64)) (field (mut i8)) (field i8) (field (mut i8)) (field i16) (field i32))))
    (type (;22;) (sub final 10 (func (param f64) (result (ref null 15)))))
    (type (;23;) (sub (array i8)))
    (type (;24;) (array i16))
    (type (;25;) (sub (array i16)))
    (type (;26;) (sub (array (mut i8))))
    (type (;27;) (sub (array f32)))
    (type (;28;) (struct (field i16) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field i8) (field (mut i16)) (field i16) (field i16) (field i64) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field i8) (field (mut i16)) (field (mut f64))))
    (type (;29;) (struct (field (mut i8))))
    (type (;30;) (sub (struct (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field i16) (field i8) (field funcref) (field (mut i64)) (field (mut i16)) (field i32) (field (mut i16)) (field (mut i16)) (field f64) (field (mut i8)) (field i8))))
    (type (;31;) (sub (func (param i32 i32) (result f32 i64))))
    (type (;32;) (sub (array (mut eqref))))
    (type (;33;) (struct (field f64) (field i8) (field i8) (field (mut i8)) (field i16) (field i16) (field (mut i8)) (field i16) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field i8) (field (mut i16)) (field f32)))
    (type (;34;) (func))
    (type (;35;) (sub (func (param i31ref))))
    (type (;36;) (sub (func (param eqref) (result i64 f64))))
    (type (;37;) (sub (struct (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field f32) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16))))
    (type (;38;) (sub (struct (field i8) (field i8) (field i16) (field (mut i8)) (field (mut i64)) (field (mut f32)) (field (mut i16)) (field i16) (field (mut i16)) (field i64) (field (mut i16)) (field (mut f64)) (field (mut i64)) (field i32))))
    (type (;39;) (array (mut i8)))
    (type (;40;) (array i16))
    (type (;41;) (func))
    (type (;42;) (sub (struct (field i8))))
    (type (;43;) (sub (func (param f64))))
    (type (;44;) (sub (func (result f32))))
    (type (;45;) (sub (array (mut i16))))
    (type (;46;) (sub (func (param i64))))
    (type (;47;) (func (param (ref null 36) (ref null 3) i32)))
    (type (;48;) (func (param f64 i32 f32)))
    (type (;49;) (sub (func (param i31ref) (result f32 f64))))
    (type (;50;) (sub (array (mut i16))))
    (type (;51;) (sub (struct (field i8) (field i16) (field i16) (field (mut nullexternref)) (field i8) (field i8) (field i8) (field (mut i64)))))
    (type (;52;) (sub 42 (struct (field i8) (field (mut i32)) (field i8) (field i16) (field (mut f32)) (field i8))))
    (type (;53;) (sub (func)))
    (type (;54;) (sub (array (mut i32))))
    (type (;55;) (sub (array (mut i16))))
    (type (;56;) (sub (func (param f32) (result i64))))
    (type (;57;) (struct (field (mut i8)) (field i32) (field i16)))
    (type (;58;) (array f32))
    (type (;59;) (sub (array i8)))
    (type (;60;) (func (param i64 i64) (result i31ref)))
    (type (;61;) (sub (array i8)))
    (type (;62;) (struct (field (mut i64)) (field i8) (field i16)))
    (type (;63;) (sub (struct (field f32) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field i8) (field f64) (field i8) (field i16) (field (mut i8)) (field f32) (field i8) (field i32) (field (mut i8)) (field i16) (field (mut i16)) (field i32) (field f32) (field f64))))
    (type (;64;) (sub (func (param i32))))
    (type (;65;) (struct (field (mut i8)) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field f64) (field (mut i8)) (field (mut f64)) (field (mut f32)) (field (mut i64))))
    (type (;66;) (func (param f32 f64) (result f64 eqref (ref null 39) f32)))
    (type (;67;) (sub (func (result f64))))
    (type (;68;) (sub (array (ref null 33))))
    (type (;69;) (func))
    (type (;70;) (array f32))
    (type (;71;) (sub (array i8)))
  )
  (global (;0;) (mut f32) f32.const -0x1.dc2cd6p+70 (;=-2195970200000000000000;))
  (export "r\u{b}" (func 0))
  (elem (;0;) (ref null 29) (ref.null 29))
  (elem (;1;) nullfuncref)
  (func (;0;) (type 6) (param f32 i32) (result structref f32)
    block (type 44) (result f32) ;; label = @1
      struct.new 12
      ref.as_non_null
      global.get 0
      f32.nearest
      ref.null 15
      try_table (type 11) (result i64 f64) ;; label = @2
        struct.new_default 52
        i64.const -4096
        f64.convert_i64_u
        i32.trunc_sat_f64_s
        i64.extend_i32_u
        local.get 0
        f32.neg
        f32.nearest
        br 1 (;@1;)
        block ;; label = @3
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
