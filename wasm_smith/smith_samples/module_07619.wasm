(module
  (rec
    (type (;0;) (sub (array i16)))
    (type (;1;) (sub (func)))
    (type (;2;) (array (mut i8)))
    (type (;3;) (array i32))
    (type (;4;) (sub (func (param externref) (result i32))))
    (type (;5;) (sub (array (mut i64))))
    (type (;6;) (sub (func (result structref i64))))
    (type (;7;) (array i16))
    (type (;8;) (array (mut i8)))
    (type (;9;) (struct (field (mut i16)) (field (mut i32)) (field f64) (field (mut i16)) (field (mut i16)) (field nullfuncref) (field (mut i8)) (field (mut i8)) (field f32) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i32) (field i8) (field (mut i32)) (field (mut i16)) (field (mut i8)) (field i16) (field i16)))
    (type (;10;) (sub (func (param arrayref) (result nullfuncref))))
    (type (;11;) (func (param i32) (result f64 eqref)))
    (type (;12;) (sub (func)))
    (type (;13;) (sub (func (param f64 i64) (result f32))))
    (type (;14;) (sub (struct (field i16) (field (mut f64)) (field i8) (field (mut i64)) (field i8) (field i16) (field i8) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field i64) (field (mut i8)) (field i64) (field i64) (field f64) (field (mut i64)) (field f32) (field f64))))
    (type (;15;) (sub (func (param i64) (result f64))))
    (type (;16;) (sub (struct (field f32) (field (mut i16)) (field i8) (field (mut i64)) (field (mut anyref)) (field (mut i16)) (field f64) (field i16) (field i16) (field i8) (field f32))))
    (type (;17;) (sub (func)))
    (type (;18;) (sub final 4 (func (param externref) (result i32))))
    (type (;19;) (sub (struct (field i64) (field (mut i8)) (field i32))))
    (type (;20;) (array (mut i16)))
    (type (;21;) (sub (func)))
    (type (;22;) (sub (struct (field i16) (field (mut f32)) (field (mut i32)) (field (mut i16)) (field (mut i16)))))
    (type (;23;) (func (param f64)))
    (type (;24;) (sub (func (result f32))))
    (type (;25;) (array i16))
    (type (;26;) (struct (field i16) (field i8) (field (mut f64)) (field f64) (field (ref null 12)) (field i16) (field i8) (field i8) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field (ref null 10)) (field i8) (field (mut f32)) (field (mut i32)) (field (mut nullref))))
    (type (;27;) (sub (array (mut i16))))
    (type (;28;) (struct (field (mut i16)) (field f32) (field (mut f32)) (field (mut i16)) (field i8) (field (mut i64)) (field (mut i16)) (field i32) (field (mut i16)) (field (mut i16)) (field i32)))
    (type (;29;) (sub 10 (func (param arrayref) (result nullfuncref))))
    (type (;30;) (sub (array f64)))
    (type (;31;) (sub (array (mut i16))))
    (type (;32;) (sub (struct (field f64) (field i8) (field (mut i16)) (field (mut f64)) (field (mut i32)) (field i16) (field i16) (field (mut i8)) (field i8) (field (mut f64)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field anyref) (field i8) (field f64) (field (mut i8)) (field (mut f64)) (field (mut i16)))))
    (type (;33;) (struct (field (mut i8)) (field i16) (field f32) (field (mut i8)) (field f64) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field f64) (field (mut i16)) (field (mut i16)) (field i8) (field f64) (field i16) (field (mut i8))))
  )
  (import "" "w\u{25e}^" (tag (;0;) (type 1)))
  (table (;0;) i64 37 548290 nullfuncref ref.null nofunc)
  (export "" (func 0))
  (elem (;0;) (table 0) (i64.const 7) nullfuncref (ref.null nofunc) (ref.null nofunc))
  (func (;0;) (type 29) (param arrayref) (result nullfuncref)
    (local i64)
    i32.const -1431655766
    f64.const 0x1.8025f7db48e41p+715 (;=258646058751967170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
    i64.trunc_f64_u
    try_table (type 21) ;; label = @1
      loop (result (ref null 24)) ;; label = @2
        ref.null 19
        extern.convert_any
        ref.is_null
        f32.convert_i32_u
        elem.drop 0
        struct.new_default 14
        f64.const 0x1.be730c9b45a1dp+958 (;=4248818067847139600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
        throw 0
        i64.trunc_sat_f64_s
        local.tee 1
        loop (type 1) ;; label = @3
          ref.null 30
          loop (type 1) ;; label = @4
            f64.const 0x1.fffep-1059 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000323786;)
            f32.demote_f64
            try_table (type 17) (catch 0 2 (;@2;)) (catch 0 2 (;@2;)) (catch_all 0 (;@4;)) (catch_all 3 (;@1;)) (catch 0 1 (;@3;)) (catch_all 1 (;@3;)) (catch 0 3 (;@1;)) (catch 0 1 (;@3;)) ;; label = @5
              ref.null exn
              ref.null i31
              table.size 0
              i64.extend16_s
              local.get 0
              br 3 (;@2;)
              f32.const -0x1.01f192p+48 (;=-283612020000000;)
              i64.trunc_f32_u
              i64.extend16_s
              block (type 21) ;; label = @6
                loop (type 17) ;; label = @7
                  f64.const -0x1.64bbc4cdd4261p-924 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009826252088464264;)
                  ref.null i31
                  loop (type 24) (result f32) ;; label = @8
                    ref.null 14
                    ref.test nullref
                    br_if 0 (;@8;)
                    local.get 0
                    local.set 0
                    ref.null func
                    elem.drop 0
                    table.size 0
                    local.set 1
                    ref.null extern
                    block (type 18) (param externref) (result i32) ;; label = @9
                      ref.test (ref noextern)
                      local.get 1
                      f64.convert_i64_u
                      i64.trunc_f64_s
                      elem.drop 0
                      f64.convert_i64_u
                      i64.const 137438953472
                      i64.popcnt
                      local.set 1
                      f64.const 0x1.5555555555555p+342 (;=11945305291614955000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                      f64.le
                      i32.popcnt
                      elem.drop 0
                      i32.lt_s
                      if (type 12) ;; label = @10
                        elem.drop 0
                        i32.const -867886403
                        table.size 0
                        i64.ctz
                        br 2 (;@8;)
                        f64.reinterpret_i64
                        i64.trunc_f64_s
                        i64.extend8_s
                        table.size 0
                        try_table (type 21) (catch 0 6 (;@4;)) (catch 0 3 (;@7;)) (catch 0 6 (;@4;)) ;; label = @11
                          f32.const -0x1.a2401ep+23 (;=-13705231;)
                          loop (type 17) ;; label = @12
                            br 11 (;@1;)
                            try_table (type 17) (catch 0 5 (;@7;)) (catch 0 7 (;@5;)) (catch_all 1 (;@11;)) (catch 0 9 (;@3;)) (catch 0 0 (;@12;)) (catch_all 2 (;@10;)) (catch 0 5 (;@7;)) (catch 0 11 (;@1;)) ;; label = @13
                              i32.const -16384
                              i64.extend_i32_s
                              i64.ctz
                              i64.eqz
                              array.new_fixed 2 0
                              block (result nullfuncref) ;; label = @14
                                f64.const 0x1p-1019 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017800590868057611;)
                                ref.null 15
                                ref.cast (ref nofunc)
                                loop (type 12) ;; label = @15
                                  i32.const 255
                                  f32.const 0x1.79e9d4p+0 (;=1.4762242;)
                                  f32.abs
                                  i32.trunc_f32_u
                                  loop (type 12) ;; label = @16
                                    local.get 1
                                    f64.convert_i64_u
                                    try_table (type 17) (catch_all 13 (;@3;)) (catch 0 10 (;@6;)) (catch 0 1 (;@15;)) (catch 0 9 (;@7;)) (catch 0 14 (;@2;)) ;; label = @17
                                    end
                                    i32.trunc_f64_u
                                    table.size 0
                                    br 8 (;@8;)
                                    i64.ctz
                                    f32.const nan:0x7fffff (;=NaN;)
                                    try_table (type 6) (result structref i64) (catch_all 3 (;@13;)) (catch_all 0 (;@16;)) (catch 0 14 (;@2;)) (catch_all 6 (;@10;)) (catch 0 10 (;@6;)) (catch 0 1 (;@15;)) (catch_all 1 (;@15;)) ;; label = @17
                                      ref.null struct
                                      i64.const 4611686018427387904
                                    end
                                    unreachable
                                  end
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
