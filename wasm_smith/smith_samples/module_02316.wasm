(module
  (rec
    (type (;0;) (sub (func (result f64 f32))))
    (type (;1;) (struct (field i32) (field (mut f64)) (field (mut i16)) (field (mut f64)) (field i8) (field i8) (field (mut i32)) (field i64) (field i8) (field (mut i16)) (field i16) (field exnref) (field (mut i16)) (field (mut f64)) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field f32) (field (mut i8))))
    (type (;2;) (sub (func (param i32 i32 anyref nullexternref f64))))
    (type (;3;) (array f64))
    (type (;4;) (struct (field (mut i32)) (field (mut i16)) (field (mut i32))))
    (type (;5;) (struct (field i32) (field f32) (field i16) (field i16) (field i64) (field f64) (field f64) (field (mut f32)) (field i8) (field i8) (field f64) (field i8) (field (mut f64))))
    (type (;6;) (func (param i64 i32 f64) (result f64 f64 eqref)))
    (type (;7;) (func))
    (type (;8;) (sub (struct (field (mut nullfuncref)))))
    (type (;9;) (struct (field (mut i8)) (field i8) (field (mut i16)) (field (mut arrayref)) (field i8) (field (mut i32)) (field i8) (field i32) (field i16) (field f32) (field (mut f32)) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field (mut i8))))
    (type (;10;) (sub (struct (field f64))))
    (type (;11;) (struct (field i32) (field i8) (field i16) (field f64) (field i8) (field i8) (field i8) (field (mut i64)) (field i8) (field f64) (field i64)))
    (type (;12;) (sub (array (mut i16))))
    (type (;13;) (func (result i64 i64 i31ref i64)))
    (type (;14;) (sub (struct (field i8) (field (mut i16)) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field (mut i32)) (field (mut f64)) (field (mut i8)) (field i8) (field i16) (field (mut i16)) (field (mut i8)))))
    (type (;15;) (struct (field exnref) (field (mut i8)) (field i16) (field (mut i64)) (field i8) (field i16) (field (mut f32)) (field i8) (field i16) (field i8) (field i8) (field (mut i16)) (field i16) (field i8)))
    (type (;16;) (sub (struct (field (mut f64)) (field i16))))
    (type (;17;) (sub (array (mut i8))))
    (type (;18;) (sub final 17 (array (mut i8))))
    (type (;19;) (array (mut i8)))
    (type (;20;) (struct (field (mut i16)) (field i64) (field (mut i16)) (field f64) (field (mut i31ref)) (field (mut i8)) (field i8) (field (mut i8)) (field f64) (field (mut f32)) (field (mut i8)) (field i16) (field i32) (field (mut i8)) (field f64) (field (mut i16)) (field f32) (field (mut i8))))
    (type (;21;) (func (result i32)))
    (type (;22;) (sub (array f64)))
    (type (;23;) (array i8))
    (type (;24;) (struct (field i8) (field i16) (field f32) (field (mut (ref null 7))) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field i16) (field (mut i31ref)) (field i8) (field (mut i16)) (field funcref) (field (mut i64)) (field i16) (field (mut (ref null 11))) (field (mut i16)) (field exnref) (field i8)))
    (type (;25;) (struct (field i8) (field (ref null 12)) (field i8) (field (mut i16)) (field (mut i64)) (field i16) (field exnref) (field f32) (field f32) (field (mut i64)) (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field (mut eqref)) (field i16) (field (mut i16)) (field (mut f32)) (field (mut structref)) (field (mut nullfuncref))))
    (type (;26;) (sub (array (mut i8))))
    (type (;27;) (func (result i64 (ref null 26) (ref null 13))))
    (type (;28;) (sub (func)))
    (type (;29;) (array (mut i16)))
    (type (;30;) (array f64))
    (type (;31;) (func (result f64)))
    (type (;32;) (sub (array (mut i16))))
    (type (;33;) (array i16))
    (type (;34;) (sub (func (param (ref null 11) i64 i64) (result i64))))
    (type (;35;) (func (param f32)))
    (type (;36;) (sub (func (result f32))))
    (type (;37;) (array (mut i64)))
    (type (;38;) (sub (func (param f32) (result f64 f32 f32 (ref null 11) i64 i64))))
    (type (;39;) (sub (array (mut i8))))
    (type (;40;) (struct (field i8) (field i32) (field (mut i32)) (field i8) (field (mut i32)) (field (mut i31ref)) (field i16) (field i64) (field (mut i8)) (field i8) (field (mut f32)) (field i8) (field f32) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i64) (field i8) (field (mut i8))))
    (type (;41;) (sub (array (mut i8))))
    (type (;42;) (array (mut i8)))
    (type (;43;) (sub (func (param f32) (result i64))))
    (type (;44;) (sub (array (mut i32))))
    (type (;45;) (sub (func (result i32 f64))))
    (type (;46;) (array i16))
    (type (;47;) (sub (func (param f32 i64))))
  )
  (tag (;0;) (type 28))
  (global (;0;) i32 i32.const 2056286621)
  (func (;0;) (type 28)
    return_call 0
    global.get 0
    br_if 0
    i32.const -1048576
    i64.extend_i32_u
    ref.null 4
    return_call 0
    try_table (type 27) (result i64 (ref null 26) (ref null 13)) (catch_all 0) (catch_all 0) (catch 0 0) ;; label = @1
      i32.const -381526350
      f64.const 0x1.a5de83d765f7cp-223 (;=0.00000000000000000000000000000000000000000000000000000000000000000012224998660992049;)
      i32.trunc_f64_u
      i32.rem_s
      ref.i31
      global.get 0
      return_call 0
      if (type 7) ;; label = @2
        i32.const -1751668114
        i32.clz
        br_table 0 (;@2;) 2 2
        return_call 0
        try_table (catch 0 2) ;; label = @3
          return_call 0
          ref.null array
          i64.const 6642769479819496390
          i64.clz
          throw 0
          block (type 45) (result i32 f64) ;; label = @4
            br 1 (;@3;)
            f64.const 0x1.d6e52857c22fbp+100 (;=2331759826275881200000000000000;)
            i64.trunc_sat_f64_s
            f64.convert_i64_u
            f64.nearest
            global.get 0
            i32.eqz
            i32.eqz
            array.new 30
            br 2 (;@2;)
            loop (type 0) (result f64 f32) ;; label = @5
              f64.const -nan:0xfe00000000000 (;=NaN;)
              f32.const 0x1.9f165p+105 (;=65773186000000000000000000000000;)
              i32.trunc_sat_f32_s
              i32.clz
              i32.extend8_s
              f32.reinterpret_i32
              block (type 45) (result i32 f64) ;; label = @6
                ref.null extern
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 6) (param i64 i32 f64) (result f64 f64 eqref)
    unreachable
  )
  (func (;2;) (type 43) (param f32) (result i64)
    unreachable
  )
)
