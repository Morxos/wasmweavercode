(module
  (rec
    (type (;0;) (func (param anyref i64 nullexternref i64 nullref i64) (result f64 i31ref i32)))
    (type (;1;) (array (mut i16)))
    (type (;2;) (sub (func (result i64 exnref))))
    (type (;3;) (array (mut i16)))
    (type (;4;) (sub (array (mut i8))))
    (type (;5;) (array (mut i8)))
    (type (;6;) (sub (func (result i64))))
    (type (;7;) (sub (struct (field i8) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut funcref)) (field (mut f32)) (field (mut i16)) (field (mut i64)) (field i16) (field (mut i8)) (field i16) (field i64) (field f32) (field i8))))
    (type (;8;) (sub (array (mut i32))))
    (type (;9;) (func (param i64 f64 f32)))
    (type (;10;) (sub (func (param f64 f64 i32) (result f64))))
    (type (;11;) (struct (field (mut i8)) (field f32) (field f64) (field (mut (ref null 1))) (field i8) (field i16) (field (mut externref)) (field (mut arrayref)) (field (mut i16)) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field (mut i8))))
    (type (;12;) (func (result f32)))
    (type (;13;) (func))
    (type (;14;) (sub (struct (field (mut f32)) (field (mut i8)) (field i8))))
    (type (;15;) (sub (func (param f64 i32 i32))))
    (type (;16;) (func))
    (type (;17;) (sub (array i16)))
    (type (;18;) (array i8))
    (type (;19;) (array (mut f64)))
    (type (;20;) (sub (func (param f32) (result f32 f64 i32 f32))))
    (type (;21;) (array i32))
    (type (;22;) (func (param i32 i32 i32 i32)))
    (type (;23;) (array (mut i16)))
    (type (;24;) (func))
    (type (;25;) (array (mut i16)))
    (type (;26;) (sub (func (param f32 i64))))
    (type (;27;) (func (result f32 i32)))
    (type (;28;) (sub (func (param f64) (result i32))))
    (type (;29;) (struct (field (mut f64)) (field i16) (field i16) (field f32) (field i16) (field f64) (field (mut (ref null 16))) (field i8) (field (mut i8)) (field i8) (field (mut i64)) (field (mut i8)) (field (mut i16))))
    (type (;30;) (func (param anyref f32 (ref null 9) f32 f32) (result i32 i64)))
    (type (;31;) (array i16))
    (type (;32;) (sub (func (result i64 f32 f32 i64))))
    (type (;33;) (sub (func (result nullfuncref))))
    (type (;34;) (sub (struct (field i8) (field i8) (field i8) (field i16) (field (mut i8)) (field i64) (field (mut i16)) (field (mut i64)) (field i8) (field (mut i8)) (field i16) (field i8) (field (mut f64)) (field i8) (field (mut i8)) (field (mut f32)) (field (mut i64)))))
    (type (;35;) (struct (field (mut f64)) (field i8) (field (mut i64))))
    (type (;36;) (sub (func (result i64))))
    (type (;37;) (sub (struct (field i32) (field (mut f64)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field i16) (field i64) (field i64) (field (mut (ref null 15))) (field f32) (field f32) (field i8) (field (mut i16)))))
    (type (;38;) (sub 17 (array i16)))
    (type (;39;) (struct (field (mut i8)) (field i8) (field i64) (field i8) (field (mut i8)) (field (mut i16)) (field i32) (field i16) (field i16) (field (mut f32)) (field (mut f64)) (field i16) (field (mut i8)) (field i8) (field (mut i32)) (field (mut i16)) (field i8) (field (ref null 20)) (field (mut f64))))
    (type (;40;) (sub (array (mut i16))))
    (type (;41;) (struct (field (mut i8)) (field i16) (field i16) (field (mut i8)) (field (mut i32)) (field i16) (field i8) (field (mut i8)) (field (mut i64)) (field (mut i32)) (field (mut i32)) (field i8)))
    (type (;42;) (array (mut i8)))
  )
  (rec
    (type (;43;) (struct (field i8) (field (mut f64)) (field (mut i8)) (field (mut (ref null 40))) (field i16) (field (mut f32)) (field i8)))
    (type (;44;) (sub (func (result i32 i32))))
    (type (;45;) (array f64))
    (type (;46;) (array i16))
    (type (;47;) (sub final 26 (func (param f32 i64))))
    (type (;48;) (array (mut i64)))
    (type (;49;) (struct (field (mut i32)) (field (mut i64)) (field i8) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field i8)))
    (type (;50;) (func (param anyref)))
    (type (;51;) (sub (func (param i64))))
    (type (;52;) (sub (func (param i32) (result (ref null 38)))))
  )
  (rec
    (type (;53;) (sub (array (mut f64))))
    (type (;54;) (sub (func)))
    (type (;55;) (sub (struct)))
    (type (;56;) (struct (field f64) (field (mut i8)) (field i64) (field i16) (field (mut nullref))))
    (type (;57;) (struct (field i8) (field i8) (field i32) (field (mut i16)) (field i16) (field i32) (field i16) (field i8) (field i64) (field arrayref) (field i8) (field i8) (field f64) (field i16) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut f32))))
    (type (;58;) (array (mut (ref null 27))))
    (type (;59;) (sub (func (param funcref) (result i64))))
    (type (;60;) (struct (field (mut i8)) (field i16) (field (mut i16)) (field i32) (field (mut i16)) (field (mut funcref)) (field i8)))
  )
  (import "" "" (memory (;0;) 2752))
  (import "" "" (global (;0;) (ref null 27)))
  (tag (;0;) (type 24))
  (tag (;1;) (type 26) (param f32 i64))
  (tag (;2;) (type 51) (param i64))
  (global (;1;) i32 i32.const 1842377712 i32.const 1788026866 i32.const 2082877472 i32.add i32.mul)
  (global (;2;) (mut (ref null 12)) ref.null 12)
  (global (;3;) (mut exnref) ref.null exn)
  (global (;4;) (mut i64) i64.const 1102617355839399392)
  (elem (;0;) externref)
  (func (;0;) (type 0) (param anyref i64 nullexternref i64 nullref i64) (result f64 i31ref i32)
    global.get 1
    i64.load16_u offset=106160251
    loop (type 51) (param i64) ;; label = @1
      throw 0
      i64.extend8_s
      f32.convert_i64_s
      f32.ceil
      f32.sqrt
      f64.const -0x1.cb3331e7f52acp-482 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014364945590309234;)
      memory.size
      f32.load offset=2743936086 align=2
      ref.null 30
      try_table (type 36) (result i64) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) ;; label = @2
        ref.null 46
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 33) (result nullfuncref)
    unreachable
  )
  (data (;0;) (global.get 1) "\0b")
)
