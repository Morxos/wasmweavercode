(module
  (rec
    (type (;0;) (array i8))
    (type (;1;) (sub (struct (field (mut i8)) (field (mut i16)))))
    (type (;2;) (sub (array i16)))
    (type (;3;) (sub (struct (field (mut i8)) (field i16) (field i32) (field (mut i8)) (field f64))))
    (type (;4;) (sub (array (mut i16))))
    (type (;5;) (sub (array i8)))
  )
  (rec
    (type (;6;) (sub (struct (field i8) (field i8) (field f32) (field (mut i8)) (field i64) (field i16) (field (mut i8)))))
    (type (;7;) (sub (array (mut i16))))
    (type (;8;) (struct (field (mut f64))))
    (type (;9;) (sub (array i16)))
    (type (;10;) (sub (array (mut f64))))
    (type (;11;) (sub (array (mut f64))))
    (type (;12;) (sub (array i16)))
    (type (;13;) (sub (struct (field (mut i64)) (field (mut i16)) (field i32) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field i16) (field (mut i8)) (field funcref) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i32)))))
    (type (;14;) (array nullref))
    (type (;15;) (sub (array i32)))
    (type (;16;) (sub final 10 (array (mut f64))))
    (type (;17;) (sub (struct)))
    (type (;18;) (func))
    (type (;19;) (sub (struct (field (mut i16)) (field i16) (field i16) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field i16) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i16) (field i16))))
    (type (;20;) (sub (func (param f64 i32))))
    (type (;21;) (sub (array (mut i32))))
    (type (;22;) (func (result f64 i64)))
    (type (;23;) (sub (array i16)))
    (type (;24;) (sub (struct (field (mut (ref null 12))) (field (mut i8)) (field i8))))
    (type (;25;) (struct (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field i32) (field i16) (field i8) (field (mut i16))))
    (type (;26;) (sub (struct (field (mut i16)) (field (mut i16)) (field i32) (field funcref))))
    (type (;27;) (sub (func (param i32 i64 externref i32 i64 f32 i64 i32 (ref null 10)))))
    (type (;28;) (sub (array i8)))
    (type (;29;) (array (mut i8)))
    (type (;30;) (sub (array (mut i8))))
    (type (;31;) (sub (struct (field i16) (field (mut i32)) (field (mut i32)) (field i16) (field f64))))
    (type (;32;) (struct (field f64) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i64)) (field (mut (ref null 18))) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field i8) (field i16) (field i8) (field (mut i32)) (field (ref null 18)) (field f32) (field (mut i16)) (field i8) (field i16)))
    (type (;33;) (sub (func (param eqref))))
    (type (;34;) (struct (field (mut anyref)) (field i16) (field i8) (field (mut f32)) (field i16) (field f64) (field (mut i64)) (field i8) (field i8) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i32)) (field (mut i64)) (field (mut (ref null 26))) (field i8) (field (mut f32)) (field (mut arrayref))))
    (type (;35;) (sub (struct (field i8) (field i16) (field (mut i16)) (field (mut f64)) (field i8) (field i16))))
    (type (;36;) (sub (struct (field i8) (field (mut i16)) (field (mut f64)))))
    (type (;37;) (array (mut f64)))
    (type (;38;) (sub (array i16)))
    (type (;39;) (array i16))
    (type (;40;) (array (mut f32)))
    (type (;41;) (struct (field i16) (field i16) (field (mut i8))))
    (type (;42;) (sub (array i64)))
    (type (;43;) (struct (field (ref null 2)) (field i32) (field (mut i16)) (field (mut i64)) (field eqref) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i8)) (field i16) (field i8)))
    (type (;44;) (func (param i32 f64)))
  )
  (import "" "" (global (;0;) (mut (ref null 26))))
  (import "f" "" (table (;0;) i64 26 (ref null 32)))
  (export "" (global 0))
  (func (;0;) (type 27) (param i32 i64 externref i32 i64 f32 i64 i32 (ref null 10))
    (local nullfuncref i32 i32)
    f32.const 0x1.fffff8p-128 (;=0.00000000000000000000000000000000000000587747;)
    i64.trunc_f32_u
    block (type 22) (result f64 i64) ;; label = @1
      struct.new_default 13
      table.size 0
      local.get 8
      ref.null eq
      block (type 22) (result f64 i64) ;; label = @2
        i64.const 134217727
        i64.popcnt
        table.size 0
        local.tee 4
        global.get 0
        i32.const -384063067
        ref.null struct
        br_on_null 2
        i32.const 33554432
        if (type 33) (param eqref) ;; label = @3
          br 0 (;@3;)
          ref.as_non_null
          ref.cast (ref 6)
          loop (result nullfuncref) ;; label = @4
            loop (type 22) (result f64 i64) ;; label = @5
              table.size 0
              i64.clz
              block (type 18) ;; label = @6
                struct.new 17
                global.get 0
                br 6
                f32.const 0x1.437112p-99 (;=0.0000000000000000000000000000019933633;)
                i64.trunc_sat_f32_s
                struct.new_default 1
                block (type 22) (result f64 i64) ;; label = @7
                  table.size 0
                  i64.popcnt
                  f64.convert_i64_s
                  i64.trunc_f64_s
                  table.get 0
                  loop (result f64) ;; label = @8
                    loop ;; label = @9
                      global.get 0
                      br 6 (;@3;)
                      struct.new_default 41
                      block (type 18) ;; label = @10
                        struct.new_default 32
                        extern.convert_any
                        ref.null 22
                        ref.as_non_null
                        struct.new_default 36
                        i32.const -524289
                        i64.extend_i32_s
                        i64.extend8_s
                        f64.convert_i64_u
                        block ;; label = @11
                          loop (type 22) (result f64 i64) ;; label = @12
                            i64.const -576460752303423488
                            i64.extend8_s
                            f64.convert_i64_u
                            array.new_fixed 37 0
                            ref.as_non_null
                            f64.const -0x1.2939178b307cep-227 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000538311248639081;)
                            f64.floor
                            f64.floor
                            f64.const 0x1.ffffffffcp-1040 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016975966327;)
                            try_table (catch_all 9 (;@3;)) (catch_all 9 (;@3;)) (catch_all 4 (;@8;)) (catch_all 9 (;@3;)) (catch_all 8 (;@4;)) (catch_all 12) (catch_all 8 (;@4;)) (catch_all 12) (catch_all 8 (;@4;)) ;; label = @13
                              f32.const -nan:0x6fffff (;=NaN;)
                              i32.const -848749258
                              f32.const -0x1.de7bdap-98 (;=-0.000000000000000000000000000005897768;)
                              global.get 0
                              nop
                              f64.const 0x1p+1 (;=2;)
                              struct.new_default 31
                              local.get 1
                              struct.new_default 34
                              f32.const 0x1p-23 (;=0.00000011920929;)
                              i32.trunc_f32_s
                              i32.ctz
                              i64.const 7060359430436468458
                              i32.const -1977048857
                              i64.const -633062582194125989
                              struct.new 17
                              struct.new 17
                              table.size 0
                              global.get 0
                              br 13
                              block (result nullref) ;; label = @14
                                i32.const 1048576
                                global.get 0
                                global.set 0
                                nop
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        else
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
