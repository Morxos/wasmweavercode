(module
  (rec
    (type (;0;) (sub (array i8)))
    (type (;1;) (sub (func)))
    (type (;2;) (sub (struct (field i8) (field (mut anyref)) (field i8) (field i8) (field (mut i8)) (field f32) (field i8) (field i8) (field (mut structref)) (field i8) (field i16) (field (mut i8)))))
    (type (;3;) (func))
    (type (;4;) (array (mut i16)))
    (type (;5;) (func (param i64) (result i32)))
    (type (;6;) (func (param i32 i32 f32) (result f64 i32)))
    (type (;7;) (struct (field i8) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field i8) (field (mut i16))))
    (type (;8;) (sub (array i8)))
    (type (;9;) (struct (field (mut i16))))
    (type (;10;) (sub (func (param i64 i32 i32))))
    (type (;11;) (array (mut i8)))
    (type (;12;) (func (result eqref f64 f64 i64 nullfuncref i64 f64)))
    (type (;13;) (sub (func (param f64 f32 f64 f64))))
    (type (;14;) (sub (array (mut i16))))
    (type (;15;) (sub (struct (field (mut i32)) (field (mut i8)) (field i16) (field f32))))
    (type (;16;) (func (param f32 f64 i64 i32) (result i32 exnref f64)))
    (type (;17;) (sub (array (mut i8))))
    (type (;18;) (sub (array (mut i8))))
    (type (;19;) (sub (struct (field (mut i16)) (field (mut f32)) (field i16) (field i16) (field i8) (field i64) (field i8) (field (mut i16)) (field (mut f64)) (field i16) (field i16) (field (mut i8)) (field (mut f64)) (field i8) (field f32) (field (mut i8)))))
    (type (;20;) (struct (field (mut f32)) (field i8) (field (mut i8)) (field (mut f32)) (field f32) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field i32) (field (mut i16)) (field i16) (field (mut f64)) (field f32) (field i64)))
    (type (;21;) (sub (func)))
    (type (;22;) (sub (func (param i64 nullexternref))))
    (type (;23;) (struct (field i8) (field (mut i16)) (field i16) (field i16) (field i16) (field i16) (field f64) (field f32) (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field (mut i16)) (field i16) (field i8) (field i16) (field (mut f32)) (field (mut i8)) (field (mut i32)) (field (mut i8))))
    (type (;24;) (sub 2 (struct (field i8) (field (mut anyref)) (field i8) (field i8) (field (mut i8)) (field f32) (field i8) (field i8) (field (mut structref)) (field i8) (field i16) (field (mut i8)) (field i8))))
    (type (;25;) (sub (array (mut i16))))
    (type (;26;) (sub (array (mut i16))))
    (type (;27;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field i64))))
    (type (;28;) (sub (func)))
    (type (;29;) (array (mut i8)))
    (type (;30;) (sub (func (result f32 i32))))
    (type (;31;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i8) (field (ref null 2)) (field i16) (field (mut (ref null 10))) (field (mut i16)) (field f32) (field i16) (field externref) (field i8))))
    (type (;32;) (struct (field (mut i16)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field i8) (field (mut i16)) (field f32) (field i16) (field i8) (field i8) (field i16) (field (mut i8)) (field f64) (field f64) (field (mut i8))))
    (type (;33;) (struct (field (mut funcref)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field i16) (field (mut i16)) (field i16) (field i16)))
    (type (;34;) (sub (array i16)))
    (type (;35;) (struct (field i16) (field (mut i8))))
    (type (;36;) (sub (array (mut f32))))
    (type (;37;) (sub (array f32)))
    (type (;38;) (array (mut i32)))
    (type (;39;) (sub (array (mut i16))))
    (type (;40;) (sub (array f64)))
    (type (;41;) (sub (func (result i64 f32))))
    (type (;42;) (array (mut i8)))
    (type (;43;) (struct (field (mut i16)) (field (mut i16)) (field i64) (field i8) (field i16) (field (mut f32)) (field i64) (field (mut i32)) (field i16) (field (mut (ref null 31))) (field f32) (field i8) (field (mut f64)) (field i16) (field i8) (field i32) (field i32) (field (mut i32)) (field i64) (field structref)))
    (type (;44;) (sub (array f64)))
    (type (;45;) (struct (field i8) (field nullfuncref) (field (mut f64)) (field i32) (field f64) (field i8) (field i8) (field (mut i64)) (field i16) (field nullexternref) (field (mut f64)) (field i8)))
    (type (;46;) (struct (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field (mut i16))))
    (type (;47;) (array i8))
    (type (;48;) (sub (array i64)))
    (type (;49;) (array (mut funcref)))
    (type (;50;) (func (param f64 f32 anyref f64)))
    (type (;51;) (sub (func)))
    (type (;52;) (func))
    (type (;53;) (array (mut i16)))
    (type (;54;) (struct (field (mut i8)) (field (mut i8)) (field (mut i16))))
    (type (;55;) (sub (array (mut i8))))
    (type (;56;) (sub 36 (array (mut f32))))
  )
  (table (;0;) 0 exnref)
  (func (;0;) (type 3)
    i32.const 32
    i64.extend_i32_s
    i32.wrap_i64
    array.new_default 38
    ref.as_non_null
    try_table (type 30) (result f32 i32) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) ;; label = @1
      f64.const 0x1.p-1074 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005;)
      f64.const -nan:0xfffffff800000 (;=NaN;)
      f64.sqrt
      f64.nearest
      i32.trunc_f64_s
      br_table 1 1
      f64.trunc
      i32.const -467728098
      try_table (type 52) (catch_all 1) (catch_all 1) ;; label = @2
        loop ;; label = @3
          ref.null 41
          call 0
          ref.is_null
          i32.ctz
          i32.clz
          try_table (type 1) (catch_all 3) (catch_all 3) (catch_all 0 (;@3;)) (catch_all 3) (catch_all 3) (catch_all 1 (;@2;)) (catch_all 3) (catch_all 0 (;@3;)) ;; label = @4
            try_table (type 1) (catch_all 0 (;@4;)) (catch_all 2 (;@2;)) (catch_all 0 (;@4;)) (catch_all 0 (;@4;)) (catch_all 1 (;@3;)) (catch_all 1 (;@3;)) (catch_all 1 (;@3;)) (catch_all 4) ;; label = @5
              table.size 0
              br_if 1 (;@4;)
              i64.const -65
              i64.ctz
              f64.const -nan:0xfffffffffff80 (;=NaN;)
              i32.trunc_sat_f64_u
              array.new_default 14
              f32.const 0x1.2fa4dcp-85 (;=0.000000000000000000000000030660207;)
              i64.trunc_f32_s
              table.size 0
              try_table (type 52) (catch_all 1 (;@4;)) (catch_all 2 (;@3;)) (catch_all 3 (;@2;)) (catch_all 0 (;@5;)) (catch_all 5) (catch_all 0 (;@5;)) (catch_all 2 (;@3;)) (catch_all 2 (;@3;)) (catch_all 2 (;@3;)) (catch_all 0 (;@5;)) ;; label = @6
                i64.const -524289
                i32.wrap_i64
                f32.reinterpret_i32
                i32.trunc_f32_s
                f32.const 0x1.8c3d52p+52 (;=6970719600000000;)
                try_table (catch_all 2 (;@4;)) (catch_all 6) ;; label = @7
                  struct.new_default 54
                  struct.get_u 54 2
                  try_table (type 30) (result f32 i32) (catch_all 0 (;@7;)) (catch_all 2 (;@5;)) (catch_all 1 (;@6;)) ;; label = @8
                    i32.const 0
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
          end
          unreachable
        end
      end
      unreachable
    end
    unreachable
  )
)
