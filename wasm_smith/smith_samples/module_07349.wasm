(module
  (rec
    (type (;0;) (sub (struct (field i8) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field f32) (field (mut anyref)) (field f64) (field i16) (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field f64) (field (mut i32)) (field (mut i8)) (field i8) (field i31ref))))
    (type (;1;) (array (mut i8)))
    (type (;2;) (array i8))
    (type (;3;) (sub (array (mut i8))))
    (type (;4;) (func (result nullfuncref i64)))
    (type (;5;) (func (param f64) (result f64)))
    (type (;6;) (sub 3 (array (mut i8))))
    (type (;7;) (func))
    (type (;8;) (array f64))
    (type (;9;) (sub (struct (field (mut i8)) (field (mut i32)) (field i8) (field (mut i16)) (field i8) (field i16))))
    (type (;10;) (sub (array i8)))
    (type (;11;) (sub final 0 (struct (field i8) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field f32) (field (mut anyref)) (field f64) (field i16) (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field f64) (field (mut i32)) (field (mut i8)) (field i8) (field i31ref) (field i8))))
    (type (;12;) (func (result f32 externref i64)))
    (type (;13;) (array (mut i8)))
    (type (;14;) (struct (field externref) (field f32) (field i64) (field (mut i8)) (field (mut f64)) (field (mut f64)) (field (mut i32)) (field (mut i8))))
    (type (;15;) (sub (func (param f64 i64) (result f32))))
    (type (;16;) (array i16))
    (type (;17;) (struct (field structref) (field (mut i16)) (field (mut i8)) (field i16) (field (mut funcref)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field i8) (field i8) (field (mut i16))))
    (type (;18;) (sub (func (result i64))))
    (type (;19;) (func))
    (type (;20;) (func (param f64 i32 f64 f32)))
    (type (;21;) (array (mut i16)))
    (type (;22;) (func (result (ref null 17) i64)))
    (type (;23;) (func (result i64 i64 f64 i32 f32)))
    (type (;24;) (sub (array i16)))
    (type (;25;) (array (mut i16)))
    (type (;26;) (sub (struct (field (mut i16)) (field i16))))
    (type (;27;) (struct (field i64) (field (mut i16)) (field (mut i16)) (field i8) (field i64) (field i16) (field (mut i16)) (field i16) (field (mut f64)) (field (mut i32)) (field (ref null 22)) (field i8) (field i16) (field i16)))
    (type (;28;) (func (param structref i64)))
    (type (;29;) (sub (array (mut i16))))
    (type (;30;) (sub (struct (field (ref null 3)) (field i8) (field arrayref) (field f32) (field i32) (field (mut i8)) (field i16) (field i16) (field f64) (field i64) (field (mut i16)) (field i16) (field (mut i16)) (field (mut exnref)) (field (mut (ref null 8))) (field i16) (field i16) (field (mut i16)) (field (mut i16)))))
    (type (;31;) (func (result i32 (ref null 3))))
    (type (;32;) (sub 29 (array (mut i16))))
    (type (;33;) (sub (func (param i64))))
    (type (;34;) (sub (struct (field i8) (field (mut i8)) (field i32) (field (mut f32)) (field (mut i16)))))
    (type (;35;) (struct (field i16) (field (mut i32)) (field i16) (field (mut i32)) (field (mut (ref null 26))) (field (mut f32)) (field f32) (field i64) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field i32) (field (ref null 33)) (field i8)))
    (type (;36;) (func))
    (type (;37;) (struct (field i16) (field i32) (field i8) (field f64) (field (mut i8))))
    (type (;38;) (sub (func (result f64 f64 (ref null 30)))))
    (type (;39;) (array (mut i8)))
    (type (;40;) (sub (struct (field i32) (field (mut i64)) (field i16) (field (mut i32)) (field f64) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field f64) (field i8) (field (mut i16)) (field i8) (field (mut arrayref)) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut f32)))))
    (type (;41;) (struct (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field nullfuncref) (field i8) (field (mut i16)) (field i64) (field i8) (field i8) (field (mut i32))))
    (type (;42;) (sub (func)))
    (type (;43;) (func (param f64)))
    (type (;44;) (sub (array i16)))
    (type (;45;) (sub (func (param f64 i32 i32 f64 i64 f32 f64 i64 i32))))
    (type (;46;) (array (mut i16)))
    (type (;47;) (sub (array i8)))
    (type (;48;) (func (param f64 funcref)))
    (type (;49;) (func (result i32)))
    (type (;50;) (sub (array i16)))
    (type (;51;) (sub (array i8)))
    (type (;52;) (func (param i32)))
    (type (;53;) (sub (func (param i64) (result f64))))
    (type (;54;) (sub (func (result f32))))
    (type (;55;) (sub (struct (field i8) (field i16) (field (mut i64)) (field i32) (field nullfuncref) (field i16))))
    (type (;56;) (sub (array (mut i16))))
    (type (;57;) (sub (array (mut i32))))
    (type (;58;) (func (param i64) (result i32)))
    (type (;59;) (sub (struct (field (mut i8)) (field (mut i8)) (field (mut i32)) (field i64) (field (ref null 56)) (field i16) (field i16) (field (mut i8)) (field i16) (field (mut i16)))))
    (type (;60;) (sub (array i16)))
    (type (;61;) (func))
    (type (;62;) (func))
    (type (;63;) (array (mut i16)))
    (type (;64;) (sub (func (param i64 i64) (result f64 f32))))
    (type (;65;) (struct (field (mut f64)) (field i16) (field exnref)))
    (type (;66;) (sub (struct (field i8) (field (mut f32)) (field i16))))
    (type (;67;) (struct (field (mut i8)) (field f32) (field (mut i8)) (field (mut i8)) (field i32) (field i16) (field eqref) (field (mut i8)) (field i8) (field nullfuncref) (field (mut i16))))
    (type (;68;) (struct (field i32) (field (mut i8)) (field i16) (field (mut (ref null 1))) (field i16) (field i8) (field i8) (field i64) (field (mut i32)) (field i8)))
  )
  (import "DYnq>" "" (table (;0;) 6390 arrayref))
  (elem (;0;) declare (ref null 9) (ref.null 9))
  (elem (;1;) declare (ref null 42))
  (elem (;2;) declare nullfuncref (ref.null nofunc) (ref.null nofunc) (ref.null nofunc))
  (elem (;3;) declare (ref null 19))
  (func (;0;) (type 54) (result f32)
    f64.const -0x1.9ad60b27d1f0bp+881 (;=-25873478520108906000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
    table.size 0
    i64.extend_i32_u
    f64.convert_i64_s
    return_call 0
    block (type 62) ;; label = @1
      table.size 0
      f32.convert_i32_s
      i32.reinterpret_f32
      ref.i31
      ref.null 32
      struct.new_default 30
      br 0 (;@1;)
      nop
      unreachable
    end
    unreachable
  )
)
