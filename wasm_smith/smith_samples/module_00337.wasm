(module
  (rec
    (type (;0;) (struct (field i16) (field (mut i8)) (field i8) (field i8) (field (mut i8)) (field i8) (field (mut funcref))))
    (type (;1;) (sub (func (result f64))))
    (type (;2;) (func (param arrayref)))
    (type (;3;) (array i8))
    (type (;4;) (sub (array (mut i64))))
    (type (;5;) (sub (array i8)))
    (type (;6;) (sub (func (param i32 f32))))
    (type (;7;) (func (result i32)))
    (type (;8;) (array i16))
    (type (;9;) (sub (array i8)))
    (type (;10;) (sub (func)))
    (type (;11;) (sub (struct (field (mut i8)) (field (mut anyref)) (field (mut i64)) (field (mut i8)))))
    (type (;12;) (struct (field (mut i8)) (field i16) (field i8) (field (mut f32)) (field (mut i8)) (field (mut f32)) (field i16) (field (mut i8)) (field f32) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field f32) (field (mut f64)) (field (mut i16)) (field f64)))
    (type (;13;) (sub (struct (field (mut i8)) (field i32) (field (mut i8)) (field (mut i32)) (field (mut i16)) (field (mut f32)))))
    (type (;14;) (struct (field (ref null 2))))
    (type (;15;) (sub (func (param f32 f32 f64 i32))))
    (type (;16;) (array (mut i8)))
    (type (;17;) (sub (struct (field i8) (field f32) (field i64) (field (mut i8)) (field (mut i8)) (field i16))))
    (type (;18;) (array i16))
    (type (;19;) (sub (struct (field f64))))
    (type (;20;) (struct (field f32)))
    (type (;21;) (sub (array i16)))
    (type (;22;) (struct (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field eqref) (field (mut f32)) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field f32) (field (mut i16)) (field i8) (field (mut i8)) (field i8)))
    (type (;23;) (sub (struct (field (mut i64)) (field (mut i16)) (field i16) (field (mut f64)) (field i16) (field (ref null 15)) (field (mut i16)) (field i16) (field (mut i8)) (field i64) (field i64) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field (mut externref)) (field (mut structref)) (field i8))))
    (type (;24;) (array (mut i8)))
    (type (;25;) (sub (func (result f64 f64 f64 nullref))))
    (type (;26;) (sub (func)))
    (type (;27;) (array (mut i64)))
    (type (;28;) (sub (func (param i64 i32) (result f32 i32))))
    (type (;29;) (sub (struct (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field i32) (field (mut anyref)) (field i16) (field anyref) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i32) (field (mut i16)) (field i16) (field (mut i8)))))
    (type (;30;) (func (param funcref)))
    (type (;31;) (sub (array i16)))
    (type (;32;) (sub (func)))
    (type (;33;) (func (result i64)))
    (type (;34;) (sub (func (param funcref f64 (ref null 27)))))
    (type (;35;) (sub (struct (field i16) (field (mut i16)) (field i16) (field arrayref) (field i8) (field (mut i8)) (field (mut i64)) (field i8) (field i8) (field i64))))
    (type (;36;) (array (mut f32)))
    (type (;37;) (sub (array i16)))
    (type (;38;) (array i16))
    (type (;39;) (sub (struct (field i16) (field i32) (field nullexternref) (field (mut i8)) (field f32) (field i8) (field (mut i8)) (field i16) (field i8) (field i32) (field i32) (field i64) (field i8) (field i64) (field f32) (field (mut i8)) (field f32) (field i8))))
    (type (;40;) (array (mut i32)))
    (type (;41;) (sub (struct)))
    (type (;42;) (sub (array i16)))
    (type (;43;) (func (param i32) (result i32)))
  )
  (import "" "" (func (;0;) (type 26)))
  (memory (;0;) i64 153)
  (global (;0;) (mut f32) f32.const -0x1.b744ecp+68 (;=-506442940000000000000;))
  (global (;1;) (mut f64) f64.const 0x1.5f5d6a4249607p-378 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022293592163892376;))
  (global (;2;) (mut i64) i64.const 0)
  (global (;3;) (mut i64) i64.const 0)
  (global (;4;) (mut i32) i32.const 0)
  (global (;5;) (mut i32) i32.const 0)
  (export "q" (global 0))
  (start 4)
  (func (;1;) (type 34) (param funcref f64 (ref null 27))
    (local f64)
    f32.const -0x1.db7e86p-20 (;=-0.000001771354;)
    i32.trunc_f32_u
    try_table (type 33) (result i64) (catch_all 0) (catch_all 0) (catch_all 0) ;; label = @1
      i64.const 7913905550679510975
      i64.const 281474976710655
      call 0
      i32.load16_u offset=14320116958951489538 align=1
      local.get 2
      i64.const 2251799813685247
      local.get 3
      call 2
      f64.floor
      f64.sqrt
      i32.trunc_f64_u
      array.new 27
      block (type 25) (result f64 f64 f64 nullref) ;; label = @2
        memory.size
        loop (type 10) ;; label = @3
        end
        global.get 2
        i64.xor
        global.set 2
        f64.const 0x1.bf72577900f2p-557 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000370504688490795;)
        f64.const 0x1.977580361e846p-546 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006909813154189395;)
        f64.const 0x1.7db0602970841p+623 (;=51898755066706740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
        ref.null none
      end
      drop
      i64.reinterpret_f64
      global.get 3
      i64.xor
      global.set 3
      i64.reinterpret_f64
      global.get 3
      i64.xor
      global.set 3
      i64.reinterpret_f64
      global.get 3
      i64.xor
      global.set 3
      drop
      drop
      global.get 4
      i32.xor
      global.set 4
    end
    global.get 2
    i64.xor
    global.set 2
    global.get 4
    i32.xor
    global.set 4
  )
  (func (;2;) (type 26)
    (local f32 i32)
    loop (type 32) ;; label = @1
      f32.const 0x1.a2aca8p+105 (;=66341613000000000000000000000000;)
      global.get 1
      f64.trunc
      global.get 1
      f64.le
      f64.const 0x1.p-1058 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000032379;)
      f64.neg
      block (type 25) (result f64 f64 f64 nullref) ;; label = @2
        i64.const 8167673109557725428
        f32.convert_i64_s
        i64.trunc_sat_f32_u
        i32.load16_s offset=3338061092082236545 align=1
        f32.convert_i32_u
        f32.floor
        loop (type 7) (result i32) ;; label = @3
          memory.size
          i64.load32_s offset=3328191
          i64.load32_s offset=9837470
          f64.load offset=3934899 align=2
          i64.reinterpret_f64
          global.get 3
          i64.xor
          global.set 3
          i32.const 524287
        end
        global.get 4
        i32.xor
        global.set 4
        i32.reinterpret_f32
        global.get 5
        i32.xor
        global.set 5
        f64.const -0x1.80748a93624adp+877 (;=-1513254646160197000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
        f64.const -nan:0xeffffffffffff (;=NaN;)
        f64.const 0x1.p-1069 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016;)
        ref.null none
      end
      drop
      i64.reinterpret_f64
      global.get 3
      i64.xor
      global.set 3
      i64.reinterpret_f64
      global.get 3
      i64.xor
      global.set 3
      i64.reinterpret_f64
      global.get 3
      i64.xor
      global.set 3
      i64.reinterpret_f64
      global.get 3
      i64.xor
      global.set 3
      global.get 4
      i32.xor
      global.set 4
      i32.reinterpret_f32
      global.get 5
      i32.xor
      global.set 5
    end
  )
  (func (;3;) (type 10)
    (local anyref)
    nop
    br 0
    br 0
    try_table (type 1) (result f64) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) ;; label = @1
      i32.const 804871858
      if (type 32) ;; label = @2
        f64.const 0x1.be6568e4641fbp+1001 (;=37368538860465687000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
        global.set 1
        ref.null 15
        block (type 25) (result f64 f64 f64 nullref) ;; label = @3
          global.get 0
          br 1 (;@2;)
          f64.promote_f32
          try_table (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 3) (catch_all 3) ;; label = @4
            i32.const 10027009
            f32.convert_i32_u
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;4;) (type 10))
)
