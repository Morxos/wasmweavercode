(module
  (rec
    (type (;0;) (sub (func (param i64 f64 i64) (result f64 f64))))
    (type (;1;) (sub (struct (field i16) (field (mut i64)) (field (mut i64)) (field (mut f32)) (field i16) (field (mut i8)))))
    (type (;2;) (sub (struct (field nullfuncref) (field i8) (field (mut i32)) (field (mut i16)) (field (mut i16)) (field i8) (field i64) (field i16))))
    (type (;3;) (sub (struct (field (mut f32)) (field funcref) (field (mut f32)) (field f32) (field i32) (field i8) (field i8) (field (mut i64)) (field i16) (field f32) (field i8) (field i64) (field (mut i16)) (field i8) (field f64) (field (mut i16)))))
    (type (;4;) (sub (array i64)))
    (type (;5;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field exnref) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field i64))))
    (type (;6;) (array i8))
    (type (;7;) (array i8))
    (type (;8;) (struct (field i64) (field i8)))
    (type (;9;) (sub (func (param f64 f32 f64) (result f32 f64 i64))))
    (type (;10;) (array i64))
    (type (;11;) (sub (struct (field (mut i8)) (field (mut i16)) (field f64) (field i8) (field i16) (field (mut i16)) (field f64) (field externref) (field i8) (field i64) (field i8) (field (mut i32)) (field (mut i16)) (field i16))))
    (type (;12;) (func (result nullref f32)))
    (type (;13;) (struct (field (mut i8)) (field (mut i32)) (field (mut i16)) (field (mut f32)) (field i8) (field (mut i8)) (field (mut eqref)) (field f64) (field i16) (field f64) (field i16)))
    (type (;14;) (sub (func (param i64) (result f64 f64))))
    (type (;15;) (sub (struct)))
    (type (;16;) (func (param i64) (result f32)))
    (type (;17;) (sub 9 (func (param f64 f32 f64) (result f32 f64 i64))))
    (type (;18;) (sub (func (param i64 i32 i32 i32 structref f32) (result i64 f64 funcref))))
    (type (;19;) (sub (func (param f32) (result i64 i32))))
    (type (;20;) (sub (struct (field f64) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field (mut f64)))))
    (type (;21;) (func (param i32 i32 i32 f64 funcref f64 externref) (result i31ref f32)))
    (type (;22;) (struct (field i64) (field i8) (field i16) (field (mut i16)) (field i8) (field i31ref) (field (mut i8)) (field i64) (field (mut i16)) (field (mut f32)) (field i8) (field (mut f32)) (field (mut i32)) (field i8) (field i16)))
    (type (;23;) (sub (func (param i64))))
    (type (;24;) (array (mut i64)))
    (type (;25;) (func (result (ref null 20))))
    (type (;26;) (sub (struct (field i8) (field i8) (field (mut i8)) (field f64) (field (mut i16)) (field (mut i16)) (field i8) (field (mut f32)) (field i64) (field (mut i8)) (field i8) (field (mut i64)) (field i32) (field i8))))
    (type (;27;) (sub (func (param f64 i64 f64) (result i32 i64 i32))))
    (type (;28;) (array i8))
    (type (;29;) (func (result (ref null 8) i64)))
    (type (;30;) (sub (func (param i32 i64) (result i64))))
    (type (;31;) (sub (array (mut i16))))
    (type (;32;) (sub (func (param f64) (result f64))))
    (type (;33;) (array i64))
    (type (;34;) (func (param f32 i32 i32)))
    (type (;35;) (sub (struct (field (mut i8)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field i8) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field f64) (field i64) (field (mut f64)) (field f64) (field i8) (field (mut i16)) (field (mut f64)) (field i16))))
    (type (;36;) (struct (field i16) (field (mut i8))))
    (type (;37;) (struct (field i16) (field (mut i8))))
    (type (;38;) (sub (array f32)))
    (type (;39;) (sub (array i8)))
    (type (;40;) (struct (field i64) (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i64))))
    (type (;41;) (sub (array (mut f32))))
    (type (;42;) (sub (array i8)))
    (type (;43;) (func))
    (type (;44;) (sub (func (param (ref null 43)))))
    (type (;45;) (sub (struct (field i16) (field (mut f64)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field f32) (field (mut f32)) (field i8) (field i16) (field i8) (field (mut i32)) (field (mut f64)) (field i16) (field i8) (field i8) (field i8) (field f64))))
    (type (;46;) (sub (array (mut i32))))
    (type (;47;) (sub (func (result f64))))
    (type (;48;) (struct (field (mut i64)) (field i16) (field (mut f32)) (field (mut i16)) (field f64) (field (mut i8)) (field i8) (field f32) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field i8)))
    (type (;49;) (sub (struct (field (mut i8)) (field i32) (field (mut i16)))))
    (type (;50;) (sub (struct)))
    (type (;51;) (struct (field i8) (field (mut i16)) (field f32) (field (mut i8)) (field (mut i16)) (field (ref null 30)) (field (mut i8)) (field (mut i8)) (field nullfuncref) (field i16) (field i16) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8))))
    (type (;52;) (sub (func (param f64))))
    (type (;53;) (array funcref))
    (type (;54;) (sub (array i16)))
    (type (;55;) (sub (func (param (ref null 22) f32 nullref i32 f32 structref f64 nullref))))
    (type (;56;) (sub (func (result f64))))
    (type (;57;) (sub (struct (field f64) (field i16) (field (mut f32)) (field (mut f64)) (field i16) (field i16) (field i8) (field (mut i16)) (field i64) (field (mut i64)) (field i8) (field i16) (field i64) (field i8) (field i8) (field i8))))
    (type (;58;) (array (mut i16)))
    (type (;59;) (sub (struct (field i32) (field nullref) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i64)) (field (mut i16)) (field (mut anyref)) (field (mut i8)) (field (mut i16)) (field i16))))
    (type (;60;) (sub (struct (field i16) (field i8) (field i16) (field (mut f64)) (field (mut nullfuncref)) (field i16) (field (mut i16)) (field i64) (field (mut f64)) (field i8) (field i8) (field i8) (field i8) (field i8) (field i8) (field i8))))
    (type (;61;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;62;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;63;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;64;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;65;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;66;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;67;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;68;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;69;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;70;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;71;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;72;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;73;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;74;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;75;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;76;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;77;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;78;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;79;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;80;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;81;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;82;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;83;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;84;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;85;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;86;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;87;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;88;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;89;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
    (type (;90;) (sub 0 (func (param i64 f64 i64) (result f64 f64))))
  )
  (func (;0;) (type 0) (param i64 f64 i64) (result f64 f64)
    unreachable
  )
)
