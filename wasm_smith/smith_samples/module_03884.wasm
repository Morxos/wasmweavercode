(module
  (rec
    (type (;0;) (sub (array i64)))
    (type (;1;) (struct (field i32) (field (mut f32)) (field i8) (field (mut i8)) (field funcref) (field i16) (field (mut i16)) (field (mut i8)) (field i16) (field (mut anyref))))
    (type (;2;) (struct (field (mut i16)) (field (mut i64)) (field i32) (field i64) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8)))
    (type (;3;) (sub (array i8)))
    (type (;4;) (sub (array (mut i8))))
    (type (;5;) (struct (field i16) (field i16) (field i31ref) (field funcref) (field (mut i8)) (field i8)))
    (type (;6;) (sub (array f64)))
    (type (;7;) (sub (struct (field i8) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field i8) (field i16) (field i64))))
    (type (;8;) (sub (struct (field (mut f32)) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut i16)) (field i8) (field (mut i8)) (field funcref) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field i8) (field (mut i8)))))
    (type (;9;) (sub (array i16)))
    (type (;10;) (struct (field (mut anyref)) (field (mut f64))))
    (type (;11;) (sub 8 (struct (field (mut f32)) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut i16)) (field i8) (field (mut i8)) (field funcref) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field i8) (field (mut i8)))))
    (type (;12;) (sub (func (param f64 f32 f64) (result i64 i64))))
    (type (;13;) (sub (struct (field (mut i16)) (field i64) (field i8) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field i32) (field f32) (field (mut i8)) (field (mut i16)) (field (mut i16)))))
    (type (;14;) (sub (struct (field (mut f32)) (field (mut (ref null 8))) (field (mut f32)) (field (mut i64)) (field (mut f64)) (field i16) (field i31ref))))
    (type (;15;) (array (mut i64)))
    (type (;16;) (sub (struct (field i64) (field i32) (field (mut i16)) (field i64) (field f32) (field (mut i8)) (field i16) (field (mut i8)) (field i64) (field i8) (field i16))))
    (type (;17;) (func))
    (type (;18;) (sub (array i8)))
    (type (;19;) (sub (array i16)))
    (type (;20;) (sub (struct (field f64) (field i8) (field f64) (field structref) (field i16) (field i32) (field (mut i8)) (field (mut i8)) (field i8) (field i8) (field (mut i16)))))
    (type (;21;) (sub (func (param i64 i64 f32))))
    (type (;22;) (struct (field f64) (field f64) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i64))))
    (type (;23;) (sub (struct (field (mut (ref null 5))) (field i16) (field i64) (field i16) (field i16) (field (mut i32)) (field (mut i16)))))
    (type (;24;) (array (mut i8)))
    (type (;25;) (struct (field i64) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field (mut f32)) (field i16) (field i32) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field i16) (field (mut f32)) (field (ref null 18)) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field i16)))
    (type (;26;) (func (result i32 f32)))
    (type (;27;) (sub (func)))
    (type (;28;) (struct (field i16) (field (mut i16)) (field (mut i8)) (field i64) (field (mut i16))))
    (type (;29;) (func (result i32 i32)))
    (type (;30;) (array (mut i16)))
    (type (;31;) (struct (field i16) (field i8) (field (mut i8)) (field (mut i32)) (field (mut f64)) (field i8) (field (mut i64)) (field (mut i16)) (field i8) (field (mut i16)) (field i16) (field i8) (field i32) (field i16) (field i8) (field i64) (field (mut f32)) (field i32) (field (mut i8)) (field (mut i8))))
    (type (;32;) (array i16))
    (type (;33;) (sub (func)))
    (type (;34;) (sub (struct (field (mut i8)) (field i16) (field (mut i16)) (field (mut i8)) (field (ref null 27)) (field (mut i8)) (field (mut i32)) (field (mut i64)) (field (mut i64)))))
    (type (;35;) (sub (array (mut f64))))
    (type (;36;) (sub 16 (struct (field i64) (field i32) (field (mut i16)) (field i64) (field f32) (field (mut i8)) (field i16) (field (mut i8)) (field i64) (field i8) (field i16) (field (mut (ref null 30))) (field i16) (field i8))))
    (type (;37;) (func (result i32)))
    (type (;38;) (array (mut i8)))
    (type (;39;) (sub (struct (field (mut i16)) (field (mut i16)) (field i8) (field f32) (field i8) (field f64) (field i32) (field i32) (field (mut i32)) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field i16) (field f32) (field (mut i16)))))
    (type (;40;) (sub (func (param i64 (ref null 8)))))
    (type (;41;) (sub (struct (field f32) (field i16) (field (mut i16)) (field i8) (field f32) (field i8) (field i8))))
    (type (;42;) (array i16))
    (type (;43;) (array (mut i16)))
  )
  (import "!z\u{15}" "" (func (;0;) (type 21)))
  (import "\u{18}" "" (tag (;0;) (type 27)))
  (table (;0;) 104 497215 anyref)
  (tag (;1;) (type 33))
  (tag (;2;) (type 17))
  (export "" (table 0))
  (export "h" (table 0))
  (func (;1;) (type 12) (param f64 f32 f64) (result i64 i64)
    (local (ref null 1))
    struct.new_default 13
    ref.test (ref none)
    f64.convert_i32_u
    try_table (result f32) ;; label = @1
      nop
      ref.null array
      table.size 0
      data.drop 0
      i32.ctz
      i64.extend_i32_s
      data.drop 0
      i64.popcnt
      f64.const 0x1.ffffffff8p-1041 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084879831634;)
      f32.demote_f64
      loop (result i64) ;; label = @2
        call 2
        call 2
        ref.null 21
        block (type 33) ;; label = @3
          throw 1
          table.size 0
          i64.extend_i32_s
          f64.convert_i64_u
          block (type 27) ;; label = @4
            call 2
            data.drop 0
            block (type 33) ;; label = @5
              data.drop 0
              try_table (type 29) (result i32 i32) (catch 1 2 (;@3;)) ;; label = @6
                f32.const -0x1.a235b4p-111 (;=-0.00000000000000000000000000000000062925214;)
                f32.nearest
                f32.neg
                br 5 (;@1;)
                i64.const -8589934592
                i64.extend8_s
                br 3 (;@3;)
                i64.extend32_s
                loop (type 26) (result i32 f32) ;; label = @7
                  table.size 0
                  table.get 0
                  ref.test nullref
                  loop (result f64) ;; label = @8
                    try_table (type 26) (result i32 f32) (catch_all 5 (;@3;)) (catch 1 3 (;@5;)) (catch 0 6 (;@2;)) (catch_all 3 (;@5;)) (catch 0 1 (;@7;)) (catch 1 5 (;@3;)) ;; label = @9
                      try_table (type 27) (catch 0 1 (;@8;)) ;; label = @10
                        nop
                        i64.const -1569093273202119275
                        f32.convert_i64_s
                        i64.trunc_sat_f32_s
                        table.size 0
                        loop ;; label = @11
                          nop
                          block (type 37) (result i32) ;; label = @12
                            f32.const -0x1.018304p+36 (;=-69125290000;)
                            local.tee 1
                            call 2
                            i32.trunc_sat_f32_u
                            if (type 27) ;; label = @13
                              try_table (type 27) ;; label = @14
                              end
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;2;) (type 17))
  (data (;0;) "")
)
