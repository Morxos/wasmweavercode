(module
  (rec
    (type (;0;) (array (mut i8)))
    (type (;1;) (sub (func (result f64))))
    (type (;2;) (sub final 1 (func (result f64))))
    (type (;3;) (sub (func (result f32 f64))))
    (type (;4;) (sub (struct (field i8) (field f64) (field i16) (field (mut anyref)))))
    (type (;5;) (sub (struct)))
    (type (;6;) (struct (field i16) (field (mut i8)) (field (mut nullfuncref)) (field f64) (field (mut i32)) (field i32) (field (mut i8))))
    (type (;7;) (array i16))
    (type (;8;) (array i32))
    (type (;9;) (sub (func (result f64 f64 f64 i32))))
    (type (;10;) (sub (struct)))
    (type (;11;) (sub (array f32)))
    (type (;12;) (sub 11 (array f32)))
    (type (;13;) (sub (array i16)))
    (type (;14;) (struct (field (mut i8)) (field f32) (field i64) (field (mut (ref null 10))) (field (mut i16)) (field i8) (field i8) (field (mut (ref null 2))) (field i16) (field (mut i32))))
    (type (;15;) (sub (array (mut i32))))
    (type (;16;) (array (mut i8)))
    (type (;17;) (sub (struct (field (mut i16)) (field i16) (field f32) (field i32) (field (mut i8)) (field i32) (field f64) (field (mut i32)))))
    (type (;18;) (array i16))
    (type (;19;) (sub final 15 (array (mut i32))))
    (type (;20;) (array (mut i32)))
    (type (;21;) (sub (struct (field funcref) (field (mut f64)) (field (mut f64)) (field nullref) (field i32) (field nullref) (field i16) (field (mut nullfuncref)) (field i16) (field i16) (field (mut i64)) (field (mut i8)))))
    (type (;22;) (sub (func)))
    (type (;23;) (sub (struct (field i8) (field i8) (field i8) (field (mut i16)) (field i16) (field (mut i16)) (field i32) (field (mut (ref null 6))) (field (mut i8)) (field (mut f32)) (field i16) (field i16) (field i16) (field (mut i8)) (field (mut i8)) (field i32) (field i16) (field i64))))
    (type (;24;) (sub (array anyref)))
    (type (;25;) (sub (array f32)))
    (type (;26;) (sub (array i16)))
    (type (;27;) (array (mut f32)))
    (type (;28;) (struct (field i8) (field (mut i16)) (field i8) (field (mut f32)) (field i16) (field (mut i16)) (field i16) (field (mut i64)) (field i8) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field i8) (field i8) (field i64) (field i64) (field i16)))
    (type (;29;) (sub (func (param i32) (result i64 i64 f32))))
    (type (;30;) (sub (struct)))
    (type (;31;) (sub (func (result f32 i64))))
    (type (;32;) (sub (struct (field i8) (field (mut i8)) (field f32) (field (mut i64)) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field (mut f32)) (field i16) (field i16) (field f32) (field i8) (field (mut i32)) (field f64) (field i8) (field (mut i16)) (field i64) (field i8) (field i32))))
    (type (;33;) (struct (field i32) (field i8) (field (mut i16)) (field i8) (field (mut f64)) (field i16) (field i16) (field i32) (field (mut i16)) (field (mut (ref null 18))) (field (mut (ref null 9))) (field i32) (field (mut i8)) (field nullref) (field (mut i16)) (field (mut f32))))
    (type (;34;) (array i16))
  )
  (import "" "" (table (;0;) 311 728732 (ref null 9)))
  (import "" "" (memory (;0;) 516))
  (tag (;0;) (type 22))
  (tag (;1;) (type 22))
  (export "x|" (table 0))
  (func (;0;) (type 1) (result f64)
    (local f32)
    return_call 0
    i64.trunc_f64_u
    i64.extend8_s
    i64.const 1048576
    i64.eqz
    i32.load8_u offset=26689781
    data.drop 0
    i32.load8_u offset=2458811
    i64.extend_i32_s
    f64.convert_i64_u
    struct.new_default 10
    br_on_null 0
    i64.const -6148914691236517206
    f64.reinterpret_i64
    f64.abs
    try_table (result nullexternref) ;; label = @1
      ref.null func
      throw 1
      i32.const 1134333960
      block (type 9) (result f64 f64 f64 i32) ;; label = @2
        memory.size
        array.new_fixed 15 0
        ref.cast (ref none)
        try_table (type 9) (result f64 f64 f64 i32) ;; label = @3
          loop (result f32) ;; label = @4
            data.drop 0
            i32.const -573113018
            i64.load32_u offset=3858474462 align=2
            i64.extend16_s
            f64.convert_i64_s
            i32.trunc_sat_f64_s
            br 0 (;@4;)
            i32.extend8_s
            i64.extend_i32_s
            f64.reinterpret_i64
            memory.size
            br 0 (;@4;)
            i32.load8_s offset=22086829
            memory.grow
            f64.const 0x1.p-1063 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001012;)
            try_table (type 2) (result f64) (catch 0 0 (;@4;)) (catch 0 0 (;@4;)) ;; label = @5
              f32.const 0x1.01a342p+75 (;=38020618000000000000000;)
              f32.const -nan:0x7fbfff (;=NaN;)
              block ;; label = @6
                block (type 3) (result f32 f64) ;; label = @7
                  try_table (catch 0 3 (;@4;)) ;; label = @8
                  end
                  try_table (catch_all 3 (;@4;)) (catch 0 1 (;@6;)) (catch 1 3 (;@4;)) (catch 1 3 (;@4;)) (catch 1 3 (;@4;)) ;; label = @8
                    data.drop 0
                    f32.const nan:0x7fffff (;=NaN;)
                    try_table (type 22) (catch 1 4 (;@4;)) (catch 1 2 (;@6;)) (catch_all 4 (;@4;)) (catch 0 2 (;@6;)) ;; label = @9
                      i64.const -1209996111652018110
                      i64.extend16_s
                      call 0
                      call 0
                      f64.nearest
                      call 0
                      f64.max
                      memory.size
                      f64.convert_i32_s
                      try_table (catch_all 5 (;@4;)) (catch_all 5 (;@4;)) (catch 1 5 (;@4;)) (catch 0 1 (;@8;)) ;; label = @10
                      end
                      local.get 0
                      f64.const -nan:0xfffff00000000 (;=NaN;)
                      f64.trunc
                      i32.trunc_sat_f64_u
                      array.new_fixed 20 0
                      f64.const -0x1.e3bb32bfbe421p-461 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000031734829693630264;)
                      br 0 (;@9;)
                      f64.neg
                      local.get 0
                      f32.trunc
                      block (type 31) (result f32 i64) ;; label = @10
                        table.size 0
                        i64.extend_i32_u
                        i32.wrap_i64
                        nop
                        f64.convert_i32_u
                        call 0
                        f64.min
                        i32.trunc_f64_s
                        table.size 0
                        i32.popcnt
                        i32.load8_s offset=28454679
                        br_table 1 (;@9;) 2 (;@8;) 4 (;@6;) 6 (;@4;) 4 (;@6;)
                        br_if 6 (;@4;)
                        f32.const -0x1.48fe9cp-58 (;=-0.000000000000000004458708;)
                        i32.trunc_f32_u
                        local.get 0
                        f32.store offset=19656485 align=2
                        block ;; label = @11
                          block (type 22) ;; label = @12
                            call 0
                            i64.trunc_f64_s
                            i64.const 268435456
                            f64.const -nan:0xfff8000000000 (;=NaN;)
                            f64.ceil
                            try_table (type 9) (result f64 f64 f64 i32) (catch_all 1 (;@11;)) (catch_all 4 (;@8;)) (catch 1 1 (;@11;)) (catch 0 1 (;@11;)) (catch_all 8 (;@4;)) (catch 0 8 (;@4;)) (catch_all 1 (;@11;)) (catch 1 3 (;@9;)) (catch_all 6 (;@6;)) (catch_all 6 (;@6;)) ;; label = @13
                              block (type 3) (result f32 f64) ;; label = @14
                                block (type 31) (result f32 i64) ;; label = @15
                                  f32.const 0x0p+0 (;=0;)
                                  i64.const 0
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "")
)
