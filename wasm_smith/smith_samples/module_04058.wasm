(module
  (rec
    (type (;0;) (sub (array (mut i8))))
    (type (;1;) (sub (func (result i32 f64 i64 i32 externref))))
    (type (;2;) (sub (struct (field (mut eqref)) (field (mut i16)) (field i16) (field i8) (field (mut i64)) (field (mut i16)) (field i8) (field i8) (field (mut nullexternref)) (field (mut anyref)))))
    (type (;3;) (sub (func (result i32 i64))))
    (type (;4;) (sub (struct (field (mut i32)) (field (mut i16)) (field (mut i16)) (field i32) (field i8) (field f64) (field (mut i16)) (field i8) (field (mut f32)) (field (mut i8)))))
    (type (;5;) (func (param i64) (result eqref f32 i64)))
    (type (;6;) (func (param f32) (result f32 anyref i64 f32)))
    (type (;7;) (func (result i32)))
    (type (;8;) (sub (struct (field i8) (field f32) (field (mut i16)) (field (mut i8)) (field (mut (ref null 6))))))
    (type (;9;) (struct (field (mut i16)) (field (mut i8)) (field (mut i32)) (field i16) (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i64)) (field (mut i8))))
    (type (;10;) (sub (array i16)))
    (type (;11;) (sub (func)))
    (type (;12;) (array i8))
    (type (;13;) (struct (field (mut i16))))
    (type (;14;) (array (mut f32)))
    (type (;15;) (func))
    (type (;16;) (sub (array i8)))
    (type (;17;) (sub (array i16)))
    (type (;18;) (sub (func)))
    (type (;19;) (struct (field nullfuncref) (field (mut i8)) (field i16) (field (mut i8)) (field (mut anyref))))
    (type (;20;) (sub (array i32)))
    (type (;21;) (struct (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8)) (field i16)))
    (type (;22;) (struct (field i16) (field i64) (field (mut i8)) (field (mut i64)) (field (mut i8)) (field i8) (field i64) (field i8) (field (mut i16)) (field (mut f64)) (field i64) (field (mut i16))))
    (type (;23;) (struct (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field i16)))
    (type (;24;) (sub (struct (field (mut i8)) (field i32) (field (mut i16)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut i16)))))
    (type (;25;) (sub (func (param nullexternref) (result externref i32))))
    (type (;26;) (sub (func)))
    (type (;27;) (sub (func (result eqref))))
    (type (;28;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field i64) (field (mut i8)) (field i64) (field (mut (ref null 21))) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field i16) (field (mut i16)) (field i8) (field i8) (field i16))))
    (type (;29;) (sub (array i16)))
    (type (;30;) (sub (func (result i64 f32 f32))))
    (type (;31;) (struct (field (ref null 11)) (field eqref) (field (mut i16))))
    (type (;32;) (func (result (ref null 3) funcref (ref null 20) f32)))
    (type (;33;) (func (param f32)))
    (type (;34;) (array i16))
    (type (;35;) (sub (struct (field (mut i16)) (field (mut (ref null 18))) (field (mut i8)))))
    (type (;36;) (sub 1 (func (result i32 f64 i64 i32 externref))))
    (type (;37;) (sub (array i8)))
    (type (;38;) (array (mut anyref)))
    (type (;39;) (struct (field i8) (field (mut i16)) (field i16) (field f32) (field anyref) (field (mut i8)) (field i16) (field i16)))
    (type (;40;) (array i16))
    (type (;41;) (func))
  )
  (import "" "" (func (;0;) (type 3)))
  (table (;0;) 6988 804119 (ref null 27) ref.null nofunc)
  (tag (;0;) (type 15))
  (global (;0;) (mut (ref null 27)) ref.null 27)
  (export "@" (func 1))
  (export "" (global 0))
  (elem (;0;) anyref)
  (func (;1;) (type 26)
    ref.null 4
    ref.null 4
    ref.as_non_null
    struct.get_u 4 4
    f32.const 0x1.fffffep-112 (;=0.00000000000000000000000000000000038518597;)
    f32.floor
    block (type 3) (result i32 i64) ;; label = @1
      block (type 1) (result i32 f64 i64 i32 externref) ;; label = @2
        br 2
        block (type 26) ;; label = @3
          try_table (type 26) (catch_all 0 (;@3;)) (catch_all 3) (catch_all 3) (catch_all 0 (;@3;)) (catch 0 3) (catch_all 0 (;@3;)) (catch 0 3) (catch_all 0 (;@3;)) (catch 0 0 (;@3;)) ;; label = @4
            global.get 0
            table.size 0
            i32.extend8_s
            f32.const -0x1.fffffep+96 (;=-158456320000000000000000000000;)
            i64.trunc_f32_u
            ref.null 41
            block ;; label = @5
            end
            call_ref 41
            f32.convert_i64_s
            br 1 (;@3;)
            call 1
            array.new_fixed 14 0
            ref.cast (ref 14)
            ref.as_non_null
            ref.cast (ref 14)
            elem.drop 0
            i32.const 1024
            i32.ctz
            i64.extend_i32_s
            f64.convert_i64_u
            i32.trunc_f64_s
            f32.convert_i32_u
            i64.trunc_f32_u
            i64.extend8_s
            loop (result i32) ;; label = @5
              loop (type 1) (result i32 f64 i64 i32 externref) ;; label = @6
                f32.const -0x1.9043fap+112 (;=-8118349500000000000000000000000000;)
                i64.trunc_f32_s
                elem.drop 0
                i64.extend32_s
                try_table (type 36) (result i32 f64 i64 i32 externref) (catch_all 3 (;@3;)) (catch 0 2 (;@4;)) (catch_all 6) (catch_all 3 (;@3;)) ;; label = @7
                  i64.const 4294967295
                  i64.extend32_s
                  f32.convert_i64_s
                  f64.promote_f32
                  table.size 0
                  block (type 36) (result i32 f64 i64 i32 externref) ;; label = @8
                    global.get 0
                    ref.test (ref null 27)
                    i32.const 2048
                    i32.clz
                    i32.div_s
                    nop
                    if (type 11) ;; label = @9
                    end
                    f32.const -0x1.a964ccp+63 (;=-15326425000000000000;)
                    try_table (type 27) (result eqref) (catch 0 5 (;@3;)) (catch 0 2 (;@6;)) (catch 0 5 (;@3;)) (catch_all 3 (;@5;)) (catch_all 5 (;@3;)) (catch 0 8) (catch 0 2 (;@6;)) (catch_all 2 (;@6;)) ;; label = @9
                      i32.const -75223662
                      i32.extend16_s
                      i32.popcnt
                      i64.extend_i32_s
                      br 6 (;@3;)
                      i64.const 549755813887
                      table.size 0
                      loop (type 32) (result (ref null 3) funcref (ref null 20) f32) ;; label = @10
                        try_table (type 15) (catch_all 5 (;@5;)) (catch 0 10) (catch 0 5 (;@5;)) (catch 0 0 (;@10;)) (catch 0 7 (;@3;)) (catch_all 6 (;@4;)) (catch_all 7 (;@3;)) (catch 0 4 (;@6;)) (catch_all 4 (;@6;)) (catch 0 5 (;@5;)) ;; label = @11
                          ref.null 1
                          call 1
                          call_ref 1
                          ref.cast (ref noextern)
                          f32.const -nan:0x700000 (;=NaN;)
                          i32.trunc_f32_u
                          global.get 0
                          f32.const -nan:0x77ffff (;=NaN;)
                          table.size 0
                          f32.convert_i32_u
                          i32.const 1607570029
                          f64.const -nan:0xffff7ffffffff (;=NaN;)
                          f64.ceil
                          table.size 0
                          i32.const 547244466
                          array.new_elem 38 0
                          br_on_cast_fail 2 (;@9;) (ref 38) (ref none)
                          return_call 1
                          br 1 (;@10;)
                          return_call 1
                          ref.test (ref none)
                          br 0 (;@11;)
                          i64.extend_i32_s
                          table.size 0
                          if (type 36) (result i32 f64 i64 i32 externref) ;; label = @12
                            block (type 11) ;; label = @13
                            end
                            table.size 0
                            struct.new 13
                            ref.test (ref 13)
                            br_if 6 (;@6;)
                            loop (type 41) ;; label = @13
                            end
                            i32.const 0
                            f64.const 0x0p+0 (;=0;)
                            i64.const 0
                            i32.const 0
                            ref.null extern
                          else
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
