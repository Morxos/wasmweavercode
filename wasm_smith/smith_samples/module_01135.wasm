(module
  (rec
    (type (;0;) (sub (struct (field (mut i16)) (field exnref) (field i8) (field (mut i16)) (field funcref) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i64)) (field f64) (field i16) (field (mut f64)) (field i16) (field i8) (field i8) (field (mut i8)))))
    (type (;1;) (func (param f32) (result i32)))
    (type (;2;) (array i16))
    (type (;3;) (sub (array anyref)))
    (type (;4;) (sub (struct (field (mut i8)) (field (mut i8)) (field i16) (field i64) (field (mut i16)) (field (mut i8)) (field (mut i16)))))
    (type (;5;) (func (result i64 funcref)))
  )
  (rec
    (type (;6;) (sub (func (param i64) (result i32 i64 i32))))
    (type (;7;) (sub (func (param f32) (result f64 f64 f32))))
    (type (;8;) (sub (array (mut i16))))
    (type (;9;) (sub (func (param i64 i32 i32) (result f64 i64))))
    (type (;10;) (sub (struct (field i32) (field (mut i16)) (field (mut f64)) (field f32) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field f32) (field i16) (field (mut i16)) (field (mut i16)))))
    (type (;11;) (func (param f64) (result i64)))
    (type (;12;) (sub (array (mut f64))))
    (type (;13;) (struct (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8))))
    (type (;14;) (sub (array f32)))
    (type (;15;) (sub (array (mut i8))))
    (type (;16;) (sub (func)))
    (type (;17;) (sub (func (result f32 i32 f64 i32 i32))))
    (type (;18;) (sub (struct (field i16) (field f32) (field f64) (field (mut i8)) (field i64) (field (mut i8)) (field f64) (field i16) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut i64)) (field i16) (field i32) (field i8) (field (mut i16)) (field (mut i8)))))
    (type (;19;) (struct (field i16) (field i16) (field (mut i8)) (field i16) (field i16) (field externref) (field i8) (field (mut i8)) (field i32) (field i16) (field (mut i16)) (field (mut i8)) (field i16) (field i16) (field f64) (field (mut i16)) (field nullfuncref)))
    (type (;20;) (array i16))
    (type (;21;) (sub (func (param i32 i64))))
    (type (;22;) (func (result i32 arrayref i32 i31ref)))
    (type (;23;) (array (mut exnref)))
    (type (;24;) (func (result f64)))
    (type (;25;) (sub (struct (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field f32) (field i16) (field (mut i16)) (field (mut i64)) (field i8) (field i16) (field (mut i64)) (field i16) (field f32))))
    (type (;26;) (sub (struct (field (mut i16)) (field i8) (field (mut structref)) (field (mut exnref)) (field structref) (field i8) (field i31ref) (field (mut i32)) (field i16) (field i16) (field i16) (field f64) (field (mut i16)) (field (mut f32)) (field i8) (field (mut i8)) (field (mut (ref null 8))) (field (mut i16)))))
    (type (;27;) (struct (field (mut i8)) (field (mut f64)) (field i32) (field (mut f32)) (field i8) (field (mut i8)) (field i8)))
    (type (;28;) (array (mut i8)))
    (type (;29;) (sub (array i32)))
    (type (;30;) (func (result f64 f32 f64 f64)))
    (type (;31;) (struct (field (mut f64)) (field (mut i8)) (field (mut f32)) (field i16) (field f64) (field (mut f32)) (field i16) (field (mut f64)) (field (mut i8))))
    (type (;32;) (struct (field (mut i8)) (field (mut f64)) (field (mut i8)) (field (mut i31ref)) (field i16)))
    (type (;33;) (array i16))
    (type (;34;) (struct (field i8) (field i8) (field (mut i16)) (field i8) (field i8) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i64)) (field i16) (field (mut i64)) (field i8) (field i16) (field (mut i16))))
    (type (;35;) (sub (array i8)))
    (type (;36;) (sub (func (result nullref))))
    (type (;37;) (array i32))
    (type (;38;) (array (mut i16)))
    (type (;39;) (sub final 29 (array i32)))
    (type (;40;) (sub (array (mut i8))))
    (type (;41;) (array f32))
    (type (;42;) (func (param anyref)))
    (type (;43;) (sub 15 (array (mut i8))))
    (type (;44;) (sub (array (mut i16))))
    (type (;45;) (sub (func (param i64))))
    (type (;46;) (sub (func (result f32 f64 (ref null 13)))))
    (type (;47;) (sub (struct (field (mut i16)))))
    (type (;48;) (sub 29 (array i32)))
    (type (;49;) (sub (struct (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i16)) (field f32))))
    (type (;50;) (sub (struct (field f32) (field (mut i8)) (field (mut i16)) (field i32) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field f32) (field (mut i16)) (field i32) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i64)) (field (mut i16)))))
    (type (;51;) (struct))
    (type (;52;) (sub final 25 (struct (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field f32) (field i16) (field (mut i16)) (field (mut i64)) (field i8) (field i16) (field (mut i64)) (field i16) (field f32) (field i8) (field (mut i16)) (field (mut i16)))))
    (type (;53;) (array (mut i16)))
    (type (;54;) (struct (field i32) (field i32) (field (mut i16)) (field (mut i8))))
  )
  (table (;0;) i64 170 876882 (ref null 9) ref.null 9)
  (memory (;0;) 0)
  (global (;0;) (mut f32) f32.const 0x1.ac699ap+42 (;=7360071000000;))
  (global (;1;) (mut i64) i64.const 7501187901884505685)
  (global (;2;) i32 i32.const -705966654)
  (global (;3;) (mut f32) f32.const 0x1.8cfc52p-119 (;=0.0000000000000000000000000000000000023332718;))
  (global (;4;) f32 f32.const 0x1.5f38bap+127 (;=233426780000000000000000000000000000000;))
  (export "OB" (memory 0))
  (export "" (global 1))
  (export "y~\u{c}c\u{15}" (table 0))
  (export "\u{13}\u{5c}" (memory 0))
  (export "4" (func 0))
  (export "5" (global 2))
  (export "c\u{15}H" (func 0))
  (export "?l5\u{0}" (table 0))
  (elem (;0;) (ref null 5) (ref.null nofunc) (ref.null 5) (ref.null 5) (ref.null 5) (ref.null nofunc) (ref.null nofunc))
  (func (;0;) (type 30) (result f64 f32 f64 f64)
    table.size 0
    i64.eqz
    i64.load32_u align=2
    i32.const 33554432
    return_call 0
    i64.trunc_sat_f64_u
    f32.convert_i64_s
    i64.trunc_f32_s
    i64.const -4194305
    i64.le_u
    global.get 0
    call 0
    f64.sqrt
    f64.trunc
    block (type 11) (param f64) (result i64) ;; label = @1
      call 0
      i64.trunc_f64_u
      i64.extend16_s
      i64.clz
      f64.convert_i64_u
      return_call 0
      block (type 16) ;; label = @2
        struct.new 51
        br_on_null 0 (;@2;)
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "")
  (data (;1;) "\00")
  (data (;2;) "")
)
