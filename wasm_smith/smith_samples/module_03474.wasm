(module
  (rec
    (type (;0;) (sub (func (param i64))))
    (type (;1;) (sub (struct (field (mut f64)) (field (mut i8)) (field i16) (field (mut i64)))))
    (type (;2;) (sub final 0 (func (param i64))))
    (type (;3;) (sub (array i8)))
    (type (;4;) (sub (struct (field i8) (field (mut i8)) (field (mut i32)) (field i16) (field i8) (field i16) (field (mut i16)))))
    (type (;5;) (sub (func (param nullref))))
    (type (;6;) (sub (array i16)))
    (type (;7;) (struct (field (mut f64)) (field (mut i16)) (field i16) (field i16) (field (mut i64)) (field i8) (field i8) (field i16) (field (mut i16)) (field i64) (field (mut i16)) (field (mut f32)) (field i8) (field i8) (field (mut f32)) (field (mut i16))))
    (type (;8;) (struct (field (mut eqref)) (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field i32) (field i64) (field (mut i8)) (field i8) (field (mut (ref null 6))) (field i8) (field i16) (field i64) (field (mut i8)) (field (mut i64)) (field (mut i32)) (field i8) (field f64)))
    (type (;9;) (func (param f32) (result f32 f64)))
    (type (;10;) (func))
    (type (;11;) (func))
    (type (;12;) (struct (field i8) (field i8) (field i8) (field f64) (field i16) (field (mut i16)) (field i32) (field (mut f32)) (field (mut i8)) (field f64) (field (mut i64)) (field (mut i64)) (field (mut i16)) (field i16) (field i16) (field (mut i8)) (field (mut f64))))
    (type (;13;) (func))
    (type (;14;) (func))
    (type (;15;) (sub (func (result f64))))
    (type (;16;) (sub (func (param f64) (result f32))))
    (type (;17;) (sub (func (result i32))))
  )
  (rec
    (type (;18;) (func (param f32 f64)))
    (type (;19;) (array i64))
    (type (;20;) (sub (func (result i32))))
    (type (;21;) (struct (field i8) (field (mut i16)) (field f64) (field eqref) (field i16) (field (mut i16)) (field i64) (field i8) (field (mut i8)) (field i16) (field i8) (field f64) (field (mut i64)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i64)) (field i16) (field i8)))
    (type (;22;) (sub (struct (field (mut i16)) (field i16) (field i16) (field i64) (field (mut i16)) (field (mut i8)) (field i64) (field (mut i8)) (field (mut i64)) (field i64) (field (mut i8)) (field i16) (field (mut i8)) (field (mut f32)) (field i32) (field i16))))
    (type (;23;) (sub (func (result f32 f32))))
    (type (;24;) (sub (struct (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field f64) (field (mut i16)))))
    (type (;25;) (array (mut i8)))
    (type (;26;) (func (param i32) (result anyref)))
    (type (;27;) (sub (array i16)))
    (type (;28;) (sub (struct (field (mut anyref)) (field (mut i8)) (field i16) (field i16) (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field (mut i8)) (field (mut i32)) (field i16))))
    (type (;29;) (sub (struct (field i8) (field (mut i16)) (field (mut (ref null 12))) (field (mut funcref)) (field arrayref) (field (mut i64)) (field i64) (field (mut i64)))))
    (type (;30;) (func (param i64)))
    (type (;31;) (sub (struct (field (mut i8)) (field nullexternref) (field (mut i16)) (field i8) (field i8) (field i64) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field (mut f64)) (field (mut i16)) (field f64) (field (mut i8)) (field (mut i8)) (field (mut i16)))))
    (type (;32;) (sub (struct)))
    (type (;33;) (sub (array i8)))
    (type (;34;) (sub (struct (field i16) (field i8) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field arrayref) (field (mut i8)))))
    (type (;35;) (sub 16 (func (param f64) (result f32))))
    (type (;36;) (func (result i32 f64 i64)))
    (type (;37;) (struct (field anyref) (field i16) (field i8) (field (mut i8)) (field i32) (field (mut i32)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i16) (field (ref null 15)) (field i16)))
    (type (;38;) (sub (array i8)))
    (type (;39;) (func (param i32 f32 i32) (result f32 i32)))
    (type (;40;) (func))
    (type (;41;) (func))
    (type (;42;) (sub (struct (field f64) (field (mut f64)) (field (mut i16)) (field f64) (field i8) (field i16) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut (ref null 28))) (field i16) (field i8) (field (mut i8)))))
    (type (;43;) (struct (field (mut f32))))
    (type (;44;) (sub (array i16)))
    (type (;45;) (sub (struct (field (mut i8)))))
    (type (;46;) (array i16))
    (type (;47;) (array f64))
    (type (;48;) (array i16))
    (type (;49;) (array (mut i16)))
    (type (;50;) (struct))
    (type (;51;) (sub final 1 (struct (field (mut f64)) (field (mut i8)) (field i16) (field (mut i64)))))
    (type (;52;) (sub (func (param f32))))
    (type (;53;) (sub (array i16)))
  )
  (table (;0;) 22 arrayref ref.null 44)
  (func (;0;) (type 17) (result i32)
    loop (type 41) ;; label = @1
      block (type 10) ;; label = @2
        f64.const -0x1.474fe8f479e13p+241 (;=-4518050848421035000000000000000000000000000000000000000000000000000000000;)
        nop
        f64.ceil
        i64.reinterpret_f64
        try_table (type 0) (param i64) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) ;; label = @3
          i64.extend32_s
          i64.ctz
          call 0
          f32.convert_i32_u
          f32.ceil
          f32.abs
          f32.trunc
          f32.const -0x1.fffffep+64 (;=-36893486000000000000;)
          nop
          block (type 40) ;; label = @4
            struct.new_default 24
            ref.as_non_null
            ref.cast (ref none)
            ref.test (ref none)
            i64.const -134217728
            i64.extend8_s
            i64.clz
            struct.new_default 8
            struct.new_default 28
            return_call 0
            i32.clz
            array.new_fixed 44 0
            ref.test (ref 44)
            try_table (type 14) (catch_all 0 (;@4;)) (catch_all 2 (;@2;)) (catch_all 2 (;@2;)) (catch_all 1 (;@3;)) (catch_all 2 (;@2;)) (catch_all 3 (;@1;)) ;; label = @5
              try_table (type 14) (catch_all 3 (;@2;)) (catch_all 2 (;@3;)) (catch_all 2 (;@3;)) (catch_all 4 (;@1;)) (catch_all 0 (;@5;)) (catch_all 4 (;@1;)) (catch_all 4 (;@1;)) (catch_all 2 (;@3;)) ;; label = @6
                f32.const -nan:0x7f0000 (;=NaN;)
                i64.trunc_sat_f32_u
                return_call 0
                f32.convert_i32_u
                f32.floor
                return_call 0
                i32.ctz
                f64.const 0x1.b6470057c2223p-134 (;=0.00000000000000000000000000000000000000007861214413761959;)
                table.size 0
                i32.eqz
                try_table (type 20) (result i32) (catch_all 5 (;@1;)) (catch_all 5 (;@1;)) (catch_all 0 (;@6;)) (catch_all 3 (;@3;)) ;; label = @7
                  block ;; label = @8
                    loop (type 10) ;; label = @9
                      i32.const -100477914
                      return_call 0
                      i32.clz
                      loop (result i32) ;; label = @10
                        i32.const 3874976
                        f64.convert_i32_u
                        call 1
                        call 0
                        unreachable
                        unreachable
                      end
                      unreachable
                    end
                  end
                  unreachable
                end
                unreachable
              end
            end
            unreachable
          end
          unreachable
        end
      end
    end
    unreachable
  )
  (func (;1;) (type 16) (param f64) (result f32)
    unreachable
  )
  (func (;2;) (type 9) (param f32) (result f32 f64)
    unreachable
  )
)
