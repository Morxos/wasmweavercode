(module
  (rec
    (type (;0;) (array (mut i16)))
    (type (;1;) (struct (field i16) (field i64) (field i8) (field (mut i16)) (field i8) (field (mut i64)) (field (mut i8)) (field (mut i8))))
    (type (;2;) (func (param i32 f32) (result exnref)))
    (type (;3;) (sub (func (param i64))))
    (type (;4;) (sub (func (param f64 nullexternref))))
    (type (;5;) (struct (field i16) (field (mut i16)) (field i16) (field f32) (field i8) (field (mut i16)) (field funcref) (field (mut f64)) (field (mut f32)) (field i16) (field i8) (field (mut i16)) (field i16) (field i16)))
    (type (;6;) (func (param i32) (result funcref f32)))
    (type (;7;) (sub (array (mut i8))))
    (type (;8;) (array i16))
    (type (;9;) (struct (field i64) (field (mut i64)) (field i32) (field i64) (field arrayref) (field (mut i8)) (field (mut i8)) (field i8) (field i8) (field i8) (field i16) (field i32) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field (mut i16))))
    (type (;10;) (func))
    (type (;11;) (struct (field i16) (field i16) (field i8) (field (mut i64)) (field f64) (field (mut i32)) (field i8) (field (mut i8)) (field i8)))
    (type (;12;) (array (mut i8)))
    (type (;13;) (func))
    (type (;14;) (struct (field (mut i32)) (field i16) (field (mut i8)) (field i8) (field i16)))
    (type (;15;) (struct (field (mut i8)) (field (mut i32))))
    (type (;16;) (sub (struct (field i64) (field i8) (field i8) (field (mut i32)) (field (mut i32)) (field (mut i16)) (field (mut i8)))))
    (type (;17;) (sub (func (param f32))))
    (type (;18;) (func (param eqref i64)))
    (type (;19;) (array i8))
    (type (;20;) (func (result f32 f32 f64)))
    (type (;21;) (array (mut i8)))
    (type (;22;) (func (param f64 i64 i32 f64 i64 i64 anyref)))
    (type (;23;) (sub (func (param nullref) (result f64))))
    (type (;24;) (sub (func)))
    (type (;25;) (array i16))
    (type (;26;) (sub (func (result f32))))
    (type (;27;) (sub (array (mut i16))))
    (type (;28;) (func (result f32)))
    (type (;29;) (sub (struct (field i16) (field (mut f32)) (field i16) (field (mut i32)) (field (mut i8)) (field i32) (field i8) (field i16) (field i8) (field i8) (field f64) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field f32))))
    (type (;30;) (struct (field i64) (field i64) (field i8) (field (mut i8)) (field (ref null 8)) (field i8) (field i8) (field nullref) (field (mut f64)) (field (mut i8)) (field i8)))
    (type (;31;) (struct (field (mut i8)) (field (mut i16)) (field eqref) (field (mut exnref)) (field i8) (field eqref) (field (mut i64)) (field i16) (field (mut i16)) (field i64) (field (mut i8)) (field i16)))
    (type (;32;) (struct (field (mut f32)) (field (mut i16)) (field (mut i16)) (field structref) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field (mut externref)) (field i16)))
    (type (;33;) (struct (field (mut i16)) (field i16) (field i32)))
    (type (;34;) (sub (array (mut i8))))
    (type (;35;) (sub (array (mut i32))))
    (type (;36;) (array (mut i8)))
    (type (;37;) (func))
    (type (;38;) (array (mut f32)))
    (type (;39;) (sub (array i16)))
    (type (;40;) (sub (array i16)))
    (type (;41;) (sub (array i16)))
    (type (;42;) (sub (func (param i32) (result i64))))
    (type (;43;) (array i32))
    (type (;44;) (sub (func (param (ref null 24) i64 i32))))
    (type (;45;) (sub (func)))
    (type (;46;) (sub (func (param f64))))
    (type (;47;) (array i8))
    (type (;48;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut (ref null 26))) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i8))))
    (type (;49;) (struct (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i64) (field (mut i16)) (field (mut i64)) (field (mut i64)) (field (mut nullexternref)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i32)) (field (mut i64))))
    (type (;50;) (func (result nullref i32 i32 anyref)))
    (type (;51;) (array (mut i32)))
  )
  (import "\u{7f}r" "" (table (;0;) i64 0 nullfuncref))
  (import "F\u{18}q" "" (func (;0;) (type 13)))
  (memory (;0;) i64 2 150113426990215)
  (tag (;0;) (type 17) (param f32))
  (tag (;1;) (type 13))
  (tag (;2;) (type 22) (param f64 i64 i32 f64 i64 i64 anyref))
  (export "\u{14}" (table 0))
  (elem (;0;) declare (ref null 49) (ref.null none) (ref.null none))
  (elem (;1;) declare (ref null 21) (ref.null 21))
  (func (;1;) (type 24)
    (local (ref null 41))
    call 1
    ref.null 18
    i32.const 807955694
    loop (type 10) ;; label = @1
      memory.size
      f64.load offset=40015 align=1
      i64.reinterpret_f64
      i32.load8_s offset=67350
      try_table (type 42) (param i32) (result i64) (catch 1 0 (;@1;)) (catch_all 0 (;@1;)) ;; label = @2
        loop (type 20) (result f32 f32 f64) ;; label = @3
          ref.null 43
          block (type 26) (result f32) ;; label = @4
            table.size 0
            f32.const 0x1.856e34p+16 (;=99694.2;)
            f32.store offset=73746 align=1
            i32.const -536870912
            ref.null none
            local.get 0
            ref.as_non_null
            table.size 0
            f32.convert_i64_u
            f32.ceil
            f32.ceil
            i32.reinterpret_f32
            f32.convert_i32_u
            f32.floor
            i32.trunc_f32_s
            i32.ctz
            return_call 0
            f32.const -0x1.6f90aep+46 (;=-101035540000000;)
            i64.const -878868227403795592
            i64.eqz
            array.new_default 39
            nop
            br 4
            ref.test (ref 39)
            f32.convert_i32_u
            return_call 1
            f32.lt
            table.size 0
            i64.load16_s offset=3550 align=1
            f64.reinterpret_i64
            block ;; label = @5
              i32.const 1414080721
              i64.extend_i32_s
              table.get 0
              memory.size
              i32.load16_u offset=73696 align=1
              call 0
              i32.popcnt
              i32.popcnt
              table.size 0
              i64.eqz
              if (type 45) ;; label = @6
                table.size 0
                i64.extend32_s
                unreachable
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
