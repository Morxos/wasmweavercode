(module
  (rec
    (type (;0;) (func))
    (type (;1;) (sub (struct (field i32) (field i16) (field (mut i8)) (field (mut i64)) (field (mut nullfuncref)) (field i16) (field f32) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8))))
    (type (;2;) (sub (struct (field exnref) (field (mut f64)) (field f32) (field i8) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut f32)))))
    (type (;3;) (sub (func (param (ref null 2)) (result f64))))
    (type (;4;) (sub (struct (field (mut i8)) (field i16) (field structref) (field i8) (field i32) (field i64) (field (mut i8)))))
    (type (;5;) (func (param f32) (result (ref null 4) i64)))
    (type (;6;) (func (result i64)))
    (type (;7;) (func (param (ref null 2)) (result arrayref)))
    (type (;8;) (sub (array i64)))
    (type (;9;) (array (mut i16)))
    (type (;10;) (array (mut i16)))
    (type (;11;) (sub (struct (field (mut i8)) (field i8) (field i64) (field i64) (field (mut i8)) (field i8))))
    (type (;12;) (sub (struct (field i16) (field (mut i16)) (field (mut i8)) (field i16) (field (mut exnref)) (field i16) (field i16) (field i8) (field (mut i8)) (field (mut i8)))))
    (type (;13;) (struct (field i8) (field i8) (field i64)))
    (type (;14;) (sub (struct (field (mut i16)) (field i8) (field (mut i16)) (field i16) (field i16) (field arrayref) (field i32) (field i8) (field i8) (field i32) (field (mut i8)) (field (mut f64)) (field (mut i64)) (field (mut i16)) (field i16) (field i32) (field i8) (field i32) (field i8) (field (mut i8)))))
    (type (;15;) (struct (field i8) (field (mut i32)) (field (mut i8)) (field (mut anyref)) (field (mut funcref)) (field (mut i8)) (field i8) (field (mut i8)) (field i16) (field i64) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut i32))))
    (type (;16;) (sub (array (mut f64))))
    (type (;17;) (sub (array (mut i8))))
    (type (;18;) (struct (field (mut i8))))
    (type (;19;) (sub (array i16)))
    (type (;20;) (array (mut f32)))
    (type (;21;) (func (param f64) (result i32 i64)))
  )
  (rec
    (type (;22;) (sub (array i16)))
    (type (;23;) (sub (func (param i32 f64 i32))))
    (type (;24;) (sub (array (mut i8))))
    (type (;25;) (sub (array (mut i16))))
    (type (;26;) (sub (struct (field i64) (field i64) (field i8) (field f32) (field (ref null 19)) (field (mut nullref)) (field i31ref) (field i8) (field i16) (field (mut i8)) (field (mut f64)))))
    (type (;27;) (sub (func (param f32 f32))))
    (type (;28;) (sub final 19 (array i16)))
    (type (;29;) (array (mut i8)))
    (type (;30;) (struct (field (mut i8)) (field (mut i16)) (field i8) (field (mut f32)) (field f64) (field i16) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8)))
    (type (;31;) (array (mut f32)))
    (type (;32;) (sub (array f64)))
    (type (;33;) (array i32))
    (type (;34;) (func (param i64 arrayref i32) (result f64 f64)))
    (type (;35;) (sub (array (mut i16))))
    (type (;36;) (sub (array i16)))
    (type (;37;) (func))
    (type (;38;) (sub (func)))
    (type (;39;) (array i8))
    (type (;40;) (struct (field (mut i16))))
    (type (;41;) (sub (array (mut i8))))
    (type (;42;) (func))
    (type (;43;) (sub (func (param f64 nullexternref))))
    (type (;44;) (array i16))
  )
  (tag (;0;) (type 0))
  (tag (;1;) (type 38))
  (tag (;2;) (type 38))
  (global (;0;) i64 i64.const -3896372306670424848)
  (global (;1;) (mut (ref null 43)) ref.null nofunc)
  (export "" (global 0))
  (start 0)
  (elem (;0;) (ref null 4) (ref.null 4) (ref.null none) (ref.null 4) (ref.null 4) (ref.null none))
  (elem (;1;) externref (ref.null noextern) (ref.null noextern))
  (elem (;2;) declare (ref null 7))
  (elem (;3;) declare (ref null 27) (ref.null 27))
  (elem (;4;) declare structref)
  (func (;0;) (type 0)
    (local f64)
    f64.const 0x1.ffffffep-1047 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001326247364;)
    i32.trunc_f64_u
    i32.const 17393887
    if ;; label = @1
      ref.null 38
      ref.is_null
      array.new_default 29
      i32.const 262144
      array.new_fixed 17 0
      i64.const -6262520267180520817
      ref.null 43
      block (type 6) (result i64) ;; label = @2
        global.get 1
        ref.as_non_null
        loop (type 38) ;; label = @3
          call 0
          loop (type 37) ;; label = @4
            f64.const -0x1.e401e58e5019p-714 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021937904435757506;)
            return_call 0
            f64.sqrt
            nop
            local.set 0
            return_call 0
            loop (type 42) ;; label = @5
              return_call 0
              return_call 0
              struct.new_default 11
              struct.get_u 11 4
              br_table 0 (;@5;) 1 (;@4;) 2 (;@3;) 4 (;@1;) 5 4 (;@1;)
              elem.drop 3
              i32.const -1873547502
              array.new_fixed 36 0
              block (type 37) ;; label = @6
                return_call 0
                ref.null 0
                call 0
                local.get 0
                i64.trunc_f64_s
                try_table (result f32) (catch_all 1 (;@5;)) ;; label = @7
                  throw 2
                  block (type 37) ;; label = @8
                    loop (type 0) ;; label = @9
                      i32.const -1431655766
                      loop (result i64) ;; label = @10
                        return_call 0
                        call 0
                        f64.const 0x1.9be39db9195dfp+127 (;=273747278328928180000000000000000000000;)
                        f32.const -0x1.48560ap-46 (;=-0.000000000000018226314;)
                        i32.const 2139095039
                        f64.convert_i32_s
                        i64.trunc_f64_u
                        elem.drop 4
                        ref.null 19
                        i64.const -2894300426861436671
                        local.get 0
                        i32.trunc_sat_f64_u
                        f32.convert_i32_s
                        block (type 37) ;; label = @11
                          global.get 0
                          f64.reinterpret_i64
                          f64.trunc
                          local.get 0
                          try_table (type 38) ;; label = @12
                            local.get 0
                            i32.trunc_f64_u
                            ref.i31
                            ref.as_non_null
                            ref.test (ref none)
                            f32.convert_i32_s
                            i32.trunc_f32_s
                            f64.convert_i32_s
                            i32.trunc_sat_f64_u
                            i32.popcnt
                            struct.new_default 30
                            f32.const -0x1.1f179p-96 (;=-0.00000000000000000000000000001415473;)
                            call 0
                            try_table (type 37) (catch 0 8 (;@4;)) (catch 0 0 (;@12;)) (catch 0 4 (;@8;)) (catch 2 2 (;@10;)) (catch_all 6 (;@6;)) (catch 1 8 (;@4;)) (catch_all 2 (;@10;)) (catch 1 3 (;@9;)) (catch_all 0 (;@12;)) (catch 1 8 (;@4;)) ;; label = @13
                              global.get 0
                              block ;; label = @14
                                local.get 0
                                block (type 0) ;; label = @15
                                  br 15
                                  i64.const 0
                                  unreachable
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
          end
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
