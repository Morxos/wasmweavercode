(module
  (rec
    (type (;0;) (sub (func (param f32 i32 i32 f64) (result i32 f64))))
    (type (;1;) (sub (struct (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field f64) (field (mut i8)) (field (mut i8)) (field i16) (field f64) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field i16))))
    (type (;2;) (func (param i32)))
    (type (;3;) (sub final 1 (struct (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field f64) (field (mut i8)) (field (mut i8)) (field i16) (field f64) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field i16) (field (mut i16)))))
    (type (;4;) (array i8))
    (type (;5;) (array (mut i16)))
    (type (;6;) (sub (array i8)))
    (type (;7;) (struct (field (mut i16)) (field i16) (field i64) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i16) (field i16) (field nullfuncref)))
    (type (;8;) (sub (func)))
    (type (;9;) (array i32))
    (type (;10;) (array (mut i16)))
    (type (;11;) (func (result i64)))
    (type (;12;) (sub (struct (field f64) (field (mut (ref null 10))) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i16)) (field f32) (field (mut i16)) (field i16))))
    (type (;13;) (array (mut f64)))
    (type (;14;) (sub (func)))
    (type (;15;) (struct (field (mut i31ref)) (field funcref) (field i16) (field (mut f32)) (field (mut i16)) (field i8) (field i16) (field (mut nullfuncref)) (field f64) (field i16) (field (mut i16)) (field i64) (field (mut i32)) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field (mut f32)) (field (mut i8))))
    (type (;16;) (sub (func)))
    (type (;17;) (sub (array i16)))
    (type (;18;) (array i8))
    (type (;19;) (sub (func)))
    (type (;20;) (func (result i32)))
    (type (;21;) (sub (func (param i64 f64 f64))))
    (type (;22;) (array (ref null 20)))
    (type (;23;) (sub (struct (field (mut i8)) (field (mut i8)) (field (mut i32)) (field i32) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i16)))))
    (type (;24;) (sub (struct (field (mut i16)))))
    (type (;25;) (sub (func (param i32 f64 i32 i64 nullref i32 f64))))
    (type (;26;) (func (param f64 f32 exnref)))
    (type (;27;) (func))
    (type (;28;) (sub (func (result f32 i32))))
    (type (;29;) (array (mut i8)))
    (type (;30;) (sub (func)))
    (type (;31;) (sub (func)))
    (type (;32;) (func (param i64 nullfuncref nullfuncref f32 externref)))
    (type (;33;) (array (mut i16)))
    (type (;34;) (sub (struct (field i8) (field i16) (field i16) (field i64) (field (mut i16)) (field (mut i64)) (field i32) (field i32) (field (mut i16)) (field i16) (field (mut (ref null 33))) (field (mut i8)) (field i8) (field (mut i64)) (field (mut i16)) (field i8) (field i16))))
    (type (;35;) (struct (field i8) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field i32) (field i16) (field i64)))
    (type (;36;) (func))
    (type (;37;) (func (param i32)))
    (type (;38;) (func (param f32)))
    (type (;39;) (sub (array anyref)))
    (type (;40;) (func (result i32 f32)))
  )
  (rec
    (type (;41;) (sub (func (result (ref null 4) eqref))))
    (type (;42;) (array (mut i16)))
    (type (;43;) (array i8))
    (type (;44;) (sub (struct (field (mut i16)))))
    (type (;45;) (sub (struct (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut f32)) (field i8) (field i64) (field i16) (field i16) (field (mut i64)) (field i16) (field (mut externref)) (field (mut i8)) (field i8) (field (mut i16)) (field i64) (field (mut i16)) (field i8) (field (mut i64)))))
    (type (;46;) (array (mut f64)))
    (type (;47;) (struct (field (mut i32)) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut i64)) (field (mut i64))))
  )
  (memory (;0;) 3175 30022)
  (tag (;0;) (type 21) (param i64 f64 f64))
  (tag (;1;) (type 27))
  (tag (;2;) (type 26) (param f64 f32 exnref))
  (tag (;3;) (type 8))
  (export "R" (memory 0))
  (start 0)
  (elem (;0;) declare (ref null 8))
  (elem (;1;) declare nullref (ref.null none))
  (func (;0;) (type 8)
    call 0
    block (type 30) ;; label = @1
      elem.drop 0
      loop (type 11) (result i64) ;; label = @2
        struct.new_default 24
        try_table (type 16) (catch 3 1 (;@1;)) (catch_all 0 (;@2;)) (catch_all 2) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) (catch 3 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) ;; label = @3
          f64.const -nan:0xffffffff80000 (;=NaN;)
          i64.trunc_sat_f64_s
          struct.new_default 1
          ref.as_non_null
          i32.const -65536
          i64.extend_i32_s
          i64.eqz
          br_if 0 (;@3;)
          ref.null struct
          ref.cast (ref 24)
          ref.as_non_null
          block (type 20) (result i32) ;; label = @4
            i32.const -268435457
            return_call 0
            return_call 0
            nop
            i32.popcnt
            struct.new 24
            i64.const 2147483648
            i64.ctz
            elem.drop 0
            f32.const 0x1.ffffcp-131 (;=0.000000000000000000000000000000000000000734683;)
            f32.ceil
            i32.trunc_sat_f32_s
            loop (result f32) ;; label = @5
              nop
              struct.new_default 3
              array.new_fixed 39 0
              loop (type 20) (result i32) ;; label = @6
                i32.const 2147483647
                i64.load32_u offset=1350545262
                i64.const -6116786355313111070
                elem.drop 0
                memory.size
                br_if 6
                i64.ge_u
                call 0
                f32.load offset=102572367 align=1
                loop (type 20) (result i32) ;; label = @7
                  memory.size
                  i32.load16_u offset=107498671
                  memory.grow
                end
                i64.const -9
                i64.extend8_s
                f64.reinterpret_i64
                memory.size
                f64.convert_i32_s
                f64.le
                i32.xor
                f32.const -0x1.c49346p+19 (;=-926874.2;)
                br 6
                f32.trunc
                f32.abs
                f64.promote_f32
                loop (type 40) (result i32 f32) ;; label = @7
                  call 0
                  f64.const 0x1.ffffep-1055 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000518065;)
                  try_table (type 20) (result i32) (catch 1 6 (;@1;)) (catch_all 1 (;@6;)) (catch 1 1 (;@6;)) (catch_all 2 (;@5;)) (catch 3 4 (;@3;)) ;; label = @8
                    return_call 0
                    i32.const 1551198009
                    f32.const -nan:0x7ff7ff (;=NaN;)
                    f32.floor
                    f32.sqrt
                    f32.sqrt
                    i64.const 6148914691236517205
                    f64.convert_i64_s
                    f64.abs
                    f64.neg
                    i64.trunc_sat_f64_s
                    f64.reinterpret_i64
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
  )
)
