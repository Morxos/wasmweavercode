(module
  (rec
    (type (;0;) (sub (func (param i64 i32 f64) (result f32 nullexternref))))
    (type (;1;) (func (param f32) (result i31ref)))
    (type (;2;) (struct (field i64) (field i8) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field (mut f32)) (field (mut i8)) (field i64) (field (mut i8)) (field (mut i16)) (field (mut i8))))
    (type (;3;) (sub (struct (field i8) (field i64) (field i16))))
    (type (;4;) (struct (field (mut i32)) (field (mut i8)) (field i64) (field funcref) (field (mut i8)) (field (mut i8)) (field exnref) (field f64) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut f64)) (field i16) (field (mut f32))))
    (type (;5;) (struct))
    (type (;6;) (func (param i64 f64 i32 i64) (result funcref (ref null 1) f32)))
    (type (;7;) (sub (struct (field (mut i16)) (field (mut i8)) (field i8) (field i16) (field i8) (field (mut f32)) (field i8) (field i8) (field (mut i64)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field i16))))
    (type (;8;) (array (mut eqref)))
    (type (;9;) (struct (field i8) (field i8) (field f64) (field i16) (field i8) (field (mut f64)) (field (mut i16)) (field i64) (field i8) (field i16)))
    (type (;10;) (sub (struct (field (mut i8)) (field i16) (field f64) (field i8) (field i16) (field f64) (field (mut i8)) (field i8))))
    (type (;11;) (array (mut i8)))
    (type (;12;) (struct (field (mut i16)) (field (mut i8)) (field (mut f64))))
    (type (;13;) (array (mut i16)))
    (type (;14;) (sub (func (result structref i64))))
    (type (;15;) (sub (array i16)))
    (type (;16;) (struct (field (mut i8)) (field i16) (field (mut f64)) (field i64) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut structref))))
    (type (;17;) (sub (array i8)))
    (type (;18;) (array (mut i8)))
    (type (;19;) (sub (func (param structref f32 f32))))
    (type (;20;) (func (param i64 f64)))
    (type (;21;) (sub (array i8)))
    (type (;22;) (sub (array (mut i8))))
    (type (;23;) (sub (array (mut i8))))
    (type (;24;) (sub (array (mut i8))))
    (type (;25;) (array (mut i16)))
    (type (;26;) (sub (struct (field (mut f32)) (field i32) (field (mut i8)) (field anyref) (field (mut i32)) (field i16) (field (mut i64)) (field i8) (field i8) (field i32) (field (mut i16)) (field (mut f32)) (field (mut i16)))))
    (type (;27;) (sub final 10 (struct (field (mut i8)) (field i16) (field f64) (field i8) (field i16) (field f64) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)))))
    (type (;28;) (sub (array i16)))
    (type (;29;) (struct (field (mut i16)) (field i16) (field i64) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i8))))
    (type (;30;) (array i16))
    (type (;31;) (sub (struct (field i8) (field i8) (field i16) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i32)) (field f64))))
    (type (;32;) (sub (func (result anyref))))
  )
  (import "" "" (func (;0;) (type 19)))
  (table (;0;) 39 546344 exnref ref.null exn)
  (memory (;0;) i64 0 43596716439325)
  (tag (;0;) (type 19) (param structref f32 f32))
  (export "Y\u{73d}Mk\u{502}" (memory 0))
  (elem (;0;) (ref null 12))
  (elem (;1;) declare (ref null 24) (ref.null 24) (ref.null 24) (ref.null none))
  (elem (;2;) declare (ref null 17) (ref.null none))
  (elem (;3;) structref)
  (elem (;4;) (table 0) (i32.const 0) exnref (ref.null exn) (ref.null exn) (ref.null exn))
  (func (;1;) (type 32) (result anyref)
    (local i64)
    table.size 0
    i64.extend_i32_s
    local.tee 0
    i32.load align=1
    i32.popcnt
    loop (type 32) (result anyref) ;; label = @1
      local.get 0
      f32.load align=2
      struct.new 5
      i64.const -17592186044416
      loop (type 14) (result structref i64) ;; label = @2
        i64.const -83921124276497141
        i64.load8_s
        local.tee 0
        memory.size
        i64.load align=4
        i64.eqz
        f32.const -0x1.9b8912p-35 (;=-0.000000000046786162;)
        f32.trunc
        f32.trunc
        f32.trunc
        try_table (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) ;; label = @3
          struct.new_default 4
          ref.null 19
          table.size 0
          block (type 32) (result anyref) ;; label = @4
            f64.const 0x1.451cb6a72415dp-839 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003464390897555927;)
            f64.const 0x1.3179bc2e999cp+684 (;=95775293719386670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
            nop
            try_table (catch_all 1 (;@3;)) (catch_all 3 (;@1;)) (catch_all 3 (;@1;)) (catch_all 2 (;@2;)) (catch_all 2 (;@2;)) (catch_all 1 (;@3;)) (catch_all 1 (;@3;)) (catch_all 3 (;@1;)) (catch_all 3 (;@1;)) (catch_all 2 (;@2;)) ;; label = @5
              return_call 1
              block (type 14) (result structref i64) ;; label = @6
                call 1
                nop
                ref.cast (ref null 16)
                i32.const -2028156547
                f32.reinterpret_i32
                i32.trunc_f32_u
                f64.convert_i32_s
                memory.size
                i32.load8_u
                f64.convert_i32_u
                call 1
                elem.drop 1
                i32.const 1409938407
                f64.convert_i32_u
                f32.demote_f64
                return_call 1
                br_on_non_null 6
                f32.floor
                i32.trunc_f32_u
                i32.popcnt
                memory.size
                memory.size
                i64.const -4220690617167840008
                i64.clz
                i64.div_s
                i64.sub
                i64.load16_s
                struct.new 5
                br_on_non_null 6
                try_table ;; label = @7
                  f64.const 0x1.8e9619cb0eb3dp+331 (;=6811001886935828000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                  i64.trunc_sat_f64_u
                  f32.load
                  f64.const 0x1.8f5ffd7ab7784p-94 (;=0.00000000000000000000000000007876282342039141;)
                  block ;; label = @8
                    elem.drop 3
                    i32.const -869813232
                    f64.convert_i32_u
                    f64.sqrt
                    memory.size
                    f32.const 0x1.fffffp-129 (;=0.000000000000000000000000000000000000002938734;)
                    i32.trunc_f32_s
                    i32.eqz
                    br_table 0 (;@8;) 1 (;@7;) 3 (;@5;) 5 (;@3;) 6 (;@2;) 7 (;@1;) 0 (;@8;)
                    br 7 (;@1;)
                    memory.size
                    i32.wrap_i64
                    struct.new 5
                    struct.new 5
                    i64.const 6950009164591095785
                    i32.load8_s
                    f32.convert_i32_s
                    return_call 1
                    br_on_cast_fail 4 (;@4;) anyref (ref null 5)
                    i32.const 1128739552
                    i64.const -17
                    local.get 0
                    i64.ge_u
                    array.new_default 22
                    nop
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;2;) (type 0) (param i64 i32 f64) (result f32 nullexternref)
    unreachable
  )
  (func (;3;) (type 19) (param structref f32 f32))
  (func (;4;) (type 19) (param structref f32 f32))
)
