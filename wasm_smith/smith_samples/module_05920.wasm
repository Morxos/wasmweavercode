(module
  (rec
    (type (;0;) (struct (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field i16) (field i8) (field i16) (field f32) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field i8) (field (mut f64))))
    (type (;1;) (sub (struct (field i16) (field (mut externref)) (field i8) (field i8) (field i16) (field (mut f32)) (field i16) (field i16) (field (mut i16)) (field i32) (field f64))))
    (type (;2;) (func (param f64) (result i32 i64)))
    (type (;3;) (struct (field (mut i8)) (field i16) (field (mut f64)) (field i16) (field (mut i8)) (field i16) (field (mut f32)) (field i16) (field i16) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field f64) (field f32)))
    (type (;4;) (sub (func (param (ref null 2) i32) (result f32 f64 externref))))
    (type (;5;) (func))
    (type (;6;) (array i64))
  )
  (rec
    (type (;7;) (sub (struct (field (mut i8)) (field i32) (field i8) (field i16) (field (mut i16)) (field (mut f64)) (field i8) (field i8) (field f64))))
    (type (;8;) (struct (field (mut i16)) (field i16) (field (mut i8)) (field nullfuncref) (field (mut i8)) (field i16) (field i16) (field (mut i64)) (field (mut i8)) (field f32) (field i64) (field (mut i64)) (field i8) (field i64) (field (mut i8))))
    (type (;9;) (func))
    (type (;10;) (func (param i32 i32 f32 f32 eqref i32)))
    (type (;11;) (array (mut externref)))
    (type (;12;) (sub 1 (struct (field i16) (field (mut externref)) (field i8) (field i8) (field i16) (field (mut f32)) (field i16) (field i16) (field (mut i16)) (field i32) (field f64) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field i8))))
    (type (;13;) (struct (field (mut i8)) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field i8)))
    (type (;14;) (sub (func (param i32 i32))))
    (type (;15;) (sub (struct (field f64) (field (mut i32)) (field i64) (field i32) (field (mut i8)) (field i8) (field (mut f64)) (field (mut i16)) (field i8) (field (mut f32)) (field anyref) (field f32))))
    (type (;16;) (sub (func (param f64) (result i32))))
    (type (;17;) (sub (func)))
    (type (;18;) (sub (array (mut f32))))
    (type (;19;) (func (result i64)))
    (type (;20;) (struct (field (mut i8)) (field (mut i64)) (field (mut f32)) (field (mut f64)) (field i16) (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field i8) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field i8) (field nullref)))
    (type (;21;) (sub (func (param i64 f32))))
    (type (;22;) (sub (array (mut i16))))
    (type (;23;) (sub (func (param f64 f64 f32 f64))))
    (type (;24;) (array i16))
    (type (;25;) (func (param anyref f64)))
    (type (;26;) (sub (struct (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut (ref null 2))) (field (mut i16)) (field (mut i16)))))
    (type (;27;) (sub (struct (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field f64) (field (mut i8)) (field (mut i64)) (field funcref) (field (mut i16)) (field (mut arrayref)))))
    (type (;28;) (sub (func (param f64) (result f32 f64 f64))))
    (type (;29;) (struct (field (mut i16)) (field (mut f32)) (field (mut f32)) (field i16) (field (mut i16)) (field i8) (field i16) (field i16) (field i16) (field i8) (field i8) (field (mut i16)) (field i32) (field i8)))
    (type (;30;) (sub (struct (field (mut i16)) (field (mut i32)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i64) (field i16))))
    (type (;31;) (struct (field (mut i8)) (field i32) (field i16) (field i8) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i64))))
    (type (;32;) (sub (func (param (ref null 13) i32) (result i64 i32))))
    (type (;33;) (func (param structref) (result f32)))
    (type (;34;) (array (mut i8)))
    (type (;35;) (sub (struct (field i8) (field (mut i16)))))
    (type (;36;) (array (mut i8)))
    (type (;37;) (array (mut i8)))
    (type (;38;) (array (mut f32)))
    (type (;39;) (sub (struct (field (mut exnref)) (field (mut nullref)) (field (mut i8)) (field (mut i16)) (field i16) (field f32))))
    (type (;40;) (sub (func)))
    (type (;41;) (sub (array (mut f32))))
    (type (;42;) (array (mut i8)))
    (type (;43;) (array (mut f64)))
    (type (;44;) (array (mut i16)))
    (type (;45;) (array i8))
    (type (;46;) (func (param i64 i32)))
    (type (;47;) (sub (struct (field (mut i8)) (field i64) (field i64) (field (mut i8)))))
    (type (;48;) (array (mut i8)))
    (type (;49;) (sub (func)))
    (type (;50;) (sub (array (mut i16))))
    (type (;51;) (sub (array i16)))
  )
  (table (;0;) i64 7255 (ref null 4))
  (export "" (func 3))
  (export "5\u{f}\u{1d}5" (table 0))
  (func (;0;) (type 2) (param f64) (result i32 i64)
    try_table (type 17) ;; label = @1
      table.size 0
      try_table (type 5) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) ;; label = @2
        br 0 (;@2;)
        block ;; label = @3
          i32.const 144555046
          ref.i31
          try_table (catch_all 2 (;@1;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 2 (;@1;)) (catch_all 0 (;@3;)) (catch_all 2 (;@1;)) ;; label = @4
            br 1 (;@3;)
            f64.const -0x1.dc65c3b08eea9p-193 (;=-0.00000000000000000000000000000000000000000000000000000000014823145140522261;)
            f64.nearest
            i64.const 1125899906842623
            i64.extend8_s
            f64.convert_i64_s
            try_table (type 9) (catch_all 1 (;@3;)) (catch_all 2 (;@2;)) (catch_all 1 (;@3;)) (catch_all 3 (;@1;)) ;; label = @5
              block (type 9) ;; label = @6
                call 3
              end
              try_table (type 40) (catch_all 3 (;@2;)) (catch_all 4 (;@1;)) (catch_all 3 (;@2;)) (catch_all 4 (;@1;)) (catch_all 4 (;@1;)) (catch_all 0 (;@5;)) (catch_all 4 (;@1;)) ;; label = @6
                try_table (type 17) (catch_all 4 (;@2;)) (catch_all 3 (;@3;)) (catch_all 1 (;@5;)) (catch_all 2 (;@4;)) (catch_all 1 (;@5;)) (catch_all 4 (;@2;)) (catch_all 4 (;@2;)) (catch_all 0 (;@6;)) (catch_all 0 (;@6;)) (catch_all 0 (;@6;)) ;; label = @7
                  table.size 0
                  f32.convert_i64_s
                  i64.trunc_sat_f32_s
                  i64.ctz
                  loop (type 40) ;; label = @8
                    table.size 0
                    block (type 49) ;; label = @9
                      call 3
                      f32.const 0x1.ffffep-130 (;=0.000000000000000000000000000000000000001469367;)
                      f32.ceil
                      i32.const 1245419098
                      f32.convert_i32_s
                      f32.const 0x1.fffffep-126 (;=0.000000000000000000000000000000000000023509886;)
                      f32.floor
                      br 1 (;@8;)
                      array.new_fixed 38 2
                      call 3
                      br 6 (;@3;)
                      call 3
                      array.len
                      f32.const 0x1.24cbd2p+10 (;=1171.1847;)
                      call 3
                      loop (type 9) ;; label = @10
                        local.get 0
                        br 3 (;@7;)
                        i32.trunc_f64_u
                        nop
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
              end
            end
            unreachable
          end
          unreachable
        end
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 2) (param f64) (result i32 i64)
    unreachable
  )
  (func (;2;) (type 21) (param i64 f32))
  (func (;3;) (type 40))
)
