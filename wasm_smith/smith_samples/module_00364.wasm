(module
  (type (;0;) (array (mut eqref)))
  (rec
    (type (;1;) (array i16))
    (type (;2;) (sub (func)))
    (type (;3;) (func (param f32 i32)))
    (type (;4;) (sub (struct (field i16) (field i16) (field i8) (field i16))))
  )
  (rec
    (type (;5;) (struct (field f64) (field i8) (field i16) (field (mut i8)) (field i8) (field (mut f64)) (field (mut i16)) (field (mut i32)) (field i16) (field (mut i16))))
    (type (;6;) (struct (field f32) (field (mut i8)) (field i8) (field (mut i64)) (field i16) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field i16) (field (mut anyref)) (field i32) (field f64) (field i8)))
    (type (;7;) (sub (func (param nullref) (result f64))))
    (type (;8;) (sub (array (mut i8))))
    (type (;9;) (struct (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field i16) (field i8) (field (mut f32)) (field i32) (field i16) (field f64) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i32) (field i32)))
    (type (;10;) (sub (array (mut i8))))
    (type (;11;) (struct (field f32) (field (mut i8)) (field (mut i16)) (field i8) (field f64) (field i16) (field (mut i64)) (field (mut i64)) (field i64)))
    (type (;12;) (func (param f32 externref) (result i64 i32 i64 f64 i64 f64)))
    (type (;13;) (func))
    (type (;14;) (array i8))
    (type (;15;) (sub (array i16)))
    (type (;16;) (struct (field i8) (field (mut i32)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8))))
    (type (;17;) (sub (array (mut i8))))
    (type (;18;) (sub (struct (field (mut i16)) (field i8) (field i8) (field (mut f64)))))
    (type (;19;) (sub (struct (field i8) (field i64) (field i32) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8) (field i16) (field i8) (field i8) (field i16) (field i8) (field i8) (field (mut i16)) (field (mut f32)) (field i8) (field (mut f32)) (field (mut i8)) (field (mut i16)))))
    (type (;20;) (func (param f32 f64) (result i32)))
    (type (;21;) (sub (func (param i64 f64 i32) (result i64))))
    (type (;22;) (sub (struct (field f32) (field i16) (field i16) (field anyref) (field (mut f64)) (field anyref) (field exnref) (field (mut nullfuncref)) (field f64))))
    (type (;23;) (array (mut i64)))
    (type (;24;) (array f32))
    (type (;25;) (sub (struct (field (mut i16)) (field i16) (field (mut nullexternref)) (field i32) (field i16) (field i64) (field i16) (field (mut f64)) (field i8) (field (mut i64)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field f64) (field (mut i8)) (field (mut i32)))))
    (type (;26;) (array (mut i16)))
    (type (;27;) (sub (func (result f64 f32 i31ref i32))))
    (type (;28;) (sub (func (param i32) (result f64 i32 i64))))
    (type (;29;) (struct (field i8) (field (mut i64)) (field i8) (field (ref null 9)) (field i16)))
    (type (;30;) (sub (func (param i64) (result i32))))
    (type (;31;) (array (mut structref)))
    (type (;32;) (array f64))
    (type (;33;) (func))
    (type (;34;) (struct (field (mut i8)) (field (mut (ref null 4))) (field i16) (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field f64) (field arrayref) (field (mut i16)) (field f32) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field (mut i16))))
    (type (;35;) (struct (field (mut nullfuncref)) (field structref) (field i16) (field (mut f64)) (field (mut f64)) (field (mut i16)) (field (mut f32)) (field i16) (field (mut i8)) (field (mut i16)) (field i64) (field (mut i8)) (field f32) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field i16) (field (ref null 13))))
    (type (;36;) (sub (func (result funcref))))
    (type (;37;) (func (param f64 f32)))
    (type (;38;) (array (mut i16)))
    (type (;39;) (sub (struct (field (mut i16)) (field (mut i8)) (field i64) (field i64) (field (mut f64)) (field i16) (field f32) (field i8) (field (mut i8)) (field (mut f64)) (field i8) (field i16) (field (mut f64)) (field f64) (field i16) (field f64) (field f32))))
    (type (;40;) (struct (field (mut i8)) (field i8)))
    (type (;41;) (array (mut i8)))
    (type (;42;) (func (param i32 i32) (result structref i32)))
    (type (;43;) (array f64))
    (type (;44;) (func))
    (type (;45;) (sub (array (mut nullfuncref))))
    (type (;46;) (sub (func (param f32 i31ref i32 (ref null 19)))))
    (type (;47;) (func))
    (type (;48;) (array i8))
    (type (;49;) (sub (struct (field nullfuncref) (field (mut i8)) (field f64) (field (mut i8)) (field i16) (field (mut i8)) (field (ref null 43)) (field (mut i8)) (field (mut f32)) (field (mut i64)) (field i16) (field (mut i8)) (field i16) (field i8))))
    (type (;50;) (sub (func)))
    (type (;51;) (sub final 15 (array i16)))
    (type (;52;) (sub final 45 (array (mut nullfuncref))))
    (type (;53;) (array (mut i8)))
    (type (;54;) (sub (func (param nullexternref))))
    (type (;55;) (sub (array (mut f64))))
    (type (;56;) (sub (array i16)))
    (type (;57;) (array i8))
    (type (;58;) (sub (array i8)))
    (type (;59;) (func (param i32) (result i64)))
    (type (;60;) (struct (field (mut i16)) (field (mut i8)) (field i8) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i8))))
    (type (;61;) (sub (array (mut externref))))
    (type (;62;) (sub (struct (field i8) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field f32) (field f64))))
    (type (;63;) (struct))
    (type (;64;) (array i8))
  )
  (table (;0;) i64 0 (ref null 58))
  (tag (;0;) (type 50))
  (tag (;1;) (type 13))
  (tag (;2;) (type 33))
  (elem (;0;) structref (ref.null struct) (ref.null 39) (ref.null 35))
  (func (;0;) (type 36) (result funcref)
    data.drop 0
    struct.new 63
    extern.convert_any
    try_table (type 27) (result f64 f32 i31ref i32) ;; label = @1
      i64.const -256
      try_table (type 2) ;; label = @2
        i32.const -131072
        f32.convert_i32_s
        f32.ceil
        i64.trunc_f32_s
        call 0
        br_on_null 0 (;@2;)
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "i\8e")
)
