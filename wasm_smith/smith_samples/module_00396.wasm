(module
  (rec
    (type (;0;) (func (param f32) (result i64 f32 i32)))
    (type (;1;) (func (result i64 f32 i64 i32 i64 f64)))
    (type (;2;) (sub (array i32)))
    (type (;3;) (sub (struct (field i8) (field (mut i16)) (field (mut f64)) (field i8) (field (mut i16)) (field (mut i8)) (field anyref) (field i8) (field i16))))
    (type (;4;) (sub (array i8)))
    (type (;5;) (array (mut i32)))
    (type (;6;) (func))
    (type (;7;) (sub (struct (field i16) (field (mut i16)) (field f64) (field (mut f32)) (field i16) (field (mut i8)) (field i8) (field i16) (field i16) (field (mut i8)) (field (mut eqref)) (field (mut i8)) (field i64) (field i16) (field f64) (field i16))))
    (type (;8;) (sub 2 (array i32)))
    (type (;9;) (sub (func (result i64))))
    (type (;10;) (sub final 4 (array i8)))
    (type (;11;) (func (param f32 nullref)))
    (type (;12;) (sub (array exnref)))
    (type (;13;) (sub (struct (field i8) (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut f32)))))
    (type (;14;) (func (param nullexternref)))
    (type (;15;) (sub (array (mut f64))))
    (type (;16;) (sub (func (result i32))))
    (type (;17;) (sub (array (mut f64))))
    (type (;18;) (sub (func (param f64 i32 f64 (ref null 7) eqref i32 f64 f32 i64))))
    (type (;19;) (sub (array i8)))
    (type (;20;) (array (mut i32)))
    (type (;21;) (sub (struct (field f32) (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field i16) (field (mut i8)))))
    (type (;22;) (func (result (ref null 15) f32)))
    (type (;23;) (sub (array i64)))
    (type (;24;) (sub (array i16)))
    (type (;25;) (func (param f64 i64)))
    (type (;26;) (func (result f32)))
    (type (;27;) (func))
    (type (;28;) (array (mut i16)))
    (type (;29;) (sub (array i16)))
    (type (;30;) (func (param nullexternref)))
    (type (;31;) (sub (func)))
    (type (;32;) (array i8))
    (type (;33;) (func))
    (type (;34;) (func (result i32)))
    (type (;35;) (array (mut i16)))
    (type (;36;) (struct (field (mut f32)) (field i32) (field (mut i32)) (field i8) (field i8) (field (mut i8)) (field f32) (field f64) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field i32) (field i16) (field (mut i8)) (field (mut anyref)) (field (mut i8))))
    (type (;37;) (sub (func (param f64))))
    (type (;38;) (func (param f64) (result f32 f64 f64 i32)))
    (type (;39;) (array (mut i8)))
    (type (;40;) (sub (func)))
    (type (;41;) (struct (field (mut i64)) (field i16) (field i8)))
    (type (;42;) (func (result (ref null 30) i32 nullfuncref)))
    (type (;43;) (sub (array (mut i8))))
    (type (;44;) (struct (field (mut f32)) (field anyref) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field f32) (field i16) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut (ref null 1))) (field (mut nullfuncref))))
    (type (;45;) (sub (func)))
    (type (;46;) (func (param f64 f32) (result (ref null 6))))
    (type (;47;) (array i16))
    (type (;48;) (struct (field (mut i8))))
    (type (;49;) (sub (func (param f64))))
    (type (;50;) (func))
    (type (;51;) (struct (field i32) (field i16) (field (mut i64)) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field i8)))
  )
  (rec
    (type (;52;) (sub (array (mut i8))))
    (type (;53;) (sub (struct (field (mut i16)) (field i16) (field i32) (field i16) (field i32) (field (mut arrayref)) (field i16) (field (mut f64)) (field (ref null 5)) (field (mut i32)) (field i16) (field i16) (field (mut i8)))))
    (type (;54;) (func (param i32 (ref null 44)) (result i64)))
    (type (;55;) (sub (struct)))
    (type (;56;) (sub (func)))
    (type (;57;) (func (param f32 i32 funcref) (result i32 f64)))
    (type (;58;) (sub (struct (field f64) (field (mut f64)) (field (mut i16)) (field i64) (field i16) (field i8) (field (mut f64)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i8)))))
    (type (;59;) (sub (array i16)))
    (type (;60;) (struct (field (mut (ref null 58))) (field (mut externref)) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field f64) (field (mut i32)) (field i16) (field (mut i64)) (field (mut i16)) (field f64) (field (mut i64)) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field (mut i16))))
    (type (;61;) (sub (func (param f64 i32) (result f32))))
    (type (;62;) (sub (struct (field i16) (field f32) (field (mut f64)) (field i64) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut f32)) (field f64) (field f32) (field i8) (field (mut i32)))))
    (type (;63;) (struct (field i8)))
    (type (;64;) (struct (field (mut f64)) (field i16) (field (mut f32))))
    (type (;65;) (sub (func (param i64 i32 i32 i32 f32) (result i32))))
    (type (;66;) (sub (array (mut i8))))
    (type (;67;) (sub (struct (field i8) (field i16))))
  )
  (import "`" "" (global (;0;) (mut f32)))
  (memory (;0;) i64 12337)
  (global (;1;) (ref null 34) ref.null nofunc)
  (elem (;0;) eqref (ref.null 63))
  (func (;0;) (type 27)
    call 0
    f64.const 0x1.p-1063 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001012;)
    i32.trunc_sat_f64_s
    i32.eqz
    br_if 0
    f32.const 0x1.p-147 (;=0.000000000000000000000000000000000000000000006;)
    f32.sqrt
    block (type 40) ;; label = @1
      struct.new_default 55
      br 0 (;@1;)
      i64.const -4695537644954869000
      i64.extend16_s
      i64.ctz
      i64.clz
      memory.size
      return_call 0
      i64.load32_u offset=147117671 align=1
      i64.store8 offset=16636878128018519313
      ref.as_non_null
      ref.test (ref none)
      array.new_default 43
      call 0
      try_table (type 50) (catch_all 0 (;@1;)) (catch_all 1) (catch_all 1) (catch_all 0 (;@1;)) (catch_all 1) (catch_all 1) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) ;; label = @2
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "\e5")
)
