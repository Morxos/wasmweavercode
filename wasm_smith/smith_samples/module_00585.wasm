(module
  (rec
    (type (;0;) (sub (func (param f32 i31ref exnref eqref))))
    (type (;1;) (struct (field externref) (field i16) (field i16) (field (mut i16)) (field i16) (field f32) (field i8) (field (mut i8)) (field anyref) (field i8) (field (mut i8)) (field i8) (field i8) (field i8)))
    (type (;2;) (sub (array (mut i16))))
    (type (;3;) (array (mut arrayref)))
    (type (;4;) (func (param eqref anyref eqref) (result i32)))
    (type (;5;) (func (param i32)))
    (type (;6;) (sub (array i16)))
    (type (;7;) (sub (array i8)))
    (type (;8;) (sub (struct (field i16))))
    (type (;9;) (struct (field i64) (field (mut i64)) (field (mut i16)) (field f64) (field i8) (field (mut anyref)) (field f32) (field f64) (field i32) (field f32) (field i16) (field (mut i16)) (field i8)))
    (type (;10;) (struct (field (mut i16)) (field i8) (field i8) (field i8) (field i32) (field i8) (field (mut i8))))
    (type (;11;) (sub (func (param f32 externref))))
    (type (;12;) (sub (struct (field (mut i16)))))
    (type (;13;) (sub (func (result funcref f64))))
    (type (;14;) (sub 8 (struct (field i16) (field (mut i16)) (field i8) (field f64))))
    (type (;15;) (sub (array (mut i16))))
    (type (;16;) (sub final 14 (struct (field i16) (field (mut i16)) (field i8) (field f64) (field i32) (field (mut f32)))))
    (type (;17;) (sub (func (param i32 f64 i64 i32) (result i64 f64 f64))))
    (type (;18;) (sub (func (param f32 exnref) (result i64))))
    (type (;19;) (struct (field i16) (field (mut f64)) (field i16) (field (mut i16))))
    (type (;20;) (struct (field (mut i16)) (field (mut i8))))
    (type (;21;) (sub (struct (field i64) (field i8) (field f64))))
    (type (;22;) (sub (array i8)))
    (type (;23;) (sub (struct (field i64) (field i8))))
    (type (;24;) (sub (array (mut f32))))
    (type (;25;) (struct (field i16) (field (mut i8)) (field i16) (field (mut i16)) (field f64) (field i8)))
    (type (;26;) (struct (field structref) (field i8) (field i16) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field i8) (field (mut i16)) (field f64) (field f64) (field i8) (field i16)))
    (type (;27;) (array i32))
    (type (;28;) (sub (array (mut f64))))
    (type (;29;) (sub (array f32)))
    (type (;30;) (sub (struct (field (mut i64)) (field i16) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field f64) (field i32) (field (mut i16)) (field (mut i16)))))
    (type (;31;) (sub (array i16)))
    (type (;32;) (sub 15 (array (mut i16))))
    (type (;33;) (struct (field i16) (field i16) (field (mut i64)) (field i16) (field i8) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i64)) (field i8) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i32))))
    (type (;34;) (struct))
    (type (;35;) (sub (struct (field nullref) (field i32) (field (mut i8)) (field (mut f32)) (field (mut i8)))))
    (type (;36;) (array i8))
    (type (;37;) (struct (field (mut i16)) (field f32) (field (mut i16)) (field i64) (field i16) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field i8) (field (mut f32)) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field i16) (field i8) (field (mut i16)) (field (mut i32)) (field i8)))
    (type (;38;) (sub (struct)))
    (type (;39;) (array i32))
    (type (;40;) (array (mut i8)))
  )
  (import ":" "'" (global (;0;) (mut f64)))
  (export "" (func 0))
  (func (;0;) (type 0) (param f32 i31ref exnref eqref)
    (local f64 nullfuncref f32)
    i64.const -479663221795197587
    f32.convert_i64_u
    i32.trunc_f32_s
    f32.reinterpret_i32
    f32.abs
    local.get 6
    f32.abs
    i64.trunc_f32_u
    return
    block (type 13) (result funcref f64) ;; label = @1
      local.get 4
      i64.trunc_sat_f64_s
      i64.eqz
      struct.new 12
      try_table (result f64) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) ;; label = @2
        global.get 0
        i64.trunc_sat_f64_u
        block (type 13) (result funcref f64) ;; label = @3
          data.drop 0
          nop
          i64.const -34359738368
          f32.const 0x1.5e5a76p-14 (;=0.00008353075;)
          f32.abs
          local.set 6
          data.drop 0
          struct.new 38
          i32.const 4194303
          f64.const 0x1.b13062141f424p-508 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002019294460847755;)
          i32.const -32769
          i64.extend_i32_u
          i64.extend16_s
          i64.eqz
          i32.eqz
          f32.const 0x1.cp-147 (;=0.00000000000000000000000000000000000000000001;)
          loop (type 13) (result funcref f64) ;; label = @4
            nop
            loop (type 13) (result funcref f64) ;; label = @5
              try_table (type 13) (result funcref f64) (catch_all 0 (;@5;)) (catch_all 0 (;@5;)) (catch_all 5) (catch_all 1 (;@4;)) (catch_all 1 (;@4;)) ;; label = @6
                i32.const 1451291169
                f64.const 0x1.fb35735e02d27p+119 (;=1316789307659921400000000000000000000;)
                f64.sqrt
                i64.const 8796093022207
                global.get 0
                f64.sqrt
                i32.const 8191
                f32.reinterpret_i32
                f32.neg
                br 2 (;@4;)
                i64.const 5588778861696991127
                loop (result f64) ;; label = @7
                  struct.new_default 20
                  br_on_null 3 (;@4;)
                  i64.const 511
                  i64.extend32_s
                  i64.popcnt
                  loop (result f32) ;; label = @8
                    local.get 5
                    br 4 (;@4;)
                    return
                    struct.new 38
                    f32.const -0x1.c16c64p-23 (;=-0.00000020927908;)
                    f32.nearest
                    f32.nearest
                    f32.sqrt
                    i64.trunc_f32_s
                    f32.convert_i64_u
                    f32.ceil
                    ref.null 32
                    local.get 0
                    i64.trunc_sat_f32_u
                    i32.const -65537
                    i64.const -6137052339359048327
                    i32.wrap_i64
                    i32.gt_s
                    f32.convert_i32_u
                    f32.sqrt
                    f32.sqrt
                    i32.trunc_f32_u
                    f64.const -0x1.fffffffffffffp+896 (;=-1056589062271330400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                    try_table (result i32) (catch_all 3 (;@5;)) (catch_all 1 (;@7;)) (catch_all 1 (;@7;)) (catch_all 3 (;@5;)) (catch_all 3 (;@5;)) (catch_all 8) ;; label = @9
                      f64.const -0x1.741a1d020c7ebp-399 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011257806379328475;)
                      i64.const -8059594696619200863
                      loop (type 13) (result funcref f64) ;; label = @10
                        br 0 (;@10;)
                        local.get 5
                        struct.new_default 14
                        struct.get_u 14 0
                        br 5 (;@5;)
                        f32.const 0x1.5p-144 (;=0.000000000000000000000000000000000000000000059;)
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
            end
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "")
  (data (;1;) "")
  (data (;2;) "")
)
