(module
  (rec
    (type (;0;) (array (mut i16)))
    (type (;1;) (sub (array i8)))
    (type (;2;) (sub 1 (array i8)))
    (type (;3;) (struct (field (mut i16)) (field (mut i32))))
    (type (;4;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i64)) (field i64) (field (mut f64)) (field i8) (field i16) (field (mut f32)) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)))))
    (type (;5;) (sub (func (param f64 i64 f64))))
    (type (;6;) (sub (func (param i64 f32))))
    (type (;7;) (array (mut i16)))
    (type (;8;) (sub (struct (field (mut i8)) (field i16) (field (mut i16)) (field i64) (field (mut i16)) (field (mut i8)) (field (mut i16)))))
    (type (;9;) (func (param f32)))
    (type (;10;) (struct (field i8) (field i16) (field i32) (field i16) (field i8) (field (mut i8)) (field i64) (field f32) (field i8)))
    (type (;11;) (sub (array i8)))
    (type (;12;) (sub (array (mut i16))))
    (type (;13;) (func))
    (type (;14;) (sub (array (mut i16))))
    (type (;15;) (struct (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field i64) (field (mut i8)) (field (mut i8)) (field i16) (field i8) (field f32) (field (mut i16))))
    (type (;16;) (sub (struct (field i32) (field (mut i16)) (field i16) (field (mut f32)) (field i16))))
    (type (;17;) (sub (struct (field f32) (field i8) (field (mut f64)) (field i8) (field (mut i32)) (field (mut f64)) (field arrayref) (field (mut i8)))))
    (type (;18;) (sub (struct (field i8) (field i8) (field i8) (field i8) (field i16) (field i8) (field i8) (field (mut f32)) (field i8))))
    (type (;19;) (array (mut i8)))
    (type (;20;) (sub (func (param i31ref f32 f32 f32))))
    (type (;21;) (struct (field nullexternref)))
    (type (;22;) (sub (func)))
    (type (;23;) (func (param f32)))
    (type (;24;) (func (param i64)))
    (type (;25;) (array (mut i16)))
    (type (;26;) (sub (array i8)))
    (type (;27;) (array (mut i64)))
    (type (;28;) (sub (struct (field nullexternref) (field i8))))
    (type (;29;) (array i8))
    (type (;30;) (sub (func (param i32 f64 (ref null 17)))))
    (type (;31;) (sub (func (result exnref))))
    (type (;32;) (func))
    (type (;33;) (sub (array i16)))
    (type (;34;) (func (result i64 i64)))
  )
  (import "\u{0}{\u{18}%H\u{d}\u{3}" "" (tag (;0;) (type 22)))
  (table (;0;) i64 285 743704 (ref null 28))
  (memory (;0;) 8 11060 shared)
  (global (;0;) f32 f32.const -0x1.454c94p-19 (;=-0.0000024236674;))
  (global (;1;) (mut i64) i64.const 0)
  (global (;2;) (mut i32) i32.const 0)
  (global (;3;) (mut i32) i32.const 0)
  (global (;4;) (mut i64) i64.const 0)
  (export "" (table 0))
  (start 1)
  (elem (;0;) declare arrayref (ref.null 0) (ref.null 29))
  (elem (;1;) declare (ref null 7))
  (elem (;2;) (table 0) (i64.const 0) (ref null 28) (ref.null none))
  (elem (;3;) (ref null 22))
  (func (;0;) (type 9) (param f32)
    call 1
    memory.size
    block ;; label = @1
      local.get 0
      loop ;; label = @2
        ref.null 28
        global.get 0
        br 0 (;@2;)
        struct.new_default 3
        loop (type 31) (result exnref) ;; label = @3
          f32.const 0x1.7a9e64p-71 (;=0.0000000000000000000006263721;)
          struct.new_default 16
          struct.new_default 4
          f64.const 0x1.071f5dab8769cp-776 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002586076836457516;)
          return_call 1
          i64.reinterpret_f64
          i64.extend16_s
          f32.convert_i64_s
          i32.trunc_f32_s
          i64.load16_s offset=151384 align=1
          call 1
          f32.convert_i64_u
          nop
          f32.sqrt
          local.set 0
          ref.cast (ref 4)
          f32.const -nan:0x7ff000 (;=NaN;)
          f32.trunc
          i64.const -34359738368
          block (type 13) ;; label = @4
            return_call 1
            return_call 1
            f32.const -0x1.d02662p+120 (;=-2410004200000000000000000000000000000;)
            i64.trunc_sat_f32_u
            f64.convert_i64_u
            global.get 0
            local.tee 0
            i64.trunc_f32_u
            br 1 (;@3;)
            try_table (type 22) (catch 0 1 (;@3;)) (catch_all 3 (;@1;)) (catch 0 4) (catch_all 4) (catch_all 0 (;@4;)) (catch 0 2 (;@2;)) (catch_all 2 (;@2;)) (catch_all 4) (catch 0 1 (;@3;)) ;; label = @5
              local.get 0
              f32.sqrt
              f32.sqrt
              f32.nearest
              f32.abs
              local.tee 0
              local.get 0
              global.get 0
              i32.trunc_f32_u
              i64.load32_s offset=212279 align=2
              loop (type 32) ;; label = @6
                try_table (type 22) (catch 0 0 (;@6;)) (catch_all 1 (;@5;)) (catch_all 4 (;@2;)) (catch_all 6) (catch_all 5 (;@1;)) (catch 0 0 (;@6;)) (catch_all 2 (;@4;)) ;; label = @7
                  table.size 0
                  i64.extend32_s
                  i64.ctz
                  br 0 (;@7;)
                  f64.reinterpret_i64
                  f64.ceil
                  local.get 0
                  i32.reinterpret_f32
                  i64.load16_u offset=177799
                  f64.convert_i64_s
                  f64.ge
                  f64.load offset=139347 align=4
                  loop (type 13) ;; label = @8
                    block (type 31) (result exnref) ;; label = @9
                      ref.null 34
                      ref.is_null
                      i64.load8_s offset=39861
                      local.get 0
                      f32.trunc
                      br 1 (;@8;)
                      block (type 32) ;; label = @10
                        memory.size
                        f64.const 0x1.ffffffff8p-1041 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084879831634;)
                        i64.const -1233223739590499756
                        i64.clz
                        array.new_fixed 27 0
                        return_call 1
                        ref.cast (ref 27)
                        br 9 (;@1;)
                        memory.size
                        i32.load8_s offset=358568
                        i32.load8_s offset=21197
                        i64.extend_i32_s
                        i32.const 588180872
                        f64.const -0x1.b694b5bc2ea3p-352 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018674598505229135;)
                        table.size 0
                        block (type 13) ;; label = @11
                          f32.const 0x1.6c8a2ep-12 (;=0.0003476522;)
                          ref.null 10
                          ref.null array
                          try_table (result i64) (catch_all_ref 2 (;@9;)) (catch 0 8 (;@3;)) (catch 0 1 (;@10;)) (catch 0 1 (;@10;)) (catch_all 9 (;@2;)) (catch_all 1 (;@10;)) (catch 0 1 (;@10;)) (catch 0 9 (;@2;)) (catch_all 3 (;@8;)) ;; label = @12
                            loop (result i32) ;; label = @13
                              elem.drop 0
                              call 1
                              table.size 0
                              call 1
                              i64.ctz
                              i64.extend32_s
                              global.get 1
                              i64.xor
                              global.set 1
                              i32.const -2016793229
                            end
                            global.get 2
                            i32.xor
                            global.set 2
                            i64.const 1048575
                          end
                          global.get 1
                          i64.xor
                          global.set 1
                          drop
                          drop
                          i32.reinterpret_f32
                          global.get 3
                          i32.xor
                          global.set 3
                        end
                        global.get 1
                        i64.xor
                        global.set 1
                        i64.reinterpret_f64
                        global.get 4
                        i64.xor
                        global.set 4
                        global.get 2
                        i32.xor
                        global.set 2
                        global.get 1
                        i64.xor
                        global.set 1
                        drop
                        global.get 1
                        i64.xor
                        global.set 1
                        i64.reinterpret_f64
                        global.get 4
                        i64.xor
                        global.set 4
                        global.get 2
                        i32.xor
                        global.set 2
                      end
                      i32.reinterpret_f32
                      global.get 3
                      i32.xor
                      global.set 3
                      global.get 1
                      i64.xor
                      global.set 1
                      ref.null exn
                    end
                    drop
                  end
                  i64.reinterpret_f64
                  global.get 4
                  i64.xor
                  global.set 4
                end
              end
              global.get 1
              i64.xor
              global.set 1
              i32.reinterpret_f32
              global.get 3
              i32.xor
              global.set 3
              i32.reinterpret_f32
              global.get 3
              i32.xor
              global.set 3
            end
            global.get 1
            i64.xor
            global.set 1
            i64.reinterpret_f64
            global.get 4
            i64.xor
            global.set 4
          end
          global.get 1
          i64.xor
          global.set 1
          i32.reinterpret_f32
          global.get 3
          i32.xor
          global.set 3
          drop
          drop
          i32.reinterpret_f32
          global.get 3
          i32.xor
          global.set 3
          ref.null exn
        end
        drop
        drop
        i32.reinterpret_f32
        global.get 3
        i32.xor
        global.set 3
        drop
      end
      i32.reinterpret_f32
      global.get 3
      i32.xor
      global.set 3
    end
    global.get 2
    i32.xor
    global.set 2
  )
  (func (;1;) (type 32)
    (local i64)
    i32.const 31
    i64.load offset=523973 align=4
    call 1
    i64.ctz
    i32.wrap_i64
    i64.extend_i32_s
    try_table (type 22) (catch_all 0) ;; label = @1
      f64.const 0x1.43207e16p-1043 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013392069775;)
      unreachable
    end
    unreachable
  )
)
