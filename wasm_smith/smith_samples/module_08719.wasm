(module
  (rec
    (type (;0;) (struct (field i16)))
    (type (;1;) (sub (array (mut i8))))
    (type (;2;) (sub (struct (field f64))))
    (type (;3;) (sub (array (mut i8))))
    (type (;4;) (sub (func (param f32 f64) (result nullfuncref))))
    (type (;5;) (func))
    (type (;6;) (array (mut i64)))
    (type (;7;) (sub (struct (field structref) (field (mut exnref)) (field (mut i16)) (field (mut i8)) (field (mut i64)) (field i32) (field i16) (field i16) (field f64) (field i16))))
    (type (;8;) (sub (func)))
    (type (;9;) (sub (struct (field externref) (field (mut i8)) (field (mut i32)) (field (mut funcref)) (field f32) (field f32) (field (mut i8)) (field i8) (field (mut i32)) (field i16) (field (mut i16)) (field (mut i16)) (field i8) (field i8) (field i16) (field f64) (field (mut i8)) (field (mut i16)) (field i8) (field f32))))
    (type (;10;) (sub (func)))
    (type (;11;) (sub (array (mut f32))))
    (type (;12;) (struct (field (mut i16)) (field i8) (field i8) (field f32) (field i16) (field f64) (field f32) (field i16)))
    (type (;13;) (func (result i31ref i32)))
    (type (;14;) (sub (func (result arrayref))))
    (type (;15;) (array (mut i8)))
    (type (;16;) (sub (array (mut f32))))
    (type (;17;) (sub 11 (array (mut f32))))
    (type (;18;) (func (param i32 f32 f32 f64)))
    (type (;19;) (array (mut i16)))
    (type (;20;) (sub (array i8)))
    (type (;21;) (sub (array (mut i8))))
    (type (;22;) (sub final 1 (array (mut i8))))
    (type (;23;) (sub (array (mut f32))))
    (type (;24;) (sub (func (param i32) (result f32))))
    (type (;25;) (func (result i32)))
    (type (;26;) (struct (field externref) (field i16)))
    (type (;27;) (func (result i32)))
    (type (;28;) (array i8))
    (type (;29;) (func))
    (type (;30;) (struct (field (ref null 12)) (field (mut i16)) (field f64) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field exnref) (field (mut i16))))
    (type (;31;) (struct (field (mut f64)) (field (mut f64)) (field (mut i16)) (field i16) (field i16) (field i64) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field (mut f32)) (field i8) (field i8) (field (mut eqref)) (field i8) (field (mut (ref null 30))) (field (mut i16)) (field (mut i8))))
    (type (;32;) (struct (field (mut i32))))
    (type (;33;) (sub (func (result f64))))
    (type (;34;) (sub (struct (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field f32) (field (mut externref)) (field (mut i16)) (field eqref) (field (mut (ref null 22))) (field i16) (field f32) (field (mut i8)))))
    (type (;35;) (func))
    (type (;36;) (func (param i32)))
    (type (;37;) (sub (array (mut i8))))
    (type (;38;) (struct (field i16) (field i8) (field i16) (field (mut i16)) (field i16) (field i16) (field (mut i32)) (field (mut i8)) (field (mut f32)) (field i8)))
    (type (;39;) (struct (field i64) (field (mut i16)) (field (mut i32))))
    (type (;40;) (sub (func)))
    (type (;41;) (func (param nullexternref) (result anyref i64)))
    (type (;42;) (sub (array (mut i64))))
    (type (;43;) (sub (struct (field (mut i32)) (field (mut anyref)) (field (mut i8)) (field (mut i8)) (field i8) (field i16) (field i16) (field (mut f32)) (field (mut f32)) (field i16))))
    (type (;44;) (sub (struct (field (mut i8)) (field i8) (field (mut externref)) (field i8) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut arrayref)) (field (mut i16)) (field (mut i8)) (field i16))))
    (type (;45;) (sub (array i8)))
    (type (;46;) (sub (array (mut i8))))
    (type (;47;) (struct (field (mut i16))))
    (type (;48;) (struct (field (mut i8)) (field i32) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8) (field funcref) (field i16) (field i8) (field i64) (field f64) (field i8) (field (mut i16)) (field (mut f32)) (field i8) (field i16)))
    (type (;49;) (sub (func (result f64 i64))))
    (type (;50;) (array (mut f32)))
    (type (;51;) (struct (field (mut i8)) (field (mut i8)) (field (mut funcref)) (field f32) (field (mut (ref null 10))) (field (mut i16)) (field (mut i8)) (field i8) (field i8) (field i64) (field f32) (field i8) (field (mut i8))))
    (type (;52;) (func (param (ref null 48)) (result i64)))
    (type (;53;) (struct (field (mut i8)) (field (mut i16))))
  )
  (tag (;0;) (type 8))
  (elem (;0;) (ref null 7))
  (elem (;1;) declare exnref)
  (elem (;2;) declare (ref null 48))
  (func (;0;) (type 49) (result f64 i64)
    (local i32)
    block (type 40) ;; label = @1
      struct.new_default 43
      br_on_null 0 (;@1;)
      data.drop 1
      return_call 0
      try_table (type 10) (catch 0 0 (;@1;)) (catch_all 0 (;@1;)) (catch 0 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch 0 0 (;@1;)) ;; label = @2
        try_table (type 5) (catch 0 1 (;@1;)) (catch 0 0 (;@2;)) (catch_all 1 (;@1;)) (catch 0 0 (;@2;)) ;; label = @3
          f32.const -0x1p+97 (;=-158456330000000000000000000000;)
          i64.trunc_f32_u
          f64.const -0x1.450bd88755b55p+863 (;=-78089291601544160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
          f64.const 0x1.f83c9cf19ea78p+275 (;=119575816278553900000000000000000000000000000000000000000000000000000000000000000000;)
          f64.lt
          br_table 0 (;@3;) 1 (;@2;) 2 (;@1;) 0 (;@3;)
          local.get 0
          i32.popcnt
          i32.extend8_s
          f64.convert_i32_s
          f32.const -0x1.fffffep+112 (;=-10384593000000000000000000000000000;)
          i32.const -1154499041
          br 1 (;@2;)
          i32.eqz
          i32.ctz
          local.set 0
          f32.sqrt
          loop (type 29) ;; label = @4
            f64.const -nan:0xff00000000000 (;=NaN;)
            f64.const 0x1.fffff8p-1053 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002072261;)
            try_table (type 13) (result i31ref i32) (catch_all 0 (;@4;)) (catch 0 1 (;@3;)) (catch 0 1 (;@3;)) (catch_all 3 (;@1;)) (catch 0 1 (;@3;)) (catch 0 0 (;@4;)) (catch_all 0 (;@4;)) (catch 0 1 (;@3;)) (catch 0 3 (;@1;)) (catch 0 0 (;@4;)) ;; label = @5
              br 4 (;@1;)
              data.drop 0
              call 0
              br 2 (;@3;)
              i64.extend32_s
              data.drop 0
              i64.ctz
              f64.const 0x1.ffffffff8p-1041 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084879831634;)
              try_table (type 14) (result arrayref) (catch_all 3 (;@2;)) ;; label = @6
                try_table (type 27) (result i32) (catch 0 4 (;@2;)) ;; label = @7
                  try_table (catch_all 3 (;@4;)) (catch 0 3 (;@4;)) (catch 0 5 (;@2;)) (catch_all 5 (;@2;)) (catch_all 6 (;@1;)) (catch_all 4 (;@3;)) (catch_all 5 (;@2;)) (catch 0 6 (;@1;)) ;; label = @8
                    ref.null 7
                    loop (type 40) ;; label = @9
                      block (type 25) (result i32) ;; label = @10
                        block (type 27) (result i32) ;; label = @11
                          try_table (type 13) (result i31ref i32) (catch_all 2 (;@9;)) (catch_all 3 (;@8;)) ;; label = @12
                            br 9 (;@3;)
                            loop (type 27) (result i32) ;; label = @13
                              return_call 0
                              data.drop 0
                              nop
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "\05\8c")
  (data (;1;) "\d00\d2\13")
  (data (;2;) "GM")
)
