(module
  (rec
    (type (;0;) (sub (struct (field i16) (field (mut i16)))))
    (type (;1;) (sub (func)))
    (type (;2;) (sub (array (mut i64))))
    (type (;3;) (array i16))
    (type (;4;) (sub (func (param i32))))
    (type (;5;) (sub (array i32)))
    (type (;6;) (sub (func (param i64 f64 i32))))
    (type (;7;) (sub (func (result i64))))
    (type (;8;) (sub (struct (field i16) (field i16))))
    (type (;9;) (sub (struct (field f32) (field (mut i32)) (field (mut i16)) (field i64) (field (mut i64)) (field (mut f64)) (field i16) (field i8) (field (mut f64)) (field (mut f32)) (field (mut i16)) (field i16) (field i8) (field (mut i32)) (field i8) (field f32))))
    (type (;10;) (struct (field (mut i8)) (field i16) (field i64) (field (mut i16)) (field (mut arrayref)) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field (mut f32)) (field (mut arrayref)) (field (mut f32)) (field (mut i8)) (field (mut i8))))
    (type (;11;) (sub (array (mut i8))))
    (type (;12;) (struct (field i8) (field (mut i8))))
    (type (;13;) (array (mut i32)))
    (type (;14;) (struct (field (mut i16)) (field (mut i8)) (field i8) (field (mut f64)) (field (mut i16)) (field (ref null 11)) (field i8) (field i8) (field (mut i32)) (field (mut i16)) (field i8) (field (mut i32)) (field arrayref) (field (mut f64)) (field (mut i8)) (field (ref null 10)) (field i8) (field (mut i64)) (field (mut i16)) (field (mut f32))))
    (type (;15;) (sub (struct (field i8) (field i32) (field i64) (field (mut i16)) (field i8) (field i8) (field i16) (field i8))))
    (type (;16;) (sub (array (mut i8))))
    (type (;17;) (func))
    (type (;18;) (sub (array (mut f32))))
    (type (;19;) (array f32))
    (type (;20;) (sub (array (mut i16))))
    (type (;21;) (sub (array (mut i16))))
    (type (;22;) (sub (func (result f32))))
    (type (;23;) (sub (struct (field i16) (field (mut i16)) (field i16) (field (mut i64)) (field i64) (field (mut i8)) (field i8) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field i8) (field i32) (field i8) (field i16) (field (mut i8)) (field i8))))
    (type (;24;) (struct (field i16) (field (mut i64)) (field i8) (field i8) (field i16) (field (mut i8))))
    (type (;25;) (array i32))
    (type (;26;) (sub (array (mut i32))))
    (type (;27;) (sub (func)))
    (type (;28;) (sub (struct (field (mut i8)) (field i16) (field (mut f32)) (field (mut i16)) (field (mut externref)) (field (mut i16)) (field (mut i64)) (field i8) (field (mut i32)) (field i16))))
    (type (;29;) (sub (array (mut i32))))
    (type (;30;) (struct (field (ref null 15)) (field (mut i8)) (field (mut i8)) (field (mut nullexternref)) (field (mut i8)) (field (mut (ref null 7))) (field (mut i32)) (field f32) (field (mut i16)) (field (mut arrayref)) (field i8) (field i16) (field i16) (field (mut i16)) (field i16) (field (mut i64)) (field i64) (field i16) (field i8) (field i8)))
    (type (;31;) (sub (array i8)))
    (type (;32;) (array f32))
    (type (;33;) (struct (field i8) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i64)) (field (mut f64)) (field (mut i64)) (field f32) (field (mut i16)) (field (mut (ref null 26)))))
    (type (;34;) (sub (func (result f32 f32 i31ref i64))))
    (type (;35;) (func (param i32 i32 (ref null 18) i64 nullref (ref null 34))))
    (type (;36;) (sub (struct (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field i32) (field (mut i8)) (field (mut i32)) (field (mut f64)))))
    (type (;37;) (array (mut i8)))
    (type (;38;) (sub (array (mut f64))))
    (type (;39;) (sub (array i16)))
    (type (;40;) (array (mut i16)))
    (type (;41;) (struct))
    (type (;42;) (array i64))
    (type (;43;) (struct (field i8) (field i8) (field i16) (field i32) (field (mut i16)) (field (mut i8))))
    (type (;44;) (array i64))
    (type (;45;) (sub (array i8)))
    (type (;46;) (sub (array i16)))
    (type (;47;) (sub (struct (field f64) (field i8) (field i8) (field i8) (field i8))))
    (type (;48;) (array i16))
    (type (;49;) (array (mut i8)))
    (type (;50;) (func (param arrayref)))
    (type (;51;) (sub (func)))
    (type (;52;) (sub (func (result i32))))
    (type (;53;) (sub (func (result f32 i32 f32 i32))))
    (type (;54;) (array (mut i16)))
    (type (;55;) (func (param f32 i32) (result i64 f64)))
    (type (;56;) (array f64))
    (type (;57;) (sub (func (result i64))))
    (type (;58;) (sub (func)))
    (type (;59;) (func (param f64)))
    (type (;60;) (sub (array (mut i16))))
    (type (;61;) (func))
    (type (;62;) (sub (struct (field (mut funcref)) (field (mut i64)) (field (mut i8)) (field (mut (ref null 13))) (field (mut i16)) (field i16) (field (ref null 25)) (field exnref))))
    (type (;63;) (sub (func (param f64 i32 i32))))
    (type (;64;) (sub final 46 (array i16)))
    (type (;65;) (sub (func (result i64 f64))))
    (type (;66;) (sub (func (result i32 i32 anyref structref))))
    (type (;67;) (func))
    (type (;68;) (sub (array f64)))
    (type (;69;) (sub final 63 (func (param f64 i32 i32))))
    (type (;70;) (struct (field (mut (ref null 39))) (field (mut i16)) (field (mut i32)) (field i16) (field (mut i64)) (field (mut i32)) (field (mut i16)) (field (mut i16))))
    (type (;71;) (func))
    (type (;72;) (struct (field (mut (ref null 8))) (field f64) (field (mut i8)) (field i16) (field i8) (field i32) (field (mut i64)) (field (mut i64)) (field (mut i16)) (field (mut i64)) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i16)) (field i64) (field i8) (field (mut i8)) (field i16) (field i8)))
    (type (;73;) (sub (func (result f32 f64 f32))))
    (type (;74;) (func (param (ref null 46) (ref null 27))))
  )
  (import "e2r" "t\u{2}" (table (;0;) 0 829095 (ref null 41)))
  (import "b" "" (tag (;0;) (type 67)))
  (func (;0;) (type 4) (param i32)
    throw 0
    call 1
    f64.const 0x1.cp-1072 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035;)
    br 0
    struct.new 41
    ref.cast (ref 41)
    struct.new 41
    ref.test (ref 41)
    nop
    unreachable
  )
  (func (;1;) (type 66) (result i32 i32 anyref structref)
    unreachable
  )
)
