(module
  (rec
    (type (;0;) (sub (func (param i32) (result f64 i32 f64))))
    (type (;1;) (array i16))
    (type (;2;) (struct (field (mut i8)) (field i8) (field i16) (field (mut i16)) (field i64)))
    (type (;3;) (sub (struct (field (mut i16)) (field i16) (field i8) (field i8) (field (mut i8)) (field i8) (field (mut i8)) (field i8) (field f64) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field f64) (field i16) (field i8))))
    (type (;4;) (sub (struct (field (mut f64)) (field i16) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field (mut i32)) (field i32) (field (mut i8)) (field nullfuncref) (field (mut i16)) (field (mut i32)))))
    (type (;5;) (func (param f32 f32 i32)))
    (type (;6;) (struct (field i8) (field funcref) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field (mut i8)) (field i64) (field i16) (field f64) (field (mut i32))))
    (type (;7;) (struct (field (mut i32)) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field (mut (ref null 6))) (field (mut i8)) (field i8) (field (mut i16))))
    (type (;8;) (func (param i32 i64) (result f32 f32 i32 i64)))
    (type (;9;) (struct (field (mut i16))))
    (type (;10;) (sub (func (result f64 f32 f64))))
    (type (;11;) (sub (struct (field (mut f64)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field (mut i64)) (field (mut i8)) (field (mut i64)) (field i16) (field i32) (field (mut i8)) (field (mut i32)) (field i64))))
    (type (;12;) (sub (array i16)))
    (type (;13;) (array (mut i8)))
    (type (;14;) (struct (field f32) (field (mut i16)) (field f32) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field i16)))
    (type (;15;) (func))
    (type (;16;) (sub (func (param nullref))))
    (type (;17;) (struct (field i8) (field i16)))
    (type (;18;) (func (param f64 i32) (result funcref f32 f64 i32 f32 (ref null 3))))
    (type (;19;) (sub (array (mut i64))))
    (type (;20;) (func (result nullref i32)))
    (type (;21;) (array (mut i16)))
    (type (;22;) (struct (field (mut i16)) (field (mut i8)) (field f64) (field (mut i64)) (field i16) (field i16) (field (mut f64)) (field eqref) (field (mut i8)) (field (mut i32)) (field (mut i16)) (field (mut f32)) (field (mut i32))))
    (type (;23;) (struct (field i8) (field (mut i8)) (field (mut i8))))
    (type (;24;) (func (result i31ref)))
    (type (;25;) (struct (field i32) (field i16) (field funcref) (field i8) (field (mut i16)) (field (mut arrayref)) (field (mut i64)) (field i8) (field i8) (field i16) (field (mut i8)) (field i16)))
    (type (;26;) (sub (array i16)))
    (type (;27;) (struct (field (mut i8)) (field (mut i16)) (field f32) (field (mut nullexternref)) (field i16) (field i16) (field i8) (field i16) (field (mut i16))))
    (type (;28;) (func (param f32 f32)))
    (type (;29;) (func (result f64 f64 f64 i64)))
    (type (;30;) (array (mut i16)))
    (type (;31;) (sub (array (mut i64))))
    (type (;32;) (struct (field (mut i8))))
    (type (;33;) (array i32))
    (type (;34;) (sub (array f32)))
    (type (;35;) (sub (array i8)))
    (type (;36;) (sub (struct (field i8) (field i64) (field i16) (field i16) (field i16) (field i16) (field (mut i64)) (field i64) (field i16) (field (mut i16)) (field i16))))
    (type (;37;) (sub (struct (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i32)) (field i64) (field exnref) (field (mut i8)) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field i32) (field (mut i32)) (field (mut i32)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field anyref) (field i16))))
    (type (;38;) (sub (struct (field i8) (field i16) (field i16) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field f32) (field (mut f32)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut f64)) (field (mut arrayref)) (field i16) (field (mut i64)) (field f64))))
    (type (;39;) (sub (struct (field f64) (field (mut i64)) (field i16) (field i8) (field (mut i16)) (field (mut i8)) (field i8) (field i8) (field i16) (field i16) (field (mut i64)) (field i8) (field (mut i8)) (field (mut i32)))))
    (type (;40;) (func (result i64)))
    (type (;41;) (func (result f64 f32)))
    (type (;42;) (sub (array i16)))
  )
  (global (;0;) (mut i64) i64.const 0)
  (global (;1;) (mut i64) i64.const 0)
  (elem (;0;) nullref (ref.null none))
  (func (;0;) (type 18) (param f64 i32) (result funcref f32 f64 i32 f32 (ref null 3))
    (local i64)
    f32.const -0x1.fffffep+124 (;=-42535293000000000000000000000000000000;)
    i64.trunc_f32_u
    nop
    f32.convert_i64_s
    f64.promote_f32
    local.get 1
    block (type 10) (result f64 f32 f64) ;; label = @1
      ref.null 39
      i64.const 2199023255551
      f32.convert_i64_s
      i32.trunc_sat_f32_s
      f64.convert_i32_s
      i64.reinterpret_f64
      f32.convert_i64_s
      f64.const -nan:0xfffffffffff00 (;=NaN;)
      try_table (type 24) (result i31ref) ;; label = @2
        f64.const 0x1.657e40fdb8f95p+531 (;=9816473359942266000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
        f64.abs
        f64.ceil
        loop (type 20) (result nullref i32) ;; label = @3
          br 0 (;@3;)
          ref.null 1
          ref.as_non_null
          br_on_null 0 (;@3;)
          f64.const -nan:0xfffffffffffdf (;=NaN;)
          f64.ceil
          f64.trunc
          br 0 (;@3;)
          try_table (type 15) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) ;; label = @4
            f64.const -nan:0xffffffffffeff (;=NaN;)
            f32.demote_f64
            loop (type 40) (result i64) ;; label = @5
              block ;; label = @6
                f32.const 0x1.524c0cp+83 (;=12780502000000000000000000;)
                i64.const -4503599627370496
                array.new_fixed 19 0
                loop (type 41) (result f64 f32) ;; label = @7
                  try_table (type 15) (catch_all 3 (;@4;)) (catch_all 1 (;@6;)) (catch_all 2 (;@5;)) (catch_all 2 (;@5;)) (catch_all 0 (;@7;)) (catch_all 3 (;@4;)) (catch_all 1 (;@6;)) ;; label = @8
                    f32.const nan:0x7fffff (;=NaN;)
                    i64.trunc_sat_f32_s
                    f32.convert_i64_s
                    block (type 20) (result nullref i32) ;; label = @9
                      i32.const 1559674533
                      br 1 (;@8;)
                      br_if 3 (;@6;)
                      loop ;; label = @10
                        block (type 41) (result f64 f32) ;; label = @11
                          local.get 1
                          br 3 (;@8;)
                          br_table 1 (;@10;) 3 (;@8;) 4 (;@7;) 5 (;@6;) 6 (;@5;) 7 (;@4;) 8 (;@3;) 3 (;@8;)
                          try_table (type 10) (result f64 f32 f64) (catch_all 3 (;@8;)) (catch_all 6 (;@5;)) (catch_all 7 (;@4;)) (catch_all 3 (;@8;)) (catch_all 1 (;@10;)) (catch_all 7 (;@4;)) ;; label = @12
                            elem.drop 0
                            block (type 15) ;; label = @13
                              f64.const 0x1.ffffffffffep-1031 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000086916947597933;)
                              i64.trunc_f64_u
                              try_table (catch_all 6 (;@7;)) ;; label = @14
                                f64.const 0x1.p-1039 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000169759663277;)
                                i64.reinterpret_f64
                                global.get 0
                                i64.xor
                                global.set 0
                              end
                              global.get 1
                              i64.xor
                              global.set 1
                            end
                            f64.const 0x0p+0 (;=0;)
                            f32.const 0x0p+0 (;=0;)
                            f64.const 0x0p+0 (;=0;)
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
