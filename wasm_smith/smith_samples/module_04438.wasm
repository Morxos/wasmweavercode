(module
  (rec
    (type (;0;) (sub (func)))
    (type (;1;) (sub (struct (field f32) (field f64) (field (mut f32)) (field i8) (field i64) (field i8) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)))))
    (type (;2;) (sub (func (param i32 structref f64 f64))))
    (type (;3;) (sub (func (result i32))))
    (type (;4;) (array i16))
    (type (;5;) (sub (array (mut i8))))
    (type (;6;) (array (mut i16)))
    (type (;7;) (struct (field f64) (field (mut i8)) (field i16) (field (mut i8))))
    (type (;8;) (array i16))
    (type (;9;) (array (mut i8)))
    (type (;10;) (sub (struct (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field i8) (field i8) (field i16) (field (mut i8)) (field (mut i8)) (field i16) (field i8) (field i16) (field (mut i8)) (field (mut i31ref)) (field (ref null 1)) (field (mut i16)) (field i8) (field i16) (field (mut i64)))))
    (type (;11;) (func (result f32 arrayref)))
    (type (;12;) (sub (array i8)))
    (type (;13;) (array (mut i16)))
    (type (;14;) (sub (struct (field i16) (field (mut i8)) (field (mut i8)))))
    (type (;15;) (sub (array i8)))
    (type (;16;) (struct))
    (type (;17;) (struct (field (mut i16)) (field i8) (field i16) (field i16) (field i8) (field i8) (field (mut i16)) (field f32) (field i8) (field i32) (field i8) (field i8) (field i16) (field i16) (field (mut i8))))
    (type (;18;) (func (param f32 i31ref i32 f32 structref f64 f32)))
    (type (;19;) (struct (field i16) (field (mut i16)) (field f32) (field (mut f64)) (field i8) (field (mut i64)) (field structref) (field i16) (field i8) (field (mut i8)) (field (mut f64)) (field i16) (field i32) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field i16) (field (mut nullexternref))))
    (type (;20;) (sub final 0 (func)))
    (type (;21;) (array i8))
    (type (;22;) (sub (struct (field i8) (field f32) (field nullexternref) (field i8) (field i16) (field i16) (field (mut i64)) (field (mut i64)) (field (mut i16)) (field f32))))
    (type (;23;) (sub (struct (field f32) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field (mut i64)) (field (mut i8)) (field (mut i64)) (field i32))))
    (type (;24;) (sub (struct (field f64) (field (mut f32)) (field i8) (field (mut i16)) (field (mut i32)) (field (mut (ref null 17))) (field f64) (field (mut i16)) (field (mut i8)))))
    (type (;25;) (sub (struct)))
    (type (;26;) (func (result f64 i64)))
    (type (;27;) (struct (field (ref null 25))))
    (type (;28;) (struct (field (mut i16)) (field f32) (field (mut i16)) (field i8)))
    (type (;29;) (sub (func (result (ref null 5)))))
    (type (;30;) (sub (func)))
    (type (;31;) (sub (func (result i32 f64 f64))))
    (type (;32;) (struct (field i16) (field i8) (field (mut i8)) (field f64) (field (mut i8)) (field (mut f64)) (field (mut (ref null 4))) (field (mut i32)) (field (mut i8)) (field i16) (field i8) (field i8) (field (mut f64))))
    (type (;33;) (array i16))
    (type (;34;) (array i16))
    (type (;35;) (struct (field (mut i16)) (field (mut i8)) (field i16) (field (mut i32)) (field i64) (field i8) (field (mut f32)) (field (mut i32)) (field i16) (field (mut i16))))
    (type (;36;) (sub (struct (field i64) (field (mut i16)) (field structref) (field f64))))
    (type (;37;) (sub (array (mut i32))))
    (type (;38;) (array (mut i8)))
    (type (;39;) (func))
    (type (;40;) (func (param i64) (result i31ref i32)))
    (type (;41;) (sub (func (param i32))))
    (type (;42;) (func))
    (type (;43;) (func (param f32 f64 i32)))
    (type (;44;) (sub (array i16)))
    (type (;45;) (struct (field i16) (field (mut i16)) (field i8)))
    (type (;46;) (struct))
    (type (;47;) (array i16))
    (type (;48;) (array (mut i16)))
    (type (;49;) (struct (field i8) (field f64) (field (mut (ref null 24))) (field i16) (field (mut i32)) (field (mut i16)) (field (ref null 24)) (field (mut f32)) (field i8) (field (mut i8)) (field (mut f32)) (field (mut f32))))
    (type (;50;) (sub (struct (field i16) (field i8) (field (mut f32)) (field (mut i16)) (field f64) (field i16) (field f64) (field i16) (field (mut (ref null 41))) (field i64) (field (mut arrayref)) (field (mut i8)) (field i8) (field (mut i8)) (field f32) (field (mut i16)))))
  )
  (memory (;0;) i64 159 94741377614003)
  (global (;0;) (mut exnref) ref.null exn)
  (global (;1;) i64 i64.const -7729163024379905047)
  (global (;2;) (mut f64) f64.const 0x1.805625705cdb4p-792 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005763882376699415;))
  (start 0)
  (elem (;0;) declare funcref (ref.null 3))
  (func (;0;) (type 39)
    f32.const -0x1.fffffep+64 (;=-36893486000000000000;)
    f64.promote_f32
    f64.neg
    f32.const 0x1.ffep-138 (;=0.000000000000000000000000000000000000000005738;)
    i64.trunc_sat_f32_s
    i32.load offset=1588330 align=2
    return_call 0
    f64.convert_i32_s
    f64.ne
    ref.null array
    ref.test (ref none)
    if (type 41) (param i32) ;; label = @1
      i64.extend_i32_u
      return_call 0
      i32.load16_u offset=3616984 align=1
      br_table 0 (;@1;) 1 1
      block (type 3) (result i32) ;; label = @2
        i32.const 601055440
        i32.ctz
        call 0
        f32.const 0x1.a3881ap-86 (;=0.000000000000000000000000021180935;)
        loop (type 20) ;; label = @3
          f64.const -nan:0xfffffffffbfff (;=NaN;)
          i32.trunc_f64_u
          if ;; label = @4
            f64.const -0x1.43c573f955b58p+719 (;=-3487909977311571000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
            loop (type 11) (result f32 arrayref) ;; label = @5
              f64.const 0x1.p-1054 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005180654;)
              try_table (type 26) (result f64 i64) (catch_all 1 (;@4;)) (catch_all 1 (;@4;)) (catch_all 2 (;@3;)) (catch_all 2 (;@3;)) (catch_all 5) (catch_all 4 (;@1;)) (catch_all 1 (;@4;)) (catch_all 1 (;@4;)) (catch_all 4 (;@1;)) (catch_all 2 (;@3;)) ;; label = @6
                struct.new 25
                try_table (type 29) (result (ref null 5)) ;; label = @7
                  loop (type 29) (result (ref null 5)) ;; label = @8
                    br 5 (;@3;)
                    try_table (type 11) (result f32 arrayref) (catch_all 3 (;@5;)) (catch_all 4 (;@4;)) (catch_all 3 (;@5;)) (catch_all 0 (;@8;)) (catch_all 4 (;@4;)) (catch_all 0 (;@8;)) ;; label = @9
                      loop (type 30) ;; label = @10
                        try_table (type 29) (result (ref null 5)) (catch_all 0 (;@10;)) ;; label = @11
                          call 0
                          nop
                          i64.const 7440429260703469190
                          i64.extend32_s
                          i64.eqz
                          i32.popcnt
                          ref.null any
                          return_call 0
                          return_call 0
                          f64.const 0x1.72fp-1062 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000029323;)
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
        end
        unreachable
      end
      unreachable
    else
      unreachable
    end
  )
)
