(module
  (rec
    (type (;0;) (array i8))
    (type (;1;) (array (mut i8)))
    (type (;2;) (struct (field (mut i32)) (field (mut i32)) (field (mut i8)) (field i16) (field f64) (field i31ref) (field i8) (field i16) (field i8) (field i8) (field (mut i16)) (field (mut structref)) (field i16) (field (mut i16)) (field (mut f64)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field (mut arrayref))))
    (type (;3;) (func (param i64) (result i32)))
    (type (;4;) (sub (array i8)))
    (type (;5;) (sub (array i8)))
    (type (;6;) (sub (func (param i64 i64))))
    (type (;7;) (array (mut i64)))
    (type (;8;) (func (param i31ref i32)))
    (type (;9;) (sub (struct (field i8) (field i16) (field (mut i16)) (field i32) (field i16) (field i8) (field (mut i8)) (field (mut f64)) (field (mut externref)) (field i16) (field (mut i8)) (field i8) (field (mut (ref null 7))))))
    (type (;10;) (func (param nullref)))
    (type (;11;) (sub (array i16)))
    (type (;12;) (struct (field i8) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field eqref) (field f64)))
    (type (;13;) (sub (array f64)))
    (type (;14;) (struct (field (mut i16)) (field (mut i16))))
    (type (;15;) (sub (struct (field (mut i32)) (field i16) (field (mut f32)) (field i16) (field i64) (field (ref null 13)) (field (mut (ref null 2))) (field i64) (field i16) (field (mut i32)) (field f64) (field (mut i32)) (field (mut i8)) (field i16))))
  )
  (rec
    (type (;16;) (func (param f32 i32 i64)))
    (type (;17;) (sub (struct (field i8))))
  )
  (rec
    (type (;18;) (sub (func (param f32 i64))))
    (type (;19;) (sub (array (mut i16))))
    (type (;20;) (struct (field (mut f64)) (field (mut i8)) (field (mut i8)) (field i32) (field (mut i16)) (field i32) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field (mut f64)) (field (mut i8)) (field exnref) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i64)) (field (mut i8)) (field (mut i64))))
    (type (;21;) (struct (field i16) (field (mut i8)) (field i16) (field i8) (field (mut i16)) (field i64) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field arrayref) (field (mut i16))))
    (type (;22;) (func (param f32 i64 i31ref) (result f32)))
    (type (;23;) (sub (struct (field (mut f32)) (field (mut i32)) (field (mut i8)) (field (mut i64)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field i16) (field (mut f32)) (field i8) (field (mut i8)) (field (mut funcref)))))
    (type (;24;) (array i8))
    (type (;25;) (sub (array (mut i16))))
    (type (;26;) (func (param f64)))
    (type (;27;) (array f32))
    (type (;28;) (array (mut exnref)))
    (type (;29;) (sub (array (mut f32))))
    (type (;30;) (array i32))
    (type (;31;) (array i16))
    (type (;32;) (func (param nullexternref) (result f32)))
    (type (;33;) (sub (array (mut f64))))
    (type (;34;) (struct (field (mut i16)) (field i16) (field f32) (field (mut f64))))
    (type (;35;) (sub (struct (field (mut i16)) (field (mut (ref null 15))) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field i16))))
    (type (;36;) (array i32))
    (type (;37;) (struct (field i31ref)))
    (type (;38;) (func (param f64 anyref f64)))
    (type (;39;) (sub (array i64)))
    (type (;40;) (sub (func (result f32 i32))))
    (type (;41;) (sub (func (result structref f64 i32))))
    (type (;42;) (array i16))
    (type (;43;) (array (mut f64)))
    (type (;44;) (struct (field (mut i16)) (field (mut i8)) (field i16) (field eqref) (field (mut i16)) (field (mut i64)) (field i8) (field i16) (field (mut f64)) (field i8) (field (mut i8)) (field (mut i64))))
    (type (;45;) (sub (array (mut i16))))
    (type (;46;) (array i64))
    (type (;47;) (sub (func)))
    (type (;48;) (func (param f32 i32)))
    (type (;49;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i8))))
    (type (;50;) (sub (array i64)))
    (type (;51;) (array i8))
    (type (;52;) (array (mut i16)))
    (type (;53;) (sub (func)))
    (type (;54;) (sub (func (param i32) (result f64 f32 f32 i64 i32 f32))))
  )
  (import ".\u{0}8" "" (global (;0;) f32))
  (memory (;0;) 12)
  (export "Fc" (memory 0))
  (export "" (global 0))
  (elem (;0;) declare exnref (ref.null exn) (ref.null exn) (ref.null exn) (ref.null exn))
  (func (;0;) (type 3) (param i64) (result i32)
    (local i64 f64)
    elem.drop 0
    f64.const 0x1.553bd6cc84cf9p-973 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016696530218362686;)
    memory.size
    ref.null 12
    global.get 0
    f32.sqrt
    i32.reinterpret_f32
    loop (result i64) ;; label = @1
      f32.const 0x1.28cb42p+126 (;=98626720000000000000000000000000000000;)
      array.new_fixed 29 0
      i32.const 4095
      block (type 53) ;; label = @2
        i32.const 786416
        i32.load8_u offset=211584
        f32.convert_i32_u
        i32.trunc_f32_s
        if ;; label = @3
          br 1 (;@2;)
          i64.const 3655697309250279261
          i32.const 1899948611
          i32.const 2140202912
          i32.const -134217728
          i32.shr_s
          if (type 40) (result f32 i32) ;; label = @4
            ref.null 17
            struct.get_u 17 0
            i64.const 9218868437227405312
            i32.const -16777217
            block (type 53) ;; label = @5
              local.get 1
              ref.null 9
              struct.get_u 9 1
              f32.const -0x1.0a7914p-120 (;=-0.00000000000000000000000000000000000078309365;)
              f32.nearest
              block (type 40) (result f32 i32) ;; label = @6
                local.get 0
                ref.null 15
                try_table (catch_all 4 (;@2;)) (catch_all 5 (;@1;)) (catch_all 3 (;@3;)) (catch_all 1 (;@5;)) (catch_all 3 (;@3;)) (catch_all 5 (;@1;)) (catch_all 5 (;@1;)) ;; label = @7
                  local.get 0
                  f64.convert_i64_s
                  i32.trunc_f64_s
                  i64.load offset=360244 align=2
                  elem.drop 0
                  f32.convert_i64_s
                  i32.reinterpret_f32
                  if (type 41) (result structref f64 i32) ;; label = @8
                    local.get 1
                    f64.reinterpret_i64
                    f64.const -0x1.ba31ad2fd8f43p-891 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010462772724569546;)
                    f32.const 0x1.f80184p+58 (;=567460220000000000;)
                    unreachable
                  else
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          else
            unreachable
          end
          unreachable
        end
      end
      unreachable
    end
    unreachable
  )
)
