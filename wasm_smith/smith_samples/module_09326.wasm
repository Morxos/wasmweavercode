(module
  (rec
    (type (;0;) (sub (array (mut i8))))
    (type (;1;) (array (mut i64)))
    (type (;2;) (sub (struct (field (mut i16)) (field i16) (field i16) (field (mut i8)))))
    (type (;3;) (array i16))
    (type (;4;) (sub (struct (field (mut f64)) (field i8))))
    (type (;5;) (sub (struct (field i32) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field i64) (field i8) (field (mut f64)) (field f64) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field i16) (field (mut i16)))))
    (type (;6;) (struct (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field i8) (field i16) (field i16) (field i16) (field i8)))
    (type (;7;) (struct (field (mut f32)) (field (mut i8)) (field i8) (field (mut anyref)) (field (mut i16)) (field (mut f64)) (field i16) (field funcref) (field (mut i8)) (field (mut i8)) (field i16)))
    (type (;8;) (array i16))
    (type (;9;) (sub (struct (field i16) (field f32) (field i16) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)))))
    (type (;10;) (func))
    (type (;11;) (sub (struct (field i16) (field (mut i8)) (field i16) (field i8) (field i64) (field (mut i8)) (field (mut i16)) (field f64) (field (mut i32)) (field i8) (field (mut f32)) (field (mut f32)) (field externref) (field (mut i8)) (field (mut f32)) (field i16) (field (mut funcref)) (field (mut f32)))))
    (type (;12;) (func))
    (type (;13;) (struct (field i16) (field f32) (field nullref) (field (mut i32)) (field (mut externref)) (field (mut i8)) (field externref) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut f32)) (field i16) (field i16) (field (mut i8))))
    (type (;14;) (array i16))
    (type (;15;) (array f32))
    (type (;16;) (struct (field i16)))
    (type (;17;) (struct (field i8) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field i16) (field i32) (field f32) (field (ref null 9)) (field i16)))
    (type (;18;) (sub (func (param i32 f32 nullref anyref i64 i32 f32))))
    (type (;19;) (struct (field i8) (field (mut (ref null 15))) (field (mut i8)) (field i32) (field (mut i16))))
    (type (;20;) (array i16))
    (type (;21;) (sub (array (mut i8))))
    (type (;22;) (func (param f64 i64)))
    (type (;23;) (sub (array i8)))
    (type (;24;) (sub (array i32)))
    (type (;25;) (sub (struct (field f32) (field (mut i16)) (field f32) (field i16) (field i32))))
    (type (;26;) (sub (array f32)))
    (type (;27;) (sub (func)))
    (type (;28;) (array i16))
    (type (;29;) (sub (array i8)))
    (type (;30;) (struct (field (mut i32)) (field (mut i16)) (field i8) (field i16) (field i8) (field i64) (field i16)))
    (type (;31;) (sub (struct (field (mut f32)) (field i8) (field (mut f32)) (field i8) (field (mut f64)) (field (mut exnref)) (field (mut f32)) (field i16) (field i16) (field f32) (field (mut funcref)) (field i16) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)))))
    (type (;32;) (func (result f64 f32 i32 i32 i32 f32)))
    (type (;33;) (sub (struct (field (mut i8)) (field (mut f32)) (field (mut i16)) (field (mut eqref)) (field (mut i8)) (field i64) (field (mut (ref null 15))) (field (mut i16)) (field i64) (field i8) (field (mut i16)) (field i16) (field (mut f32)) (field i8) (field i16) (field (mut i8)))))
    (type (;34;) (struct (field (mut f32))))
    (type (;35;) (sub (struct (field i64) (field (mut i8)) (field i8) (field nullexternref) (field (mut i32)) (field i64) (field (mut f64)) (field i8) (field f64) (field i32))))
  )
  (import "" "" (tag (;0;) (type 10)))
  (table (;0;) 2678 528537 arrayref)
  (func (;0;) (type 22) (param f64 i64)
    i32.const -8193
    ref.i31
    block (result i64) ;; label = @1
      loop (type 27) ;; label = @2
        loop (type 10) ;; label = @3
          i64.const 1783878765989325085
          i64.const -2097152
          br 1 (;@2;)
          block (result f32) ;; label = @4
            i32.const -17
            i32.popcnt
            array.new_default 1
            br 4
            br 2 (;@2;)
            ref.test (ref 1)
            i32.clz
            array.new_default 24
            f64.const 0x1.ffffffcp-1048 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066312368;)
            f64.const 0x1.fffffffffffcp-1028 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000695335580783495;)
            f64.lt
            table.get 0
            br 2 (;@2;)
            table.size 0
            loop (type 27) ;; label = @5
              f32.const 0x1.p-149 (;=0.000000000000000000000000000000000000000000001;)
              i64.const 6397033992394601492
              call 1
              call 1
              call 1
              i64.trunc_sat_f32_s
              block (type 12) ;; label = @6
                call 1
                f32.sqrt
                f64.const 0x1.p-1074 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005;)
                i64.trunc_sat_f64_s
                table.size 0
                call 1
                f32.neg
                try_table (type 10) (catch 0 4 (;@2;)) (catch_all 1 (;@5;)) (catch_all 6) (catch_all 4 (;@2;)) (catch 0 0 (;@6;)) (catch_all 6) (catch 0 0 (;@6;)) (catch_all 0 (;@6;)) ;; label = @7
                  i64.const 2106566637827732897
                  br 4 (;@3;)
                  try_table (result f64) (catch_all 0 (;@7;)) (catch_all 4 (;@3;)) (catch 0 5 (;@2;)) (catch_all 1 (;@6;)) (catch_all 1 (;@6;)) ;; label = @8
                    local.get 0
                    i32.const -4097
                    local.get 1
                    i64.extend8_s
                    local.get 0
                    f64.nearest
                    f64.nearest
                    i64.reinterpret_f64
                    i64.rotr
                    br 6 (;@2;)
                    table.size 0
                    f64.const 0x1.ffffffep-1047 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001326247364;)
                    i32.trunc_f64_u
                    i32.popcnt
                    i32.shr_u
                    i32.clz
                    f32.const 0x1p-126 (;=0.000000000000000000000000000000000000011754944;)
                    f32.ceil
                    i64.const -7212690686868958793
                    br 6 (;@2;)
                    struct.new_default 17
                    loop (result i64) ;; label = @9
                      loop ;; label = @10
                      end
                      br 3 (;@6;)
                      block (type 32) (result f64 f32 i32 i32 i32 f32) ;; label = @10
                        try_table (type 12) (catch 0 1 (;@9;)) (catch_all 5 (;@5;)) (catch_all 3 (;@7;)) (catch 0 1 (;@9;)) (catch 0 8 (;@2;)) (catch_all 3 (;@7;)) (catch_all 1 (;@9;)) (catch_all 7 (;@3;)) (catch 0 10) (catch_all 4 (;@6;)) ;; label = @11
                          struct.new_default 35
                          f32.const 0x1.947acap+52 (;=7115681000000000;)
                          f32.trunc
                          i32.trunc_f32_u
                          array.new_fixed 14 0
                          table.size 0
                          i32.ctz
                          i32.ctz
                          table.get 0
                          local.get 1
                          try_table (type 10) (catch_all 4 (;@7;)) (catch_all 6 (;@5;)) (catch_all 0 (;@11;)) (catch_all 0 (;@11;)) (catch 0 11) (catch 0 2 (;@9;)) ;; label = @12
                            try_table (result f32) (catch 0 12) ;; label = @13
                              table.size 0
                              i32.popcnt
                              f64.convert_i32_s
                              table.size 0
                              f32.convert_i32_u
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 32) (result f64 f32 i32 i32 i32 f32)
    unreachable
  )
)
