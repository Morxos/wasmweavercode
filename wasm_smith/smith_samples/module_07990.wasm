(module
  (rec
    (type (;0;) (sub (func (param i64))))
    (type (;1;) (sub (struct (field (mut i16)) (field (mut f32)) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut i32)) (field (mut i8)) (field i32) (field i64) (field (mut nullref)) (field (mut f32)) (field (mut i8)))))
    (type (;2;) (func))
    (type (;3;) (func (param nullexternref f32 f32 nullfuncref)))
    (type (;4;) (sub (func)))
    (type (;5;) (sub (array (mut i64))))
    (type (;6;) (sub 1 (struct (field (mut i16)) (field (mut f32)) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut i32)) (field (mut i8)) (field i32) (field i64) (field (mut nullref)) (field (mut f32)) (field (mut i8)) (field f32) (field (mut funcref)) (field i32))))
    (type (;7;) (sub (array i8)))
    (type (;8;) (sub final 7 (array i8)))
    (type (;9;) (sub (struct (field (mut i16)) (field (mut f64)) (field (mut f64)) (field f64))))
    (type (;10;) (array i32))
    (type (;11;) (array i32))
    (type (;12;) (struct (field (mut f32)) (field f64) (field i16) (field i16) (field (mut i16)) (field i8) (field i16)))
    (type (;13;) (sub (array i16)))
    (type (;14;) (array (mut i16)))
    (type (;15;) (array f32))
    (type (;16;) (sub (struct (field i8) (field (mut structref)) (field (mut externref)) (field i16) (field i64) (field (mut i16)) (field (mut i16)) (field i8) (field i8) (field (mut i64)) (field i32) (field i8) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)))))
    (type (;17;) (sub (array (mut i16))))
    (type (;18;) (array i8))
    (type (;19;) (array i16))
    (type (;20;) (array i8))
    (type (;21;) (func (param i32 f64 i64 i64 i32)))
    (type (;22;) (sub (struct (field (mut i8)) (field f32) (field f64) (field i16) (field (mut i16)) (field i64) (field (mut i16)))))
    (type (;23;) (sub (array i16)))
    (type (;24;) (sub (func (param f32))))
    (type (;25;) (func (param f64) (result f64)))
    (type (;26;) (array (mut i16)))
    (type (;27;) (sub (struct (field (mut i8)) (field (mut i8)))))
    (type (;28;) (func (param eqref f64) (result i64 i64 f64 arrayref f64 (ref null 24) exnref)))
    (type (;29;) (struct (field (mut i8)) (field i8) (field i64) (field i8) (field i32) (field i8) (field i8) (field (mut i8)) (field (mut i8))))
    (type (;30;) (array (mut i8)))
    (type (;31;) (sub (func (param i64 f32 i32))))
    (type (;32;) (array (mut i16)))
    (type (;33;) (sub (array i16)))
    (type (;34;) (array i8))
    (type (;35;) (struct (field (mut i16)) (field (mut arrayref)) (field i16) (field (mut i8))))
    (type (;36;) (array f32))
    (type (;37;) (sub 31 (func (param i64 f32 i32))))
    (type (;38;) (struct (field i16) (field (mut f64)) (field i8) (field i8) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field i64)))
    (type (;39;) (sub (array i8)))
    (type (;40;) (func (result eqref f64)))
    (type (;41;) (sub (array (mut i16))))
    (type (;42;) (array (mut i16)))
    (type (;43;) (struct (field f32) (field (mut f32)) (field i32) (field f32) (field (mut i32)) (field i8) (field i16) (field (mut i16)) (field (mut f64)) (field i16) (field i8) (field i64) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8) (field i8) (field (mut i8)) (field i16)))
    (type (;44;) (sub (func (param i32))))
    (type (;45;) (func (param f64 i64) (result f64 i32 f32 f32)))
    (type (;46;) (func))
    (type (;47;) (func (result i32 i64 f32 f32)))
    (type (;48;) (func))
    (type (;49;) (sub (func (param i64) (result i64 f32))))
    (type (;50;) (func (param f32)))
    (type (;51;) (sub (struct (field f32) (field (mut (ref null 28))) (field (mut i16)) (field i8) (field i16) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field i64) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)))))
    (type (;52;) (func (param i32)))
    (type (;53;) (array (mut i32)))
    (type (;54;) (struct (field (mut i16)) (field (mut f64)) (field i8) (field f32) (field i8) (field i8) (field (mut i16)) (field i16) (field eqref) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i8)) (field f32)))
    (type (;55;) (sub (func (param f64))))
    (type (;56;) (array (mut i32)))
    (type (;57;) (sub final 9 (struct (field (mut i16)) (field (mut f64)) (field (mut f64)) (field f64))))
    (type (;58;) (sub (struct (field i16) (field (mut i16)) (field (mut i64)) (field (mut (ref null 47))) (field i32))))
    (type (;59;) (struct (field (mut eqref)) (field (mut i16)) (field i8) (field i32) (field i8) (field i8) (field (mut i8))))
    (type (;60;) (func))
    (type (;61;) (array (mut f32)))
    (type (;62;) (sub (func)))
  )
  (import "" "" (memory (;0;) 624 19548))
  (export "\u{11}" (memory 0))
  (export "" (memory 0))
  (export "2" (memory 0))
  (func (;0;) (type 25) (param f64) (result f64)
    (local f64)
    i64.const 144115188075855872
    i64.extend32_s
    i64.popcnt
    i32.const 1268969184
    i64.load16_s offset=34536307
    i64.div_u
    loop (type 60) ;; label = @1
      loop (type 4) ;; label = @2
        ref.null array
        loop (type 48) ;; label = @3
          memory.size
          f32.reinterpret_i32
          i64.const 6980109944703139
          struct.new_default 54
          block (result i32) ;; label = @4
            try_table (type 60) (catch_all 2 (;@2;)) (catch_all 3 (;@1;)) ;; label = @5
              ref.null 36
              extern.convert_any
              ref.is_null
              i64.load16_s offset=32933270
              f32.convert_i64_s
              i32.const 40894448
              array.new_fixed 7 0
              ref.as_non_null
              loop (type 60) ;; label = @6
                block ;; label = @7
                  block (type 46) ;; label = @8
                    block (type 46) ;; label = @9
                      ref.null extern
                      br_on_null 3 (;@6;)
                      f32.const 0x1.78092ep+34 (;=25235340000;)
                      f64.const -0x1.21be7f37e7649p-844 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009648467506148534;)
                      local.set 0
                      f32.sqrt
                      i32.trunc_sat_f32_s
                      if (type 48) ;; label = @10
                        try_table (type 40) (result eqref f64) (catch_all 0 (;@10;)) ;; label = @11
                          nop
                          try_table (type 40) (result eqref f64) (catch_all 6 (;@5;)) (catch_all 9 (;@2;)) (catch_all 5 (;@6;)) (catch_all 8 (;@3;)) (catch_all 5 (;@6;)) (catch_all 8 (;@3;)) (catch_all 2 (;@9;)) (catch_all 10 (;@1;)) ;; label = @12
                            loop (type 48) ;; label = @13
                              unreachable
                              i64.const 2528168245548205585
                              br 3 (;@10;)
                              br 7 (;@6;)
                              br 0 (;@13;)
                              i32.wrap_i64
                              unreachable
                            end
                            unreachable
                          end
                        end
                        unreachable
                      end
                      unreachable
                    end
                  end
                end
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
    end
    unreachable
  )
)
