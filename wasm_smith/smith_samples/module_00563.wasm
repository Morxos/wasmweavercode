(module
  (rec)
  (rec
    (type (;0;) (sub (func)))
    (type (;1;) (sub (func (param f64))))
    (type (;2;) (sub (func)))
    (type (;3;) (sub (struct (field (mut i16)) (field i64) (field (mut f64)) (field i32) (field i8) (field i8) (field (mut i32)) (field (mut i32)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut externref)) (field (mut f64)) (field (mut i8)))))
    (type (;4;) (array i16))
    (type (;5;) (sub (struct (field (mut i8)) (field i16) (field (mut i8)) (field f32) (field i8) (field i8) (field i8) (field (mut f64)) (field (ref null 3)) (field i8) (field (mut f32)) (field (mut i8)) (field (mut (ref null 3))) (field (mut i16)))))
    (type (;6;) (array (mut i32)))
    (type (;7;) (sub (func (param i32 structref f32 f32 f32))))
    (type (;8;) (func))
    (type (;9;) (func (param i64) (result f32 f64 i32 (ref null 0) structref f32 i32 (ref null 7))))
    (type (;10;) (struct (field i8) (field (mut f64)) (field f64) (field i8) (field i8) (field i16) (field (mut i8)) (field i8) (field (mut i16)) (field i32) (field i16) (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field i8) (field (mut i16)) (field i8)))
    (type (;11;) (func (param (ref null 1) i64 f64)))
    (type (;12;) (sub (func (param i64) (result eqref))))
    (type (;13;) (sub (array (mut i16))))
    (type (;14;) (sub (func (param i32))))
    (type (;15;) (array (mut i8)))
    (type (;16;) (struct (field f64) (field i8) (field (mut i8)) (field i8) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field i8) (field i16)))
    (type (;17;) (struct (field i16) (field f64) (field i16) (field i8) (field (mut i32)) (field i8) (field i8) (field (mut i8)) (field (mut i8)) (field f32) (field i8) (field i8)))
    (type (;18;) (struct (field (mut i8)) (field i8) (field (mut f32)) (field i64) (field (mut i32))))
    (type (;19;) (array i16))
    (type (;20;) (struct (field (mut f32)) (field i16) (field (mut i32)) (field nullref) (field (mut i16)) (field (mut i64)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut f64))))
    (type (;21;) (func (param i32) (result f32 i32)))
  )
  (import "\u{4}\u{1d}\u{1e}/\u{6d5}" "" (global (;0;) i32))
  (memory (;0;) i64 850 262201814954568)
  (global (;1;) (ref null 6) ref.null none)
  (global (;2;) (ref null 20) ref.null none)
  (global (;3;) (mut i64) i64.const 0)
  (global (;4;) (mut i64) i64.const 0)
  (global (;5;) (mut i32) i32.const 0)
  (global (;6;) (mut i32) i32.const 0)
  (start 0)
  (elem (;0;) declare (ref null 1) (ref.null nofunc))
  (func (;0;) (type 0)
    call 0
    call 0
    loop ;; label = @1
      f64.const -0x1.fffffffffffffp+1020 (;=-22471164185778946000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
      i32.trunc_f64_u
      ref.null 10
      ref.null 12
      struct.new_default 10
      block (type 8) ;; label = @2
        struct.new_default 10
        i64.const 4638870172614741563
        i64.ctz
        i32.wrap_i64
        f64.convert_i32_u
        i64.trunc_f64_s
        i64.load offset=29264920 align=1
        i32.load offset=36796905 align=2
        f64.const 0x1.p-1026 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001390671161567;)
        i32.trunc_sat_f64_u
        if (type 14) (param i32) ;; label = @3
          if (result f64) ;; label = @4
            block (type 0) ;; label = @5
              elem.drop 0
              struct.new_default 5
              br 5
              memory.size
              call 0
              i32.load8_s offset=38209668
              try_table (type 14) (param i32) (catch_all 3 (;@2;)) ;; label = @6
                f64.convert_i32_s
                i32.trunc_sat_f64_s
                global.get 0
                if (type 21) (param i32) (result f32 i32) ;; label = @7
                  memory.size
                  i64.load8_u offset=31126488
                  return_call 0
                  i64.load32_u offset=48099868 align=1
                  f32.load offset=47462689
                  i64.trunc_f32_s
                  i32.load8_s offset=12726522
                  f32.convert_i32_u
                  i32.reinterpret_f32
                  f64.const 0x1.p-1023 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007;)
                  i64.trunc_sat_f64_s
                  f32.load offset=1259398453305068685 align=1
                  try_table (type 8) (catch_all 2 (;@5;)) (catch_all 6 (;@1;)) (catch_all 6 (;@1;)) ;; label = @8
                    i64.const -18014398509481984
                    loop (type 8) ;; label = @9
                      struct.new_default 20
                      f64.const -0x1.3c73e0d53a118p-875 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004907073519276965;)
                      f64.ceil
                      i32.trunc_sat_f64_u
                      array.new_default 15
                      try_table (catch_all 9) (catch_all 4 (;@5;)) (catch_all 8 (;@1;)) (catch_all 1 (;@8;)) (catch_all 7 (;@2;)) (catch_all 7 (;@2;)) (catch_all 0 (;@9;)) (catch_all 8 (;@1;)) (catch_all 6 (;@3;)) (catch_all 3 (;@6;)) ;; label = @10
                      end
                      ref.test (ref none)
                      if (type 8) ;; label = @10
                        elem.drop 0
                        return_call 0
                        f64.const -0x1.3db0336a8edcfp+410 (;=-3281402136191348300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                        f64.const -nan:0xfffffc0000000 (;=NaN;)
                        f64.const nan (;=NaN;)
                        memory.size
                        i32.const 2147483647
                        f32.convert_i32_s
                        f32.abs
                        global.get 1
                        try_table (catch_all 10) (catch_all 10) (catch_all 0 (;@10;)) (catch_all 0 (;@10;)) (catch_all 8 (;@2;)) (catch_all 9 (;@1;)) (catch_all 10) (catch_all 8 (;@2;)) (catch_all 1 (;@9;)) (catch_all 1 (;@9;)) ;; label = @11
                          memory.size
                          f64.convert_i64_s
                          f64.ceil
                          elem.drop 0
                          f32.const 0x1.9p-27 (;=0.000000011641532;)
                          f64.promote_f32
                          br 2 (;@9;)
                          f64.gt
                          i32.clz
                          br 3 (;@8;)
                          try_table (catch_all 1 (;@10;)) (catch_all 9 (;@2;)) (catch_all 1 (;@10;)) (catch_all 6 (;@5;)) (catch_all 0 (;@11;)) (catch_all 10 (;@1;)) (catch_all 11) (catch_all 5 (;@6;)) (catch_all 5 (;@6;)) ;; label = @12
                            i64.const -512
                            i32.load16_u offset=32568062 align=1
                            f32.convert_i32_u
                            global.get 2
                            struct.get_s 20 4
                            f64.const -0x1.56539b4ae2244p-824 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001195320146679448;)
                            br 1 (;@11;)
                            f64.sqrt
                            memory.size
                            try_table (type 0) (catch_all 1 (;@11;)) (catch_all 2 (;@10;)) (catch_all 6 (;@6;)) (catch_all 0 (;@12;)) (catch_all 0 (;@12;)) (catch_all 4 (;@8;)) ;; label = @13
                              i64.const 288230376151711744
                              try_table (type 2) (catch_all 2 (;@11;)) (catch_all 0 (;@13;)) (catch_all 1 (;@12;)) (catch_all 12 (;@1;)) (catch_all 12 (;@1;)) (catch_all 5 (;@8;)) (catch_all 8 (;@5;)) (catch_all 10 (;@3;)) (catch_all 7 (;@6;)) ;; label = @14
                                struct.new_default 16
                                i32.const 2097152
                                f64.convert_i32_u
                                struct.set 16 4
                              end
                              f32.load offset=28701924
                              f64.const 0x1.p-1032 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021729236899484;)
                              memory.size
                              elem.drop 0
                              global.get 3
                              i64.xor
                              global.set 3
                              i64.reinterpret_f64
                              global.get 4
                              i64.xor
                              global.set 4
                              i32.reinterpret_f32
                              global.get 5
                              i32.xor
                              global.set 5
                            end
                            global.get 3
                            i64.xor
                            global.set 3
                            i64.reinterpret_f64
                            global.get 4
                            i64.xor
                            global.set 4
                            global.get 6
                            i32.xor
                            global.set 6
                            i32.reinterpret_f32
                            global.get 5
                            i32.xor
                            global.set 5
                          end
                          global.get 6
                          i32.xor
                          global.set 6
                        end
                        drop
                        i32.reinterpret_f32
                        global.get 5
                        i32.xor
                        global.set 5
                        global.get 3
                        i64.xor
                        global.set 3
                        i64.reinterpret_f64
                        global.get 4
                        i64.xor
                        global.set 4
                        i64.reinterpret_f64
                        global.get 4
                        i64.xor
                        global.set 4
                        i64.reinterpret_f64
                        global.get 4
                        i64.xor
                        global.set 4
                      end
                      drop
                    end
                    global.get 3
                    i64.xor
                    global.set 3
                  end
                  i32.reinterpret_f32
                  global.get 5
                  i32.xor
                  global.set 5
                  global.get 6
                  i32.xor
                  global.set 6
                  global.get 6
                  i32.xor
                  global.set 6
                  f32.const -nan:0x7f0000 (;=NaN;)
                  i32.const 65535
                else
                  global.get 6
                  i32.xor
                  global.set 6
                  f32.const -0x1.886bccp-63 (;=-0.00000000000000000016619679;)
                  i32.const -8
                end
                global.get 6
                i32.xor
                global.set 6
                i32.reinterpret_f32
                global.get 5
                i32.xor
                global.set 5
              end
              drop
            end
            f64.const -0x1p+769 (;=-3105036184601418000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
          else
            f64.const 0x1.ffep-1063 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002023;)
          end
          unreachable
        else
          unreachable
        end
        unreachable
      end
      unreachable
    end
  )
)
