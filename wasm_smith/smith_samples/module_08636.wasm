(module
  (rec
    (type (;0;) (struct (field i16) (field i16) (field i32) (field i16) (field f32) (field (mut i32)) (field i16) (field (mut i8)) (field i32) (field (mut i8)) (field i16)))
    (type (;1;) (sub (struct (field (mut i16)) (field i8) (field (mut (ref null 0))) (field (mut i16)) (field (mut i16)) (field i32) (field i16) (field (mut i16)) (field i16) (field i8) (field i16) (field i8) (field i16) (field i8) (field (mut f64)) (field (mut i8)) (field (mut i64)) (field i16))))
    (type (;2;) (struct (field (mut i8)) (field (mut eqref)) (field (mut i64))))
    (type (;3;) (sub (array f32)))
    (type (;4;) (sub (func)))
    (type (;5;) (struct))
    (type (;6;) (sub (struct (field (mut i16)) (field (mut f32)) (field (mut i16)))))
    (type (;7;) (struct (field i16) (field (mut i8)) (field (mut f64)) (field f32) (field i64) (field (mut i8)) (field (mut i32)) (field i16) (field f64) (field i32) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field i8) (field i16) (field i8) (field (mut anyref)) (field i16) (field (mut i8))))
    (type (;8;) (struct (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field (mut i64))))
    (type (;9;) (func (result f32 i64 f64 i32)))
    (type (;10;) (array (mut i16)))
    (type (;11;) (array i8))
    (type (;12;) (sub (array (mut i8))))
    (type (;13;) (sub (array i16)))
    (type (;14;) (func (param i32)))
    (type (;15;) (sub (func (result arrayref f64))))
    (type (;16;) (array (ref null 15)))
    (type (;17;) (sub (func (result f64 f32))))
    (type (;18;) (sub (struct (field i8) (field i8) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field i32) (field i16) (field (mut i8)) (field (mut i16)) (field i16))))
    (type (;19;) (sub (array i16)))
    (type (;20;) (func))
    (type (;21;) (array (mut i8)))
    (type (;22;) (sub (array i16)))
    (type (;23;) (sub (func)))
    (type (;24;) (array (mut f32)))
    (type (;25;) (sub (array i16)))
    (type (;26;) (sub (array i8)))
    (type (;27;) (sub (func (param i64 i64 funcref i32))))
    (type (;28;) (func))
    (type (;29;) (sub (struct (field externref) (field i16) (field (mut i8)) (field i8) (field (mut (ref null 10))) (field (mut i16)) (field i32))))
    (type (;30;) (sub (array (mut i16))))
    (type (;31;) (array i16))
    (type (;32;) (struct (field i8) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field i64) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16))))
    (type (;33;) (struct (field (mut i32)) (field i8) (field (mut i32)) (field i16) (field i8) (field f32) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field i16)))
    (type (;34;) (sub (struct (field i8) (field i8) (field (mut f32)) (field (mut i16)) (field f64) (field f32) (field (mut f64)) (field f32) (field i16) (field (mut i16)) (field (mut i16)) (field i8) (field i16))))
    (type (;35;) (sub (func)))
    (type (;36;) (func))
    (type (;37;) (array (mut i8)))
    (type (;38;) (sub (struct (field (mut i16)) (field i32))))
    (type (;39;) (struct (field i8) (field (mut i32)) (field i16) (field (mut i16)) (field anyref) (field (mut f32)) (field i64) (field i64) (field i8) (field f64) (field (mut i8)) (field i16)))
    (type (;40;) (struct (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i8)) (field f32) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i8))))
    (type (;41;) (array (mut i64)))
    (type (;42;) (func (result (ref null 2) i64)))
    (type (;43;) (array i16))
    (type (;44;) (struct (field i8) (field i16)))
    (type (;45;) (struct (field f64) (field (mut i16)) (field (mut i16)) (field arrayref) (field i8) (field i8) (field i8) (field i16) (field (mut i16))))
    (type (;46;) (func))
    (type (;47;) (sub (func (result (ref null 28) i32))))
    (type (;48;) (func (param f32 f32) (result i64 exnref)))
    (type (;49;) (array i8))
    (type (;50;) (array (mut i8)))
  )
  (type (;51;) (func (result f64)))
  (import "$9" "" (func (;0;) (type 27)))
  (table (;0;) 0 583623 funcref ref.null 15)
  (global (;0;) f64 f64.const 0x1.9ffab347497e1p-995 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004852729311767102;))
  (export ".n" (global 0))
  (elem (;0;) (ref null 11) (ref.null none))
  (elem (;1;) (ref null 36) (ref.null 36))
  (elem (;2;) declare eqref)
  (func (;1;) (type 27) (param i64 i64 funcref i32)
    struct.new 5
    loop (type 35) ;; label = @1
      local.get 3
      f32.convert_i32_u
      loop (type 28) ;; label = @2
        f64.const -0x1.eeeeeeeeeeeeep+751 (;=-22899894549927040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
        f64.floor
        ref.null 20
        local.set 2
        global.get 0
        br 1 (;@1;)
        try_table (type 9) (result f32 i64 f64 i32) (catch_all 2) (catch_all 2) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 0 (;@2;)) ;; label = @3
          br 1 (;@2;)
          block (type 46) ;; label = @4
            table.size 0
            struct.new_default 6
            f32.const 0x1.p-147 (;=0.000000000000000000000000000000000000000000006;)
            elem.drop 0
            i32.trunc_sat_f32_s
            i32.popcnt
            struct.new 5
            ref.as_non_null
            ref.cast (ref none)
            f64.const 0x1.c9fa8ba259f31p-583 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000565090278611256;)
            i32.const -268435457
            f64.const -0x1.9338afd0cd404p-64 (;=-0.00000000000000000008538545964111934;)
            f64.abs
            f64.floor
            f64.abs
            i64.trunc_f64_s
            i64.extend16_s
            try_table (type 46) (catch_all 3 (;@1;)) ;; label = @5
              table.size 0
              f32.convert_i32_s
              i32.trunc_f32_u
              if (type 23) ;; label = @6
                block (type 42) (result (ref null 2) i64) ;; label = @7
                  struct.new 5
                  br 1 (;@6;)
                  f64.const -0x1p-52 (;=-0.0000000000000002220446049250313;)
                  try_table (catch_all 3 (;@4;)) (catch_all 3 (;@4;)) (catch_all 3 (;@4;)) (catch_all 7) (catch_all 6 (;@1;)) (catch_all 3 (;@4;)) (catch_all 2 (;@5;)) (catch_all 7) ;; label = @8
                    global.get 0
                    f64.ceil
                    block (type 4) ;; label = @9
                      global.get 0
                      i32.trunc_sat_f64_u
                      f32.reinterpret_i32
                      i64.trunc_f32_u
                      array.new_fixed 41 0
                      ref.cast (ref none)
                      elem.drop 0
                      ref.as_non_null
                      i31.get_u
                      f32.const 0x1.0dee18p+45 (;=37098904000000;)
                      f32.sqrt
                      block (type 35) ;; label = @10
                        struct.new_default 40
                        table.size 0
                        br 5 (;@5;)
                        f32.reinterpret_i32
                        i32.reinterpret_f32
                        br_if 9 (;@1;)
                        struct.new 5
                        unreachable
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
