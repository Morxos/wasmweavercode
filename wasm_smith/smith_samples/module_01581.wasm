(module
  (rec
    (type (;0;) (sub (struct)))
    (type (;1;) (array i8))
    (type (;2;) (sub (array externref)))
    (type (;3;) (sub (struct (field i8) (field i64))))
    (type (;4;) (sub (struct (field (mut i32)) (field (mut i64)) (field (mut f32)) (field (mut i64)) (field (mut f32)) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i32)) (field (mut i32)) (field f64) (field i8) (field (mut i8)) (field i16) (field i8) (field (mut i8)))))
    (type (;5;) (sub (array i8)))
    (type (;6;) (sub (struct (field (mut i16)) (field anyref) (field f64) (field i8) (field i8) (field i16) (field i8) (field (mut i16)) (field i16) (field nullfuncref) (field (mut arrayref)) (field i16))))
    (type (;7;) (struct (field i8) (field i16) (field (mut i8))))
    (type (;8;) (func (result arrayref i64 i64 i64)))
    (type (;9;) (struct (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field i32)))
    (type (;10;) (sub (array (mut i8))))
    (type (;11;) (sub (struct)))
    (type (;12;) (array (mut i16)))
    (type (;13;) (func))
    (type (;14;) (func (param i32)))
    (type (;15;) (array i16))
    (type (;16;) (array (mut i16)))
    (type (;17;) (sub (array (mut (ref null 2)))))
    (type (;18;) (sub (struct (field i16) (field (mut i64)) (field i16) (field i16) (field i64) (field i8) (field i8))))
    (type (;19;) (struct (field i16) (field i32) (field i16) (field i16) (field f32) (field (mut i64)) (field i16) (field i16) (field f32) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16))))
    (type (;20;) (array (mut i16)))
    (type (;21;) (sub (func (param (ref null 9)) (result arrayref i32 f32))))
    (type (;22;) (sub (struct (field (mut i16)) (field i16) (field (mut i8)))))
    (type (;23;) (sub (func (result f32))))
    (type (;24;) (func))
    (type (;25;) (array i16))
    (type (;26;) (sub (array i16)))
    (type (;27;) (sub final 6 (struct (field (mut i16)) (field eqref) (field f64) (field i8) (field i8) (field i16) (field i8) (field (mut i16)) (field i16) (field nullfuncref) (field (mut arrayref)) (field i16))))
    (type (;28;) (array (mut i16)))
    (type (;29;) (sub (func (result (ref null 13)))))
    (type (;30;) (struct (field i8) (field i16) (field (mut i8)) (field i16) (field i8) (field f64) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i8))))
    (type (;31;) (sub (func (param f64))))
    (type (;32;) (sub (func (result i64))))
    (type (;33;) (sub (array funcref)))
    (type (;34;) (sub 26 (array i16)))
    (type (;35;) (array i8))
    (type (;36;) (sub (func (result f32 i32 (ref null 11) f32 i64 (ref null 15)))))
    (type (;37;) (func (result f64 i32)))
    (type (;38;) (struct (field (mut i8)) (field (mut i16)) (field (mut externref)) (field i8) (field i16) (field nullfuncref) (field (mut i8)) (field i32)))
    (type (;39;) (func (param f64 i32) (result f32)))
    (type (;40;) (sub (struct (field f32) (field i8) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i32)) (field i8) (field (mut i8)) (field (mut funcref)) (field (mut (ref null 3))) (field (mut i64)))))
    (type (;41;) (func (result i32)))
    (type (;42;) (array i64))
    (type (;43;) (array (mut i16)))
    (type (;44;) (sub (array f64)))
    (type (;45;) (struct (field (mut f32)) (field i64) (field (mut f64))))
    (type (;46;) (sub (func (param f64) (result f64 i32))))
    (type (;47;) (struct (field f32) (field (mut i8)) (field i32) (field (mut i8)) (field i16) (field i64) (field (mut i8))))
    (type (;48;) (array (mut i16)))
    (type (;49;) (sub (array i16)))
    (type (;50;) (sub (array nullexternref)))
    (type (;51;) (func))
    (type (;52;) (sub (array (mut i8))))
    (type (;53;) (sub (array i32)))
    (type (;54;) (func (param f64 f32) (result f64 f64 f64 f64 i64)))
    (type (;55;) (func (param i32) (result f64 arrayref f32)))
    (type (;56;) (func (result f32)))
    (type (;57;) (sub (func)))
    (type (;58;) (sub (struct (field i16) (field (mut i8)) (field (mut i32)) (field i16) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8) (field (ref null 26)) (field f32))))
    (type (;59;) (sub (struct (field i16) (field (mut structref)) (field (mut i32)) (field i16) (field (mut i16)) (field f32))))
    (type (;60;) (array (mut eqref)))
    (type (;61;) (func (result f32)))
    (type (;62;) (array (mut i16)))
    (type (;63;) (func))
    (type (;64;) (sub (struct (field i32))))
    (type (;65;) (array (mut i64)))
    (type (;66;) (array i8))
    (type (;67;) (sub (struct (field i8) (field funcref) (field i8) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)))))
    (type (;68;) (sub 50 (array nullexternref)))
    (type (;69;) (sub (struct (field (mut i8)) (field f64) (field (mut i32)))))
    (type (;70;) (sub (array i8)))
    (type (;71;) (func (result (ref null 28))))
    (type (;72;) (struct (field i64) (field (mut i8)) (field i8) (field (mut i16)) (field (mut f64)) (field i16) (field i8) (field i16) (field (mut i8)) (field i8) (field f32) (field i64) (field i64) (field (mut i32)) (field (mut i16)) (field i16) (field i8)))
    (type (;73;) (array i8))
    (type (;74;) (func))
    (type (;75;) (array (mut i64)))
    (type (;76;) (sub (struct (field (mut i32)) (field i8) (field (mut i64)) (field i16) (field f64) (field i8) (field (mut f32)) (field i16) (field i16) (field i16) (field i16) (field i8) (field (mut i8)))))
    (type (;77;) (array (mut i16)))
    (type (;78;) (sub (func)))
  )
  (import "" "" (table (;0;) i64 12 funcref))
  (import "#\u{7}\u{2c5}" "" (tag (;0;) (type 31) (param f64)))
  (tag (;1;) (type 57))
  (tag (;2;) (type 63))
  (tag (;3;) (type 78))
  (export "" (table 0))
  (elem (;0;) (table 0) (i64.const 9) (ref null 13))
  (func (;0;) (type 14) (param i32)
    block (type 57) ;; label = @1
      i32.const 15
      local.get 0
      block (type 55) (param i32) (result f64 arrayref f32) ;; label = @2
        i64.extend_i32_s
        loop (type 13) ;; label = @3
          block (type 13) ;; label = @4
            i64.const -281474976710657
            f64.convert_i64_s
            ref.null 15
            br_on_null 0 (;@4;)
            ref.test (ref none)
            return_call 0
            i32.trunc_f64_s
            f64.convert_i32_s
            unreachable
          end
        end
        unreachable
      end
      unreachable
    end
  )
)
