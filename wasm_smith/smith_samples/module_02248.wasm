(module
  (rec
    (type (;0;) (sub (array i16)))
    (type (;1;) (sub (struct (field (mut funcref)) (field (mut i16)) (field (mut i8)) (field i8) (field i8) (field (mut i16)) (field (mut i16)))))
    (type (;2;) (array f32))
    (type (;3;) (array i8))
    (type (;4;) (sub (struct (field i16))))
    (type (;5;) (sub (struct (field i8) (field (mut i8)) (field (mut i16)))))
    (type (;6;) (func (param f64)))
    (type (;7;) (sub (struct (field i8) (field (mut i32)) (field (mut i16)) (field (mut nullexternref)) (field i64) (field (mut i8)) (field i16) (field (mut i8)) (field i64) (field (mut i16)) (field i16) (field i16) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i8)))))
    (type (;8;) (sub (struct (field i64) (field i64) (field (mut i8)) (field f64) (field f64) (field (mut i16)) (field (mut i8)))))
    (type (;9;) (sub (array i8)))
    (type (;10;) (struct (field (mut i8)) (field (mut i16)) (field (mut i8))))
    (type (;11;) (sub (struct (field i8) (field (mut i8)) (field i16) (field (mut i32)) (field (mut i16)) (field i8) (field i32) (field (mut i8)) (field i32))))
    (type (;12;) (struct (field (mut i16)) (field (mut i8)) (field i8) (field f64) (field i8) (field (mut i8)) (field (mut nullfuncref))))
    (type (;13;) (func (result f64)))
    (type (;14;) (array f64))
    (type (;15;) (struct (field i8) (field i16) (field i32) (field (mut i8)) (field i16) (field i16) (field f64) (field i16) (field f64) (field (mut i8)) (field (mut f64)) (field i8) (field f64) (field (mut f64)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i8))))
    (type (;16;) (func (result i64 i64 f32)))
    (type (;17;) (array i16))
    (type (;18;) (sub (array (mut i8))))
    (type (;19;) (sub (array (mut i64))))
    (type (;20;) (array i8))
    (type (;21;) (sub (array i32)))
    (type (;22;) (sub (struct (field (mut i16)) (field (mut f32)) (field i8) (field i8) (field (mut i32)) (field (mut i16)) (field i16) (field i16) (field i8) (field (mut i8)) (field f64) (field (mut i16)) (field f64) (field i16) (field i32) (field (mut i8)) (field (mut i16)) (field (mut i32)))))
    (type (;23;) (func (result i64 i64)))
    (type (;24;) (sub (struct (field (mut i16)) (field (mut i16)) (field i8))))
    (type (;25;) (sub (func)))
    (type (;26;) (sub (struct (field i8) (field i8) (field i8) (field (mut i32)) (field i8) (field (mut i16)))))
    (type (;27;) (struct (field (mut i16)) (field i64) (field f32) (field (mut nullexternref)) (field (mut i16)) (field f32) (field i8) (field f64) (field structref) (field i16) (field (mut i64))))
  )
  (rec
    (type (;28;) (sub (struct)))
    (type (;29;) (sub (array i8)))
    (type (;30;) (func (param i32)))
    (type (;31;) (func (result externref)))
    (type (;32;) (func))
    (type (;33;) (array (mut i31ref)))
    (type (;34;) (sub (struct (field i8) (field i64) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field (mut i64)) (field i8) (field i64) (field i16) (field i8) (field i8) (field (mut f64)))))
    (type (;35;) (array i8))
    (type (;36;) (sub final 11 (struct (field i8) (field (mut i8)) (field i16) (field (mut i32)) (field (mut i16)) (field i8) (field i32) (field (mut i8)) (field i32))))
    (type (;37;) (sub (struct (field i16) (field i16) (field i32) (field i8) (field i8) (field (mut i8)))))
    (type (;38;) (struct (field (mut i8)) (field (mut f32)) (field eqref) (field i16) (field i16) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field i16) (field (mut i8)) (field i64) (field (mut i8)) (field (mut i8)) (field i8)))
    (type (;39;) (sub final 8 (struct (field i64) (field i64) (field (mut i8)) (field f64) (field f64) (field (mut i16)) (field (mut i8)) (field i8) (field i16))))
    (type (;40;) (struct (field (mut i8)) (field (mut funcref))))
    (type (;41;) (func (param f32 f64)))
    (type (;42;) (struct (field (mut i8)) (field (mut i16)) (field (mut i64)) (field i16) (field i8) (field (mut i32)) (field i8) (field i8) (field i64) (field i8)))
    (type (;43;) (sub (func (param (ref null 38)))))
    (type (;44;) (sub (func)))
    (type (;45;) (sub (array i16)))
    (type (;46;) (array i8))
    (type (;47;) (sub (struct (field f32) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field (mut f64)) (field (ref null 15)) (field i8) (field f32))))
  )
  (import "X" "" (table (;0;) i64 0 559772 eqref))
  (memory (;0;) i64 137 14753780002858 shared)
  (global (;0;) (ref null 40) ref.null none)
  (global (;1;) f32 f32.const 0x1.9a13e2p-19 (;=0.0000030553167;))
  (global (;2;) (mut f32) global.get 1)
  (global (;3;) (mut f64) f64.const -0x1.be03573d09e0dp-836 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000038021673270529264;))
  (export "Rd\u{ea2d}6" (memory 0))
  (start 0)
  (func (;0;) (type 32)
    nop
    memory.size
    i32.const 8978436
    i32.const -3
    return_call 0
    block (result i32) ;; label = @1
      try_table (type 25) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) ;; label = @2
        table.size 0
        table.get 0
        ref.as_non_null
        try_table (type 32) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) ;; label = @3
          return_call 0
          try_table (type 44) (catch_all 3) (catch_all 0 (;@3;)) (catch_all 3) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 3) (catch_all 3) (catch_all 1 (;@2;)) ;; label = @4
            global.get 0
            ref.null 13
            call_ref 13
            i64.reinterpret_f64
            i64.load offset=1494101
            i64.load16_u offset=6731923
            i32.wrap_i64
            i32.popcnt
            i32.ctz
            try_table (type 30) (param i32) (catch_all 2 (;@2;)) (catch_all 0 (;@4;)) (catch_all 0 (;@4;)) (catch_all 0 (;@4;)) ;; label = @5
              i32.clz
              f64.const -0x1.b4cdebe1ee5c5p-308 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000032719627839400135;)
              return_call 0
              loop (type 44) ;; label = @6
              end
              f64.const -0x1.fffffffffffffp+896 (;=-1056589062271330400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
              global.set 3
              f64.neg
              f64.sqrt
              call 0
              try_table ;; label = @6
                table.size 0
                i64.load offset=7321458
                i32.load16_u offset=1635394
                nop
                i32.extend16_s
                br_if 2 (;@4;)
                block (type 13) (result f64) ;; label = @7
                  i32.const 8978433
                  br_if 3 (;@4;)
                  ref.null 33
                  struct.new_default 5
                  global.get 1
                  f32.trunc
                  f32.trunc
                  br 2 (;@5;)
                  i32.reinterpret_f32
                  f64.convert_i32_u
                  struct.new 28
                  call 0
                  br 3 (;@4;)
                  ref.test (ref none)
                  try_table (type 13) (result f64) (catch_all 2 (;@5;)) (catch_all 7) (catch_all 7) (catch_all 4 (;@3;)) (catch_all 7) (catch_all 3 (;@4;)) (catch_all 2 (;@5;)) (catch_all 3 (;@4;)) ;; label = @8
                    memory.size
                    i64.eqz
                    i64.extend_i32_s
                    nop
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
