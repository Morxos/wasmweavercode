(module
  (rec
    (type (;0;) (sub (struct (field i64) (field (mut i8)) (field i16) (field i16) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field (mut i8)) (field funcref) (field (mut i8)) (field f64) (field i16) (field (mut arrayref)))))
    (type (;1;) (sub (array i16)))
    (type (;2;) (sub (func)))
    (type (;3;) (array (mut f64)))
    (type (;4;) (func (param i32 i64 f64) (result f64)))
    (type (;5;) (sub (func (param i64))))
    (type (;6;) (func (result i32 structref)))
    (type (;7;) (sub (struct (field (mut i8)) (field nullfuncref) (field (mut i16)) (field i8) (field (mut i8)) (field (mut structref)) (field (mut i8)) (field (mut nullref)) (field f64) (field (mut i8)) (field i16) (field f64) (field (mut i16)) (field (mut i16)) (field i64) (field i8) (field (mut i32)) (field (mut i16)) (field (mut i8)))))
    (type (;8;) (func))
    (type (;9;) (sub (array (mut funcref))))
    (type (;10;) (struct (field (mut i16)) (field i32) (field (mut i16)) (field f64) (field i8) (field i32) (field i8) (field (mut f32)) (field (mut i8)) (field (mut f64)) (field i16) (field i16) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i8))))
    (type (;11;) (struct (field f64) (field i16) (field i32)))
    (type (;12;) (sub (func (result eqref))))
    (type (;13;) (struct (field (mut i16)) (field (mut f32)) (field i16) (field i8) (field i8) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i8))))
    (type (;14;) (sub (func (result i32))))
    (type (;15;) (struct (field i16) (field i8) (field (mut i16)) (field i16) (field i8) (field i16) (field (mut i64)) (field i16) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut i32))))
    (type (;16;) (sub (struct (field (mut i8)) (field f64) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field (mut i16)))))
    (type (;17;) (sub (struct (field i16) (field i8) (field f32) (field i64) (field i16) (field i8) (field (mut nullref)) (field i8) (field i8))))
    (type (;18;) (struct (field i16) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field (mut eqref)) (field (mut externref)) (field f64) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field (ref null 9)) (field i16) (field i8) (field i8) (field (mut i16)) (field f64)))
    (type (;19;) (struct (field (mut i8)) (field i32) (field f32) (field externref) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8))))
    (type (;20;) (sub (array (mut i64))))
    (type (;21;) (sub (func)))
    (type (;22;) (sub (struct (field (mut i32)) (field i32) (field i32) (field (mut f64)) (field i64) (field f64) (field (mut i16)) (field (mut (ref null 19))) (field (mut i32)) (field i16) (field (mut i8)) (field i16) (field i8) (field i16) (field (mut i8)) (field i16) (field f64))))
    (type (;23;) (sub (array i8)))
    (type (;24;) (sub (func)))
    (type (;25;) (func (result i64 f32 i32 funcref i32 i64)))
    (type (;26;) (sub final 2 (func)))
    (type (;27;) (sub (func (param i64) (result i32))))
    (type (;28;) (sub (struct (field exnref) (field i8) (field i16) (field (mut i8)) (field (mut i64)) (field i16) (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)))))
    (type (;29;) (sub (struct (field f32) (field structref) (field i32) (field (mut i8)) (field (mut i8)))))
    (type (;30;) (sub (struct (field i16) (field (mut f32)) (field i8) (field (mut i16)) (field (mut f32)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field i32) (field i8))))
    (type (;31;) (struct (field f64) (field i16) (field i64) (field (mut i8)) (field i64) (field i8)))
    (type (;32;) (sub (array (mut i16))))
  )
  (import "" "" (global (;0;) (mut f64)))
  (table (;0;) 0 283222 externref)
  (memory (;0;) 73 88)
  (tag (;0;) (type 2))
  (tag (;1;) (type 26))
  (global (;1;) (mut i64) i64.const 0)
  (global (;2;) (mut i32) i32.const 0)
  (global (;3;) (mut i32) i32.const 0)
  (export "" (global 1))
  (export "1" (global 2))
  (export "2" (global 3))
  (start 0)
  (elem (;0;) declare (ref null 2) (ref.func 1))
  (func (;0;) (type 24)
    f64.const 0x1.bc149850fbb09p+496 (;=354894719589885300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
    f64.sqrt
    f64.neg
    block (type 8) ;; label = @1
      loop ;; label = @2
        loop (type 8) ;; label = @3
          ref.null 27
          br_on_null 0 (;@3;)
          try_table (type 26) ;; label = @4
            table.size 0
            br_table 0 (;@4;) 1 (;@3;) 2 (;@2;) 3 (;@1;) 4 3 (;@1;)
            global.get 0
            i64.reinterpret_f64
            global.get 1
            i64.xor
            global.set 1
          end
          drop
        end
      end
    end
    i64.reinterpret_f64
    global.get 1
    i64.xor
    global.set 1
  )
  (func (;1;) (type 26)
    f64.const -nan:0xffeffffffffff (;=NaN;)
    f64.abs
    f64.ceil
    call 0
    f32.const 0x1.p-132 (;=0.000000000000000000000000000000000000000183671;)
    i32.trunc_sat_f32_s
    memory.grow
    array.new_fixed 1 0
    table.size 0
    i32.load8_u offset=3278388
    i32.extend16_s
    memory.size
    ref.i31
    extern.convert_any
    br_on_null 0
    global.get 0
    f32.const 0x1.fffffep+0 (;=1.9999999;)
    return_call 1
    return_call 1
    global.get 0
    f64.abs
    i32.trunc_f64_s
    f32.reinterpret_i32
    i32.trunc_sat_f32_u
    call 1
    global.get 2
    i32.xor
    global.set 2
    i32.reinterpret_f32
    global.get 3
    i32.xor
    global.set 3
    i64.reinterpret_f64
    global.get 1
    i64.xor
    global.set 1
    drop
    global.get 2
    i32.xor
    global.set 2
    drop
    global.get 2
    i32.xor
    global.set 2
    i64.reinterpret_f64
    global.get 1
    i64.xor
    global.set 1
  )
  (data (;0;) "r")
)
