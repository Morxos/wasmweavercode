(module
  (rec
    (type (;0;) (sub (func)))
    (type (;1;) (sub (array (mut i8))))
    (type (;2;) (sub (struct)))
    (type (;3;) (sub (func)))
  )
  (rec
    (type (;4;) (struct (field i32) (field (mut i16)) (field (mut i32)) (field i16) (field (mut f64)) (field i8) (field (mut i32))))
    (type (;5;) (sub (struct (field (mut f64)) (field i8) (field (mut i64)) (field i8) (field (mut i32)) (field i16))))
    (type (;6;) (sub (array (mut i8))))
    (type (;7;) (sub (struct (field f32) (field i16) (field i16) (field (mut i16)))))
    (type (;8;) (struct (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field (mut structref)) (field (mut f32)) (field i16) (field (mut i16)) (field f32) (field i8) (field (mut i8)) (field (mut i16)) (field nullexternref) (field f32)))
    (type (;9;) (sub (func)))
    (type (;10;) (func (param (ref null 3)) (result i64 f32 arrayref i32 i32 i64 eqref)))
    (type (;11;) (struct (field (mut i8)) (field i8) (field f64) (field (mut i8)) (field f64) (field f64) (field (mut i8)) (field i8) (field (mut i32)) (field (mut i8))))
    (type (;12;) (sub final 1 (array (mut i8))))
  )
  (rec
    (type (;13;) (struct (field i16) (field (mut i32)) (field i8) (field i8) (field i16) (field (mut f32)) (field i32) (field i32) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field i8) (field (mut i8))))
    (type (;14;) (sub (struct)))
    (type (;15;) (array i16))
    (type (;16;) (struct (field (mut i16)) (field (mut i16)) (field (mut i16)) (field f32) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut f32)) (field i31ref) (field (mut i16)) (field i32) (field i8) (field (mut i16)) (field (mut i16))))
    (type (;17;) (array (mut i16)))
    (type (;18;) (sub (struct (field i8) (field arrayref) (field exnref) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field i8) (field i32) (field i8) (field (mut f32)) (field (mut i8)) (field i8) (field (mut exnref)) (field i16) (field i64) (field i8) (field (mut i8)))))
    (type (;19;) (sub final 6 (array (mut i8))))
    (type (;20;) (func (param i64 i64 i32) (result i32)))
    (type (;21;) (sub (struct (field i16) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i16) (field f32))))
    (type (;22;) (func (param i64 f64 f64 funcref) (result externref i32 f64 eqref i32 i64)))
    (type (;23;) (sub (struct (field i64) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field i8) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field (mut i8)))))
    (type (;24;) (sub (array (mut i32))))
    (type (;25;) (sub (func (param i64 i32))))
    (type (;26;) (struct (field i16) (field i16) (field (ref null 16)) (field i8) (field f32) (field i8) (field (mut i16))))
    (type (;27;) (sub (struct (field f32) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field (mut f32)) (field (mut i8)) (field i16) (field i16) (field i8) (field i8) (field i8) (field f32) (field i8) (field i8) (field f32) (field i8) (field f64) (field (mut i16)))))
    (type (;28;) (func (param f32) (result i32 f32 i32)))
    (type (;29;) (sub (array (mut i16))))
    (type (;30;) (struct (field f64) (field i16) (field f32) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8))))
    (type (;31;) (sub (struct (field i8) (field (mut f32)) (field i8) (field i64) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)))))
    (type (;32;) (sub (func (param i32 f64))))
    (type (;33;) (sub (func (result i32))))
    (type (;34;) (sub (struct (field externref) (field (mut i16)) (field i64) (field f32) (field nullref) (field (mut i16)) (field (mut i8)) (field f64) (field externref) (field (mut i8)) (field (mut i16)) (field i16) (field (mut f32)) (field arrayref) (field (mut i16)) (field i8) (field i16) (field i8) (field f64) (field f32))))
    (type (;35;) (sub (array i16)))
    (type (;36;) (sub (struct (field i8) (field (mut i64)) (field (mut i16)) (field i16) (field i8) (field f32) (field (mut f64)) (field (mut i16)) (field f32) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut nullfuncref)) (field (mut i8)) (field (mut i8)))))
    (type (;37;) (sub (array i8)))
    (type (;38;) (sub (struct (field (mut i8)) (field (mut i31ref)) (field i8) (field f32) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field i16) (field f32))))
    (type (;39;) (sub (struct (field (mut i16)) (field i32) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field i8) (field i16) (field (mut i8)) (field i64))))
    (type (;40;) (sub (func (param f64) (result f32))))
    (type (;41;) (sub (func)))
    (type (;42;) (sub (struct (field (mut f64)) (field (mut i8)) (field (mut i8)) (field i16) (field anyref) (field i8) (field (mut externref)) (field i16))))
    (type (;43;) (sub (struct (field i8) (field (mut f64)) (field i32))))
    (type (;44;) (struct (field (mut i16)) (field i32) (field (mut nullexternref)) (field (mut i16)) (field (mut f64)) (field i8) (field i8) (field i32) (field (mut i8)) (field (mut i8)) (field i8) (field i64) (field i16) (field i64) (field (mut i16)) (field i16) (field i16) (field i16)))
    (type (;45;) (func (result (ref null 36) f64 f32 nullref f32)))
    (type (;46;) (sub (func)))
    (type (;47;) (sub 24 (array (mut i32))))
    (type (;48;) (array i8))
    (type (;49;) (sub (func)))
    (type (;50;) (func (param anyref)))
    (type (;51;) (sub (array f32)))
    (type (;52;) (struct (field i64) (field (mut f32)) (field f64)))
    (type (;53;) (sub (struct (field (mut i8)) (field i16) (field i8) (field i16) (field (mut i8)) (field externref) (field (mut (ref null 37))))))
    (type (;54;) (struct (field i8) (field (mut f64)) (field i8) (field (mut i8)) (field i16) (field i16) (field (mut nullref)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i8) (field i32) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16))))
    (type (;55;) (func (param f32 funcref)))
    (type (;56;) (sub 0 (func)))
    (type (;57;) (sub 0 (func)))
    (type (;58;) (sub 0 (func)))
    (type (;59;) (sub 0 (func)))
    (type (;60;) (sub 0 (func)))
  )
  (func (;0;) (type 0))
)
