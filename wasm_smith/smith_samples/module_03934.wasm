(module
  (rec
    (type (;0;) (struct (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field f64) (field structref) (field i8) (field i8) (field i16) (field i8) (field (mut i8)) (field (mut f64)) (field (mut anyref)) (field (mut i16))))
    (type (;1;) (sub (func)))
    (type (;2;) (sub (func (result i64))))
    (type (;3;) (struct (field (mut i64)) (field (mut f32)) (field (mut f32)) (field i8) (field structref) (field i8) (field i64)))
    (type (;4;) (array (mut nullref)))
    (type (;5;) (array (mut i16)))
    (type (;6;) (sub (array i8)))
    (type (;7;) (func))
    (type (;8;) (sub (struct (field (mut externref)) (field (mut f64)) (field f64) (field f32) (field (mut f64)) (field f64) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field f64) (field (mut i16)) (field i16) (field i32))))
    (type (;9;) (sub (func (result f32))))
    (type (;10;) (sub (func (param arrayref f64))))
    (type (;11;) (sub (struct (field (mut f32)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut f32)) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field (mut f32)) (field (mut f64)) (field i16) (field i16) (field f32) (field (mut f64)) (field i32) (field (mut i8)) (field i16) (field (mut f32)))))
    (type (;12;) (sub (func (result eqref f64))))
    (type (;13;) (sub (func (param i64) (result i64 f64 i32))))
    (type (;14;) (func (param f64) (result i64)))
    (type (;15;) (array f32))
    (type (;16;) (sub (struct (field (mut nullexternref)) (field i16) (field (mut i8)) (field i16) (field (mut i8)) (field f32) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i16)))))
    (type (;17;) (func (param f32) (result i32)))
    (type (;18;) (sub (func (param i64 i32 f64 f64 nullexternref f32) (result (ref null 14) i64 exnref))))
    (type (;19;) (sub (array (mut i8))))
    (type (;20;) (func (param nullexternref i32 i32) (result i32 i64 i32)))
    (type (;21;) (array (mut i8)))
    (type (;22;) (sub (struct (field f64) (field f32))))
    (type (;23;) (struct (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field i8) (field (mut i16)) (field i16) (field i8) (field exnref) (field (mut i8)) (field (mut i16)) (field i16)))
    (type (;24;) (sub (struct (field (mut i64)) (field (mut (ref null 8))) (field (mut (ref null 19))))))
    (type (;25;) (struct (field (mut i8)) (field (ref null 20)) (field (mut f32)) (field i32) (field i8) (field i64) (field i8)))
    (type (;26;) (sub (array (mut i8))))
    (type (;27;) (sub (struct (field (mut i16)) (field i32) (field i8) (field i32) (field i64) (field i8) (field (mut i16)) (field i16) (field i16) (field (mut (ref null 26))) (field i16) (field f64) (field (mut i16)) (field (mut arrayref)))))
    (type (;28;) (array f64))
    (type (;29;) (sub (func (result f32))))
    (type (;30;) (sub (func (param f32 f32 f64) (result eqref f64))))
    (type (;31;) (func (param i32) (result i64)))
    (type (;32;) (struct (field (mut i32)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut funcref)) (field (mut i32)) (field i16) (field i8) (field i8) (field i16) (field (mut i16)) (field i64)))
    (type (;33;) (sub (func (param i32 i64))))
    (type (;34;) (array i8))
    (type (;35;) (sub (struct (field i16) (field (ref null 28)) (field anyref) (field i8) (field i16) (field i16) (field (mut f64)))))
    (type (;36;) (sub (array (mut i16))))
    (type (;37;) (sub (struct (field (mut f64)) (field (mut i16)) (field f64) (field i8) (field i16) (field i16) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field i64))))
    (type (;38;) (func))
    (type (;39;) (sub (array i32)))
  )
  (import "\u{2}t" "" (tag (;0;) (type 10) (param arrayref f64)))
  (import "" "" (tag (;1;) (type 10) (param arrayref f64)))
  (memory (;0;) i64 10)
  (tag (;2;) (type 38))
  (tag (;3;) (type 1))
  (tag (;4;) (type 7))
  (global (;0;) (ref null 36) ref.null 36)
  (global (;1;) (mut f32) f32.const 0x1.2f34bp-56 (;=0.00000000000000001643682;))
  (global (;2;) f32 f32.const 0x1.a0a1aep+18 (;=426630.72;))
  (export "" (memory 0))
  (export "Ki" (memory 0))
  (start 0)
  (elem (;0;) (ref null 6) (ref.null none))
  (elem (;1;) (ref null 20))
  (elem (;2;) declare funcref (ref.func 0) (ref.null 20))
  (elem (;3;) (ref null 11))
  (func (;0;) (type 1)
    (local i32)
    global.get 2
    i64.trunc_f32_u
    f64.convert_i64_s
    f64.ceil
    i64.trunc_f64_s
    i64.load offset=122433 align=4
    i64.extend16_s
    br 0
    i64.const 4294967295
    i64.store16 offset=354325 align=1
    global.get 1
    f32.nearest
    elem.drop 3
    local.get 0
    br 0
    f64.convert_i32_s
    f64.floor
    f64.sqrt
    i32.trunc_sat_f64_u
    global.get 0
    call 0
    br 0
    ref.null nofunc
    ref.cast nullfuncref
    ref.null 31
    ref.is_null
    memory.size
    i64.load offset=455349
    i64.load offset=407201 align=1
    f64.load offset=309384 align=2
    br 0
    i32.trunc_sat_f64_u
    i32.gt_u
    br_if 0
    f64.const -0x1.63c3cb0693fc9p+33 (;=-11937486349.156145;)
    f32.demote_f64
    f32.nearest
    global.set 1
    return_call 0
    ref.is_null
    f32.convert_i32_s
    array.new_fixed 15 0
    ref.func 0
    return
    f32.const 0x1.026708p-9 (;=0.0019714544;)
    global.set 1
    try_table (type 29) (result f32) (catch_all 0) (catch 4 0) ;; label = @1
      loop (type 9) (result f32) ;; label = @2
        f64.const 0x1.d30f043eaa07p+616 (;=496145196828255500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
        i64.trunc_f64_s
        i64.load offset=487461 align=4
        i32.load16_u offset=376694
        global.get 0
        ref.test (ref null 36)
        i64.const -1817117930403825201
        struct.new_default 16
        loop (type 29) (result f32) ;; label = @3
          ref.null func
          ref.as_non_null
          unreachable
          unreachable
        end
        unreachable
      end
    end
    unreachable
  )
)
