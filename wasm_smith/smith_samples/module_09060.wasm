(module
  (rec
    (type (;0;) (sub (func)))
    (type (;1;) (struct (field (mut i16))))
    (type (;2;) (sub (array i16)))
    (type (;3;) (sub (func (result i64))))
    (type (;4;) (struct (field (mut i8)) (field i16) (field (mut f64)) (field (mut i8))))
    (type (;5;) (struct (field (mut i8)) (field i64)))
    (type (;6;) (func (param f32 f64)))
    (type (;7;) (sub (array i8)))
    (type (;8;) (struct (field (mut i32)) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field i8) (field (mut i8)) (field i8) (field (mut (ref null 7))) (field i8) (field i16) (field f64) (field i8) (field i8) (field (mut f64))))
    (type (;9;) (sub (func (param f64) (result nullfuncref))))
    (type (;10;) (struct (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i64))))
    (type (;11;) (func (param f64 i32)))
    (type (;12;) (array (mut f64)))
    (type (;13;) (sub (array (mut i32))))
    (type (;14;) (array (mut i16)))
    (type (;15;) (array (mut i16)))
    (type (;16;) (func (param f64) (result i32)))
    (type (;17;) (func (param externref f64 i32 (ref null 13) i64 i64 (ref null 4))))
    (type (;18;) (struct (field i16) (field (mut i8)) (field (mut i8)) (field f32) (field (mut i16)) (field i16) (field (mut i64)) (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field (mut f64)) (field i64) (field f32) (field i8) (field nullexternref) (field (mut i16)) (field i16) (field (mut i16)) (field i16)))
    (type (;19;) (sub (func (result f32))))
    (type (;20;) (sub (struct (field (mut nullexternref)) (field (mut f32)) (field i64) (field (mut i16)) (field f32) (field i16) (field f32) (field (mut i64)) (field (mut i16)) (field f64) (field i16) (field (mut i8)) (field (mut externref)) (field f32) (field i16) (field (mut (ref null 18))))))
    (type (;21;) (sub (struct (field eqref) (field f64) (field (mut i8)) (field i32) (field (mut i16)) (field i16) (field i16) (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i64)) (field (mut i16)))))
    (type (;22;) (sub (array i8)))
    (type (;23;) (sub (array i16)))
    (type (;24;) (sub (array (ref null 10))))
    (type (;25;) (sub (struct (field f32) (field (mut i8)) (field i16) (field i8) (field i16) (field (mut i8)) (field f32))))
    (type (;26;) (struct (field (mut i32)) (field i8) (field (mut i16)) (field i8)))
    (type (;27;) (struct (field (mut f64)) (field (ref null 10)) (field i32) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut exnref)) (field (mut i8)) (field (mut i8)) (field (mut i32)) (field i16) (field i8) (field (mut (ref null 12)))))
  )
  (rec
    (type (;28;) (array (mut eqref)))
    (type (;29;) (sub (func (param f32 f64 exnref i64))))
    (type (;30;) (sub (struct (field (mut i16)) (field i32) (field (mut i8)) (field i8) (field i32) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field (mut anyref)))))
    (type (;31;) (sub (array i16)))
    (type (;32;) (sub (struct (field (mut f32)))))
    (type (;33;) (sub (array i32)))
    (type (;34;) (sub (func (param i64 f64 f64 externref f32))))
    (type (;35;) (struct (field i16) (field i8) (field i32) (field (mut i16)) (field (mut i64)) (field i8) (field (mut i8))))
    (type (;36;) (sub (array i8)))
    (type (;37;) (sub (array f32)))
    (type (;38;) (sub (struct (field funcref) (field eqref) (field i8) (field i16) (field (mut i8)) (field (mut i64)) (field (mut f32)))))
    (type (;39;) (func))
    (type (;40;) (array (mut f64)))
    (type (;41;) (struct (field (mut i8)) (field (mut i16)) (field (mut f32))))
    (type (;42;) (sub (struct (field i16) (field f64) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i8)) (field i8) (field i8) (field i16) (field f32) (field i16) (field i8) (field f64) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field f32) (field i8))))
    (type (;43;) (sub (func (result f32))))
    (type (;44;) (sub (array i16)))
    (type (;45;) (sub (func)))
    (type (;46;) (struct))
    (type (;47;) (array (mut i16)))
    (type (;48;) (sub (func (param f32) (result f32))))
    (type (;49;) (sub (func (param f32 nullref f32 i64 i64) (result arrayref i32))))
    (type (;50;) (struct (field (mut i8))))
    (type (;51;) (func))
    (type (;52;) (sub (array f64)))
    (type (;53;) (sub (struct)))
    (type (;54;) (struct (field (mut i8))))
    (type (;55;) (sub (struct (field (mut i8)) (field (mut f32)) (field (mut i8)) (field i16) (field (mut f32)) (field i8) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i32)) (field (mut i64)) (field i16) (field i32))))
    (type (;56;) (sub (struct (field i8) (field i32) (field (mut i16)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut i16)) (field i8))))
    (type (;57;) (sub (struct (field f32))))
    (type (;58;) (func (result f64)))
    (type (;59;) (sub 44 (array i16)))
    (type (;60;) (sub final 24 (array nullref)))
    (type (;61;) (array (mut nullexternref)))
    (type (;62;) (struct (field (mut f64)) (field (mut i16))))
    (type (;63;) (sub (func)))
  )
  (table (;0;) i64 10 (ref null 27))
  (tag (;0;) (type 39))
  (elem (;0;) (table 0) (i64.const 1) nullref)
  (func (;0;) (type 19) (result f32)
    data.drop 0
    loop (type 51) ;; label = @1
      try_table (type 45) (catch 0 0 (;@1;)) (catch 0 0 (;@1;)) (catch 0 0 (;@1;)) (catch 0 0 (;@1;)) (catch_all 0 (;@1;)) (catch 0 0 (;@1;)) (catch 0 0 (;@1;)) (catch_all 0 (;@1;)) (catch 0 0 (;@1;)) ;; label = @2
        ref.null 6
        data.drop 0
        ref.null eq
        data.drop 0
        call 0
        i64.trunc_f32_s
        data.drop 1
        data.drop 1
        f32.const 0x1.p-145 (;=0.000000000000000000000000000000000000000000022;)
        f32.sqrt
        f32.nearest
        table.size 0
        f64.convert_i64_u
        f64.neg
        f64.ceil
        ref.null 42
        call 0
        i32.const -1154539396
        loop (result f32) ;; label = @3
          block (type 39) ;; label = @4
            loop (type 0) ;; label = @5
              struct.new_default 35
              block (type 58) (result f64) ;; label = @6
                table.size 0
                block ;; label = @7
                end
                unreachable
              end
              unreachable
            end
          end
          unreachable
        end
        unreachable
      end
    end
    unreachable
  )
  (data (;0;) "+")
  (data (;1;) "R")
)
