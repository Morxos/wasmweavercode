(module
  (rec
    (type (;0;) (sub (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;1;) (array (mut externref)))
    (type (;2;) (sub (struct (field i8) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field (mut i8)) (field arrayref) (field i32) (field i32) (field funcref) (field (mut i16)) (field i8) (field i8) (field i16) (field (mut i16)) (field (mut f64)) (field i8) (field (mut f64)) (field i32))))
    (type (;3;) (array (mut i8)))
    (type (;4;) (func (result exnref f64)))
    (type (;5;) (struct (field (mut i64)) (field (mut i16)) (field f64) (field (mut i64))))
    (type (;6;) (sub (func (param i64))))
    (type (;7;) (sub (func)))
    (type (;8;) (struct (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field i32) (field (mut i16)) (field (mut i16)) (field (mut f32))))
    (type (;9;) (sub (struct (field i8))))
    (type (;10;) (sub (struct (field i64) (field nullexternref) (field funcref) (field i16) (field (mut i8)) (field i16) (field i8) (field i16) (field i8) (field i16) (field (mut arrayref)) (field i16) (field i8) (field f64) (field i16) (field (mut i16)))))
    (type (;11;) (sub (array i16)))
    (type (;12;) (sub (func (result i32 i32 f32 i64 f32 f32 f64 nullexternref f32))))
    (type (;13;) (array (mut i16)))
    (type (;14;) (struct (field i8) (field i64) (field i8) (field (mut i64)) (field (mut f64)) (field (mut (ref null 13))) (field (mut f32)) (field (mut nullexternref)) (field (mut i8)) (field i16) (field i16) (field i8) (field (mut f64)) (field i16) (field (mut i8)) (field i8) (field i16) (field (mut f64))))
    (type (;15;) (array (mut i32)))
    (type (;16;) (func (param i64) (result i64)))
    (type (;17;) (sub (array (mut i16))))
    (type (;18;) (sub (struct (field i8) (field i16))))
    (type (;19;) (struct (field i8) (field i16) (field i16) (field i16)))
    (type (;20;) (struct (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field f64) (field (mut i16)) (field i16) (field i16) (field (mut exnref)) (field i32) (field (mut i8)) (field (mut i64)) (field i64) (field (mut i16)) (field i16)))
    (type (;21;) (sub (func (param i64))))
    (type (;22;) (sub final 9 (struct (field i8) (field i32) (field (mut f64)) (field i16) (field (mut f64)))))
    (type (;23;) (func (result f32)))
    (type (;24;) (array i8))
    (type (;25;) (array (mut f64)))
    (type (;26;) (struct (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16))))
    (type (;27;) (sub (array i8)))
    (type (;28;) (array (mut i8)))
    (type (;29;) (sub (array i8)))
    (type (;30;) (func (result i32)))
    (type (;31;) (array i8))
    (type (;32;) (array i8))
    (type (;33;) (sub (func)))
    (type (;34;) (sub (func (param f32 i32 f32))))
    (type (;35;) (sub (struct (field (mut externref)) (field i32) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut f32)) (field i8) (field (mut i8)) (field i8) (field (mut i8)))))
    (type (;36;) (struct (field i16) (field i32) (field i8)))
    (type (;37;) (struct (field (mut f32)) (field (mut i32)) (field (mut i64)) (field (mut i8)) (field i8) (field (mut f64)) (field i64) (field (mut i8)) (field i16)))
    (type (;38;) (sub (array i16)))
    (type (;39;) (array i32))
    (type (;40;) (sub (struct (field (mut i16)) (field i8) (field i32) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut f64)) (field (mut f64)) (field f32) (field i8))))
    (type (;41;) (sub (func (param i32 i32))))
    (type (;42;) (sub (func (param f32 f32) (result i32 i32 f64))))
    (type (;43;) (sub 40 (struct (field (mut i16)) (field i8) (field i32) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut f64)) (field (mut f64)) (field f32) (field i8) (field (mut i16)) (field (mut i8)))))
    (type (;44;) (struct (field i16) (field (mut i16)) (field i8) (field (mut i16)) (field i16) (field i64) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16))))
    (type (;45;) (struct (field i64) (field i8) (field (mut i64)) (field (mut i8)) (field i16) (field funcref) (field (mut i16)) (field (mut i32)) (field i16) (field (mut (ref null 7))) (field (mut i8))))
    (type (;46;) (func (result (ref null 32))))
    (type (;47;) (sub (array (mut i16))))
    (type (;48;) (func (param f64) (result (ref null 3))))
    (type (;49;) (sub (struct (field i8) (field f32) (field i16) (field f64) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field (mut i8)))))
    (type (;50;) (func))
    (type (;51;) (sub (func (param i32 i64 i64))))
    (type (;52;) (struct (field i32)))
    (type (;53;) (sub (func (param f32 i64))))
    (type (;54;) (sub (array (mut i16))))
    (type (;55;) (sub (struct (field i8) (field i64))))
    (type (;56;) (array (mut i8)))
    (type (;57;) (func (param i32)))
    (type (;58;) (array (mut i32)))
    (type (;59;) (struct (field i16) (field i32) (field i8) (field (mut i8)) (field i32) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut eqref)) (field (mut i16)) (field i64) (field (mut i16)) (field (mut i32)) (field i16) (field i32)))
    (type (;60;) (sub (array i8)))
    (type (;61;) (func))
    (type (;62;) (array i8))
    (type (;63;) (func (param i64 f64 i64 i64 i32 i32 f32) (result f32)))
    (type (;64;) (array i32))
    (type (;65;) (sub (struct (field i16) (field f64) (field i8) (field (mut i8)) (field i16) (field i8) (field i8) (field f32) (field (mut i16)) (field i16) (field (mut i16)) (field i32) (field nullfuncref) (field (mut f64)) (field (mut i8)) (field i8))))
    (type (;66;) (sub final 6 (func (param i64))))
    (type (;67;) (sub (array (mut f64))))
    (type (;68;) (sub final 34 (func (param f32 i32 f32))))
    (type (;69;) (sub (struct (field i16) (field i32) (field i64) (field i8) (field i8) (field (mut f64)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i64)) (field i16) (field (mut i8)) (field (mut i32)) (field i8) (field i8) (field i8) (field i8) (field i8))))
    (type (;70;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;71;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;72;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;73;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;74;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;75;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;76;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;77;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;78;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;79;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;80;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;81;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;82;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
    (type (;83;) (sub 0 (struct (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field i8) (field (mut eqref)) (field f32) (field f64) (field (mut i8)))))
  )
  (func (;0;) (type 4) (result exnref f64)
    unreachable
  )
)
