(module
  (rec
    (type (;0;) (sub (func (param i32 i32) (result i32 f32 i32))))
    (type (;1;) (sub (struct (field i8) (field i16) (field (mut f64)) (field (mut i16)) (field i16) (field i8) (field i8) (field i32) (field f64) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i64)) (field (mut i16)) (field f64) (field i8) (field (mut f32)) (field (mut i16)))))
    (type (;2;) (sub (struct (field (mut i16)) (field (mut i16)) (field f32) (field (mut i16)) (field (mut i32)) (field i16) (field i64) (field (mut i64)) (field i16))))
    (type (;3;) (sub (array (mut i8))))
    (type (;4;) (struct (field (mut i8)) (field i16) (field f64) (field i8) (field (mut i8)) (field f32)))
    (type (;5;) (sub (func (param i32 arrayref))))
    (type (;6;) (sub (struct (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut anyref)) (field (mut f32)) (field (mut i8)) (field f32) (field f64) (field i8) (field i32) (field i16) (field i8) (field (mut i32)) (field (mut i32)) (field (mut i16)) (field (mut i32)))))
    (type (;7;) (sub (func (param i64) (result nullexternref i32 f64 nullfuncref))))
    (type (;8;) (sub (struct (field i16) (field (mut f64)))))
    (type (;9;) (func (param i32) (result eqref)))
    (type (;10;) (func (param f64) (result f32)))
    (type (;11;) (func (param i32 i32)))
    (type (;12;) (struct (field (mut i8)) (field (mut f32)) (field i8) (field f64)))
    (type (;13;) (array f32))
    (type (;14;) (func (result f64)))
    (type (;15;) (sub (struct (field (mut i8)) (field (mut i8)) (field f64) (field (mut i8)) (field (mut i16)) (field f32) (field (mut f64)) (field (mut i16)) (field (mut i64)) (field f64) (field i64))))
    (type (;16;) (sub (struct (field (mut i8)) (field i16) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut anyref)) (field i8) (field i64) (field (mut i64)) (field (mut i16)) (field i8) (field (mut anyref)) (field (mut f32)) (field i8) (field i16) (field i32) (field i8) (field i16))))
    (type (;17;) (func (param f64)))
    (type (;18;) (sub (struct (field (mut i16)) (field i16) (field i8) (field i8))))
    (type (;19;) (sub (struct (field (mut i16)) (field exnref) (field i16) (field (mut f32)) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field (mut f64)) (field (mut i8)) (field (mut i32)) (field i8))))
    (type (;20;) (sub (array i8)))
    (type (;21;) (struct (field (mut i16)) (field i8) (field (ref null 18)) (field (mut i64)) (field (mut f32))))
    (type (;22;) (sub (array i32)))
    (type (;23;) (array (mut f64)))
    (type (;24;) (func (result f32)))
    (type (;25;) (func (param f32 i32 f32 i32)))
    (type (;26;) (struct (field f32) (field f32) (field f32) (field (mut i31ref)) (field (mut i16))))
    (type (;27;) (sub (struct (field i8) (field i64) (field i16) (field (mut (ref null 9))) (field (mut i32)) (field i16) (field (mut i8)) (field i16) (field i16) (field i8) (field i32) (field (mut i16)) (field i16) (field i32) (field (mut i8)) (field (mut i16)) (field f32))))
    (type (;28;) (struct (field i32) (field i16) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i8) (field i16) (field i8)))
    (type (;29;) (sub (array (mut i16))))
    (type (;30;) (array (mut (ref null 9))))
    (type (;31;) (sub (struct (field i8) (field i16) (field i16) (field (mut i8)))))
    (type (;32;) (sub (struct (field (mut i64)) (field (mut f64)) (field externref) (field i8) (field i16) (field (mut funcref)) (field i16) (field i16) (field (mut f32)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field i32) (field (mut i8)) (field i32))))
    (type (;33;) (sub (array i8)))
    (type (;34;) (sub (struct (field i8) (field i16) (field (mut i16)))))
    (type (;35;) (array i8))
    (type (;36;) (sub (func (result i64))))
    (type (;37;) (struct (field i8) (field i16)))
  )
  (global (;0;) (mut i32) i32.const 0)
  (global (;1;) (mut i32) i32.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (global (;3;) (mut i64) i64.const 0)
  (export "" (global 0))
  (export "1" (global 1))
  (export "X\u{16}" (global 2))
  (export "}kJ-" (global 3))
  (elem (;0;) declare nullexternref)
  (elem (;1;) declare exnref (ref.null exn))
  (elem (;2;) (ref null 11) (ref.null nofunc) (ref.null nofunc))
  (func (;0;) (type 5) (param i32 arrayref)
    (local (ref null 6))
    f64.const -0x1.094adf9a5f14ep-210 (;=-0.0000000000000000000000000000000000000000000000000000000000000006297756658029829;)
    data.drop 3
    try_table (type 17) (param f64) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) (catch_all 0) ;; label = @1
      i32.trunc_sat_f64_u
      loop ;; label = @2
      end
      elem.drop 1
      data.drop 0
      i64.extend_i32_s
      i64.ctz
      br 1
      i64.extend16_s
      f64.convert_i64_u
      f64.floor
      f64.trunc
      data.drop 3
      i64.reinterpret_f64
      data.drop 0
      i64.const 6284594330391980434
      block (type 14) (result f64) ;; label = @2
        f64.const 0x1.9128d28a1b657p+1005 (;=537307271257541200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
        block (type 14) (result f64) ;; label = @3
          block (result f32) ;; label = @4
            elem.drop 1
            i32.const -905208329
            i32.extend16_s
            global.get 0
            i32.xor
            global.set 0
            f32.const -0x1.45db42p-108 (;=-0.0000000000000000000000000000000039223547;)
          end
          i32.reinterpret_f32
          global.get 1
          i32.xor
          global.set 1
          f64.const -nan:0xffff000000000 (;=NaN;)
        end
        i64.reinterpret_f64
        global.get 2
        i64.xor
        global.set 2
      end
      i64.reinterpret_f64
      global.get 2
      i64.xor
      global.set 2
      global.get 3
      i64.xor
      global.set 3
      global.get 3
      i64.xor
      global.set 3
    end
  )
  (data (;0;) "")
  (data (;1;) "\f3")
  (data (;2;) "F\cd\1e)")
  (data (;3;) "")
)
