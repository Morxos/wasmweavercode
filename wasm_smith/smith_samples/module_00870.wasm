(module
  (rec
    (type (;0;) (struct (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut nullfuncref)) (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field (mut i32)) (field (mut i8))))
    (type (;1;) (sub (func)))
    (type (;2;) (func (param i64 i64)))
    (type (;3;) (sub final 1 (func)))
    (type (;4;) (array (mut i32)))
    (type (;5;) (sub (struct (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field nullfuncref) (field i16) (field i8) (field (mut i32)) (field (mut i16)) (field i64) (field i64) (field (mut i8)))))
    (type (;6;) (sub final 1 (func)))
    (type (;7;) (array (mut i8)))
    (type (;8;) (struct (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i64) (field (mut f64)) (field (mut i8)) (field i8) (field i16) (field i8) (field i16) (field f64) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i32)) (field i31ref) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i16))))
    (type (;9;) (sub (array (mut i8))))
    (type (;10;) (sub (func)))
    (type (;11;) (sub 5 (struct (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field nullfuncref) (field i16) (field i8) (field (mut i32)) (field (mut i16)) (field i64) (field i64) (field (mut i8)) (field i16) (field (mut i8)))))
    (type (;12;) (sub (array i8)))
    (type (;13;) (struct (field (mut i8)) (field i64) (field (mut i32)) (field (mut i16)) (field (mut i16)) (field i32) (field (mut i8))))
    (type (;14;) (struct (field (mut f64)) (field f32) (field funcref) (field i32) (field (mut i16)) (field (mut f32)) (field i8) (field i16) (field i16) (field (mut i8))))
    (type (;15;) (array (mut i8)))
    (type (;16;) (array (mut i64)))
    (type (;17;) (func (result f64)))
    (type (;18;) (array i8))
    (type (;19;) (sub final 9 (array (mut i8))))
    (type (;20;) (func (param i64)))
    (type (;21;) (sub (struct (field f64) (field (mut i64)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field i8) (field i16) (field (mut i16)) (field (mut i16)) (field (mut nullfuncref)) (field f64) (field (mut i16)) (field structref))))
    (type (;22;) (sub (array f32)))
    (type (;23;) (func (param f64)))
    (type (;24;) (struct (field (mut nullref)) (field f64) (field (mut f64)) (field i32) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i64)) (field (ref null 18)) (field (mut f32))))
    (type (;25;) (sub (func (param f64))))
    (type (;26;) (sub (array (mut i16))))
    (type (;27;) (struct (field (mut eqref)) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field (mut f64)) (field i16) (field (mut i8)) (field f32) (field i16) (field (mut i16))))
    (type (;28;) (sub (array f64)))
    (type (;29;) (array (mut f64)))
    (type (;30;) (struct (field (ref null 28)) (field i16) (field exnref) (field (mut f32)) (field i8) (field i8)))
    (type (;31;) (sub (func (param i64))))
    (type (;32;) (sub (func (result f64))))
    (type (;33;) (sub (array (mut funcref))))
    (type (;34;) (array (mut i32)))
    (type (;35;) (array (mut i8)))
    (type (;36;) (array f32))
    (type (;37;) (sub (struct (field (mut i8)) (field i16) (field (mut i16)) (field f64) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut eqref)) (field (mut i16)) (field i64) (field (mut i8)) (field (mut i8)) (field (mut i16)))))
    (type (;38;) (struct (field (mut i8)) (field i16) (field i8) (field f64) (field i16) (field (mut i16)) (field (mut nullexternref)) (field (mut exnref)) (field i16) (field (mut i16)) (field i16) (field (mut f32)) (field (mut f64)) (field i32) (field (mut i8)) (field i32) (field (mut i8))))
    (type (;39;) (struct (field (mut i16)) (field (mut i64))))
    (type (;40;) (func))
    (type (;41;) (sub (func (param f32 i64 i64))))
    (type (;42;) (sub (struct (field (mut i64)) (field (mut funcref)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)) (field f32) (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field f32) (field i8))))
    (type (;43;) (array i8))
    (type (;44;) (struct (field i64) (field i16) (field (mut i64)) (field i16) (field (mut i32)) (field i8)))
    (type (;45;) (sub (func (result i64 i32))))
    (type (;46;) (array i32))
    (type (;47;) (array (mut i32)))
    (type (;48;) (sub (array i8)))
    (type (;49;) (sub (array (mut i32))))
    (type (;50;) (sub (array f32)))
    (type (;51;) (func (param f64 i64)))
    (type (;52;) (func (param (ref null 6) i32) (result (ref null 31))))
    (type (;53;) (array (ref null 32)))
    (type (;54;) (sub (struct (field i16) (field f32) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field i16) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8) (field i8))))
  )
  (rec)
  (import "" "" (table (;0;) 195 71208 (ref null 24)))
  (import "e" "" (tag (;0;) (type 3)))
  (memory (;0;) i64 1758 273591580510998)
  (tag (;1;) (type 20) (param i64))
  (global (;0;) (ref null 10) ref.null nofunc)
  (global (;1;) (ref null 54) ref.null none)
  (elem (;0;) i31ref)
  (elem (;1;) (table 0) (i32.const 102) (ref null 24))
  (elem (;2;) i31ref (ref.null i31))
  (func (;0;) (type 20) (param i64)
    (local i32)
    ref.null 30
    ref.cast (ref none)
    global.get 1
    loop (type 10) ;; label = @1
      f64.const -0x1.7c149ab709bddp+148 (;=-529754879246505100000000000000000000000000000;)
      memory.size
      elem.drop 0
      local.get 1
      f64.convert_i32_s
      f64.floor
      br 0 (;@1;)
      i32.trunc_f64_u
      table.size 0
      i32.shr_u
      array.new 16
      ref.test (ref 16)
      br 1
      i64.const -67108865
      i64.load16_s offset=6761041
      ref.null i31
      ref.null none
      array.len
      throw 0
      i32.eqz
      nop
      i32.extend16_s
      memory.size
      i32.load16_s offset=83749322 align=1
      f32.convert_i32_u
      f64.promote_f32
      memory.size
      i64.load16_s offset=1776544351681821295 align=1
      i32.wrap_i64
      i32.extend16_s
      i64.extend_i32_u
      i32.load16_u offset=27507484
      i64.extend_i32_u
      f32.convert_i64_s
      f32.ceil
      f32.floor
      local.get 0
      loop (type 40) ;; label = @2
        loop ;; label = @3
          try_table (type 40) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) ;; label = @4
          end
        end
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 41) (param f32 i64 i64))
)
