(module
  (rec
    (type (;0;) (sub (struct (field (mut i64)))))
    (type (;1;) (func (param i32)))
    (type (;2;) (sub (func (param i32 funcref i32) (result i64 nullexternref))))
    (type (;3;) (sub (func (param f32))))
    (type (;4;) (array (mut i16)))
    (type (;5;) (sub (func (result i64))))
    (type (;6;) (sub (struct (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field i8) (field i8) (field i16))))
    (type (;7;) (func (param f32 f64) (result i64)))
    (type (;8;) (sub (struct (field exnref) (field (mut i8)) (field i16) (field f32) (field (mut i8)) (field anyref) (field (mut i16)) (field i8) (field i32) (field nullfuncref) (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i32)) (field i8) (field (mut i8)) (field f64) (field i32) (field (mut i16)))))
    (type (;9;) (sub (array (mut f64))))
    (type (;10;) (struct (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut (ref null 0))) (field f64) (field f32) (field i16) (field (mut structref)) (field (mut i64)) (field i16) (field (mut i8)) (field (mut i8)) (field i31ref) (field f64) (field (mut i32)) (field (mut i16)) (field i8)))
    (type (;11;) (func (param f64 f64 f32 i32 f32 i64)))
    (type (;12;) (struct (field (mut i64)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8))))
    (type (;13;) (sub (struct (field (mut i16)))))
    (type (;14;) (func (param nullfuncref f32 i64 f64 f64 i32) (result i32)))
    (type (;15;) (func (param anyref i32) (result nullfuncref i64 f64 i64)))
    (type (;16;) (sub (func)))
    (type (;17;) (func))
    (type (;18;) (func (param structref) (result i32 f64)))
    (type (;19;) (func (param f64) (result i32)))
    (type (;20;) (func (result i31ref)))
    (type (;21;) (sub (struct)))
    (type (;22;) (struct (field (mut i32)) (field i32) (field f32) (field i16) (field (mut (ref null 4))) (field (mut i8)) (field (mut f32)) (field i8)))
    (type (;23;) (array (mut f64)))
    (type (;24;) (sub (array i8)))
    (type (;25;) (func (result i64)))
    (type (;26;) (func (result i32 externref i64 i64)))
    (type (;27;) (sub (array (mut i8))))
    (type (;28;) (sub (array (mut i8))))
    (type (;29;) (sub (struct (field (mut i8)) (field (mut i64)) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field funcref) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i16))))
    (type (;30;) (sub 24 (array i8)))
    (type (;31;) (sub (func (param i64))))
    (type (;32;) (array f64))
    (type (;33;) (struct (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field f64)))
    (type (;34;) (array (mut i16)))
    (type (;35;) (sub (array (mut i32))))
    (type (;36;) (sub (func (param i64 i64 f32 i32) (result i32))))
    (type (;37;) (struct (field i16) (field (mut i8)) (field i8) (field (mut (ref null 4))) (field f64) (field i8) (field i16) (field i16) (field i8) (field (mut i64)) (field i8) (field i8) (field i64) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut f64)) (field (mut i16))))
    (type (;38;) (sub (array (mut i8))))
    (type (;39;) (struct (field (mut i32)) (field (mut i16)) (field (mut i8)) (field i32) (field i64) (field (mut i16)) (field i64) (field (mut i32)) (field (mut i8)) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field f32)))
    (type (;40;) (sub (array (mut i16))))
    (type (;41;) (array i16))
    (type (;42;) (sub (array (mut i8))))
    (type (;43;) (array (mut i8)))
    (type (;44;) (struct (field (mut i8)) (field (mut i64)) (field i16) (field (mut i8)) (field f32) (field (mut nullexternref)) (field (mut anyref)) (field (mut i8))))
    (type (;45;) (sub (array i16)))
    (type (;46;) (sub (func (param i64) (result i32 i32))))
    (type (;47;) (func (result i32)))
  )
  (import "" "" (table (;0;) 0 158296 (ref null 21)))
  (memory (;0;) i64 0)
  (global (;0;) f32 f32.const 0x1.5c53c6p+26 (;=91311896;))
  (global (;1;) (mut (ref null 35)) ref.null 35)
  (global (;2;) (mut i32) i32.const -1240954947)
  (elem (;0;) externref)
  (func (;0;) (type 19) (param f64) (result i32)
    loop (type 20) (result i31ref) ;; label = @1
      block (type 17) ;; label = @2
        try_table (type 25) (result i64) (catch_all 0 (;@2;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) ;; label = @3
          memory.size
          block (result i32) ;; label = @4
            try_table (type 16) (catch_all 3 (;@1;)) (catch_all 2 (;@2;)) (catch_all 3 (;@1;)) (catch_all 3 (;@1;)) (catch_all 3 (;@1;)) (catch_all 3 (;@1;)) (catch_all 2 (;@2;)) (catch_all 3 (;@1;)) (catch_all 3 (;@1;)) (catch_all 2 (;@2;)) ;; label = @5
              block (type 5) (result i64) ;; label = @6
                f64.const -nan:0xffe0000000000 (;=NaN;)
                f32.demote_f64
                f32.sqrt
                i32.trunc_f32_s
                ref.null 27
                global.get 1
                struct.new 21
                br 1 (;@5;)
                struct.new_default 33
                f64.const -0x1.1626bdce82f46p-165 (;=-0.00000000000000000000000000000000000000000000000002323228340101169;)
                f64.sqrt
                f64.const -nan:0xfffffffff7fff (;=NaN;)
                i32.trunc_sat_f64_u
                f64.convert_i32_u
                return_call 0
                loop (result f64) ;; label = @7
                  struct.new_default 29
                  ref.null 5
                  i32.const -524288
                  i32.clz
                  i32.popcnt
                  i64.const -18014398509481985
                  f64.load align=4
                  i32.const 1001725693
                  br_if 6 (;@1;)
                  block (type 17) ;; label = @8
                    nop
                    f64.const -0x1.e662c5afdd1d4p-418 (;=-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028067437242601278;)
                    local.set 0
                    try_table (type 17) (catch_all 0 (;@8;)) (catch_all 7 (;@1;)) (catch_all 6 (;@2;)) (catch_all 3 (;@5;)) (catch_all 1 (;@7;)) (catch_all 1 (;@7;)) (catch_all 1 (;@7;)) (catch_all 3 (;@5;)) (catch_all 0 (;@8;)) (catch_all 6 (;@2;)) ;; label = @9
                      try_table (type 20) (result i31ref) (catch_all 4 (;@5;)) (catch_all 7 (;@2;)) (catch_all 4 (;@5;)) (catch_all 7 (;@2;)) (catch_all 2 (;@7;)) (catch_all 8 (;@1;)) (catch_all 0 (;@9;)) ;; label = @10
                        elem.drop 0
                        memory.size
                        i64.load32_s
                        local.get 0
                        local.tee 0
                        f64.trunc
                        f64.neg
                        local.get 0
                        loop (type 47) (result i32) ;; label = @11
                          table.size 0
                          call 1
                          i32.load16_u align=1
                          f32.const 0x1.3a2bb4p+30 (;=1317727500;)
                          br 2 (;@9;)
                          f64.promote_f32
                          f64.trunc
                          i32.trunc_f64_u
                          table.get 0
                          extern.convert_any
                          struct.new_default 12
                          try_table (type 17) (catch_all 2 (;@9;)) (catch_all 4 (;@7;)) ;; label = @12
                            call 1
                            unreachable
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 26) (result i32 externref i64 i64)
    unreachable
  )
)
