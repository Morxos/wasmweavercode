(module
  (rec
    (type (;0;) (sub (struct (field i16) (field i32))))
    (type (;1;) (struct (field i16) (field i16) (field i8) (field (mut i64)) (field (mut i32)) (field (mut i8))))
    (type (;2;) (sub (func)))
    (type (;3;) (func (param i32) (result i32)))
    (type (;4;) (sub (array (mut i8))))
    (type (;5;) (func (result f64)))
    (type (;6;) (func (result f64 structref)))
    (type (;7;) (sub (struct (field f32) (field i16) (field i8) (field (mut anyref)) (field i8) (field (mut f32)) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i8)))))
    (type (;8;) (sub (array f64)))
    (type (;9;) (func))
    (type (;10;) (func))
    (type (;11;) (array (mut i16)))
    (type (;12;) (array exnref))
    (type (;13;) (func (result i32 nullfuncref (ref null 8))))
    (type (;14;) (sub (func)))
    (type (;15;) (struct (field (mut f32)) (field (mut i8)) (field (mut i8)) (field i8)))
    (type (;16;) (sub (struct)))
    (type (;17;) (func (result f32 i64)))
    (type (;18;) (struct (field (mut i8)) (field f64) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field (mut i8)) (field (mut funcref)) (field (mut i64)) (field (mut i8)) (field i64) (field anyref) (field (mut i32)) (field i8) (field (mut i8)) (field i16)))
    (type (;19;) (sub (func (param f32))))
    (type (;20;) (sub (array (mut structref))))
    (type (;21;) (sub 14 (func)))
    (type (;22;) (struct (field (mut i8))))
    (type (;23;) (sub (func (param f64))))
    (type (;24;) (func (result i32)))
    (type (;25;) (struct (field i16) (field i16)))
    (type (;26;) (sub (func (param i32 f32) (result f64))))
    (type (;27;) (array i8))
    (type (;28;) (func (result i32 nullref)))
    (type (;29;) (sub (struct (field (mut f64)) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field (mut f32)) (field i16) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field (mut i8)))))
    (type (;30;) (sub (func (result arrayref i32 arrayref i64))))
    (type (;31;) (struct (field f32) (field f32) (field (mut i16)) (field (mut i8)) (field f32) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i64)))
    (type (;32;) (struct (field f64) (field i8) (field f32) (field i8) (field (mut f64)) (field f64) (field (mut i32)) (field i8) (field f64) (field i8) (field (mut i16)) (field nullref) (field i16) (field (mut i8))))
    (type (;33;) (func (param funcref f64)))
    (type (;34;) (sub (func (param f64))))
    (type (;35;) (struct (field i16) (field f32) (field (mut i8)) (field (ref null 34)) (field (mut i16)) (field (mut i32)) (field (mut f64)) (field i8) (field (mut i8)) (field (mut i8)) (field i8) (field f32) (field (mut i16)) (field i8) (field (mut i8)) (field i8) (field i8)))
    (type (;36;) (func (param i32 anyref) (result f64)))
    (type (;37;) (sub (func (param f64 i64 (ref null 9) externref f64 f32))))
    (type (;38;) (func (result (ref null 1) i64)))
    (type (;39;) (sub (array (mut i8))))
  )
  (rec
    (type (;40;) (array (mut i8)))
    (type (;41;) (sub (array (mut (ref null 20)))))
    (type (;42;) (sub (struct)))
    (type (;43;) (array i8))
  )
  (table (;0;) 408 462787 (ref null 32) ref.null 32)
  (tag (;0;) (type 14))
  (func (;0;) (type 26) (param i32 f32) (result f64)
    f32.const -nan:0x7fffef (;=NaN;)
    table.size 0
    f64.const 0x1.fffffffffffffp-896 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037857669957336787;)
    try_table (type 13) (result i32 nullfuncref (ref null 8)) ;; label = @1
      block (type 28) (result i32 nullref) ;; label = @2
        local.get 1
        i32.trunc_sat_f32_u
        f32.const -0x1.665f78p-94 (;=-0.0000000000000000000000000000706766;)
        i64.trunc_sat_f32_s
        table.size 0
        f32.const 0x1.a5ecfap+33 (;=14157477000;)
        i32.const 16843009
        ref.null 33
        struct.new_default 32
        local.get 1
        i64.trunc_sat_f32_u
        try_table ;; label = @3
          data.drop 0
        end
        i64.extend16_s
        f64.reinterpret_i64
        f64.neg
        table.size 0
        throw 0
        local.tee 0
        if (type 14) ;; label = @3
          i32.const 51894436
          try_table (type 24) (result i32) (catch_all 0 (;@3;)) (catch 0 0 (;@3;)) ;; label = @4
            data.drop 0
            data.drop 1
            try_table (catch_all 1 (;@3;)) ;; label = @5
              struct.new 16
              array.new_fixed 20 0
              ref.cast (ref none)
              extern.convert_any
              ref.as_non_null
              try_table (type 21) (catch 0 2 (;@3;)) (catch_all 0 (;@5;)) (catch_all 2 (;@3;)) (catch_all 2 (;@3;)) (catch 0 2 (;@3;)) (catch 0 0 (;@5;)) (catch 0 2 (;@3;)) (catch_all 2 (;@3;)) (catch_all 2 (;@3;)) ;; label = @6
              end
              br 0 (;@5;)
              f32.const 0x1.fffffep-126 (;=0.000000000000000000000000000000000000023509886;)
              i32.trunc_sat_f32_u
              i64.const -6996229508688002573
              data.drop 0
              i64.extend8_s
              i64.extend8_s
              i64.ctz
              block (type 14) ;; label = @6
                local.get 0
                i32.ctz
                i64.extend_i32_u
                f64.convert_i64_u
                i32.const -1299647301
                f64.const -0x1.e40df4e51efe3p+1003 (;=-162083932012272810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                i64.trunc_sat_f64_s
                loop (type 2) ;; label = @7
                  struct.new_default 42
                  i64.const 4270360336575201894
                  i64.extend8_s
                  i32.const -768899312
                  f32.convert_i32_s
                  try_table (type 5) (result f64) (catch 0 1 (;@6;)) (catch 0 2 (;@5;)) (catch 0 0 (;@7;)) ;; label = @8
                    data.drop 0
                    block (type 2) ;; label = @9
                      f32.const -0x1.a1362cp-2 (;=-0.4074332;)
                      i32.const 1223484966
                      local.get 0
                      i32.extend16_s
                      i32.rem_s
                      br 3 (;@6;)
                      if (type 38) (result (ref null 1) i64) ;; label = @10
                        local.get 1
                        br 3 (;@7;)
                        i32.const 315732353
                        array.new_fixed 43 0
                        ref.cast (ref none)
                        loop (type 9) ;; label = @11
                          try_table (type 5) (result f64) (catch 0 2 (;@9;)) (catch 0 8 (;@3;)) (catch_all 4 (;@7;)) (catch_all 5 (;@6;)) (catch 0 4 (;@7;)) (catch 0 6 (;@5;)) (catch 0 8 (;@3;)) (catch_all 2 (;@9;)) ;; label = @12
                            f32.const 0x1.p-149 (;=0.000000000000000000000000000000000000000000001;)
                            f64.const -0x1.c51a7ca02a6bbp-56 (;=-0.000000000000000024562788008873092;)
                            try_table (type 17) (result f32 i64) (catch_all 7 (;@5;)) (catch 0 1 (;@11;)) ;; label = @13
                              block (type 5) (result f64) ;; label = @14
                                br 8 (;@6;)
                                br 11 (;@3;)
                                table.size 0
                                i32.eqz
                                f32.convert_i32_s
                                i64.const -7656736134517538836
                                i64.eqz
                                f32.const -0x1.2dcf92p-67 (;=-0.000000000000000000007988866;)
                                try_table (type 10) (catch_all 7 (;@7;)) (catch_all 3 (;@11;)) (catch_all 3 (;@11;)) (catch_all 3 (;@11;)) (catch_all 3 (;@11;)) (catch_all 3 (;@11;)) ;; label = @15
                                end
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      else
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "")
  (data (;1;) "\af")
)
