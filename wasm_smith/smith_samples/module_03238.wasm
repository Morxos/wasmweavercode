(module
  (rec
    (type (;0;) (func))
    (type (;1;) (struct (field (mut i32)) (field i8) (field (mut i16)) (field (mut i8)) (field i8) (field f32) (field (mut nullref)) (field i16) (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field i16) (field i16) (field i8) (field (mut f64)) (field (mut i16))))
    (type (;2;) (sub (func (param i32) (result f32))))
    (type (;3;) (struct (field (mut i8)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i8)) (field i16) (field i16) (field f64) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i8) (field i16) (field (mut i16)) (field i8)))
    (type (;4;) (sub 2 (func (param i32) (result f32))))
    (type (;5;) (sub (array i32)))
    (type (;6;) (sub (func)))
    (type (;7;) (func))
    (type (;8;) (sub final 4 (func (param i32) (result f32))))
    (type (;9;) (struct (field i8) (field i8) (field i16) (field (mut i32)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut arrayref)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field (mut f32))))
    (type (;10;) (array i32))
    (type (;11;) (sub (func (param f32))))
    (type (;12;) (sub (func (result f64 f64))))
    (type (;13;) (sub (struct (field i16) (field i16) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field (mut f32)) (field f64) (field (mut i8)) (field i8) (field (mut i8)) (field (mut f64)) (field f64))))
    (type (;14;) (sub (struct (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field (mut f64)) (field i8) (field anyref) (field i64) (field i8) (field i8) (field (mut i32)))))
    (type (;15;) (array i32))
    (type (;16;) (struct (field (mut i16)) (field (mut i32)) (field (mut i64)) (field (mut i8)) (field f32) (field (mut i16)) (field (mut nullfuncref)) (field (mut i64)) (field i16) (field i64) (field nullfuncref) (field (mut i32)) (field (mut (ref null 14))) (field (mut f64)) (field i16) (field (mut i64)) (field i16) (field f64) (field (mut i16))))
    (type (;17;) (sub (array (mut i8))))
    (type (;18;) (array i8))
    (type (;19;) (sub final 14 (struct (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field (mut f64)) (field i8) (field (ref null 16)) (field i64) (field i8) (field i8) (field (mut i32)) (field eqref) (field i8) (field (mut f32)))))
    (type (;20;) (struct (field (mut i8))))
    (type (;21;) (array i16))
    (type (;22;) (sub final 2 (func (param i32) (result f32))))
    (type (;23;) (struct (field (mut i16)) (field i16) (field (mut i16)) (field f64) (field i16) (field (mut i16)) (field (mut f64)) (field i8)))
    (type (;24;) (func))
    (type (;25;) (func (result i32)))
    (type (;26;) (func (param i64) (result i32 exnref)))
    (type (;27;) (array i32))
    (type (;28;) (struct (field i64) (field i16) (field i8) (field i8) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i8)) (field i8) (field (mut i64)) (field i8) (field (mut i8)) (field (mut i16))))
    (type (;29;) (sub (func (param i64) (result (ref null 5) f64 exnref))))
    (type (;30;) (sub (struct (field (mut f64)) (field f64) (field (mut i64)) (field i8) (field (mut i8)) (field (mut i16)))))
    (type (;31;) (func (param i32 i32 f64)))
    (type (;32;) (array (mut (ref null 12))))
    (type (;33;) (sub (struct (field (ref null 15)) (field i16) (field (mut i16)) (field i16) (field i64) (field nullexternref))))
    (type (;34;) (sub 4 (func (param i32) (result f32))))
    (type (;35;) (sub (func)))
    (type (;36;) (array (mut i8)))
    (type (;37;) (sub (struct (field (mut f32)) (field (mut i8)) (field i64) (field (mut i31ref)) (field f32) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field f64) (field (mut i32)))))
    (type (;38;) (struct (field (mut i8)) (field (mut f32)) (field i16) (field (mut i64)) (field (mut i16))))
    (type (;39;) (struct (field (mut i8)) (field (mut i64)) (field i8) (field (mut i8)) (field (mut i32)) (field i32) (field (mut nullfuncref)) (field i32) (field (mut i8)) (field f32) (field i64) (field i8) (field (mut i64))))
    (type (;40;) (func))
    (type (;41;) (sub (struct (field i16) (field f64) (field i16) (field i8) (field (mut i16)) (field i16) (field (mut f64)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i16)) (field i8) (field i8) (field (mut i32)) (field i32) (field (mut i64)) (field (mut i16)) (field (mut i16)))))
    (type (;42;) (func))
    (type (;43;) (array (mut i32)))
    (type (;44;) (sub (struct (field (mut i16)) (field i32) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field i64) (field (mut i16)) (field (mut i8)) (field i8))))
    (type (;45;) (sub (struct (field (mut i8)) (field (mut i16)))))
    (type (;46;) (func (result i32)))
    (type (;47;) (func (result f64)))
    (type (;48;) (sub (struct (field i16) (field (mut i8)))))
    (type (;49;) (sub (func (param i64 f32))))
  )
  (memory (;0;) 0)
  (func (;0;) (type 2) (param i32) (result f32)
    (local i32)
    try_table (type 0) ;; label = @1
      f32.const 0x1.5e771ap-64 (;=0.0000000000000000000742139;)
      f32.sqrt
      block (type 46) (result i32) ;; label = @2
        nop
        i32.const 524287
        i32.const -1431655766
        ref.i31
        br 1 (;@1;)
        loop (type 46) (result i32) ;; label = @3
          f32.const 0x1.4c9bf2p-70 (;=0.0000000000000000000011005114;)
          f32.ceil
          struct.new_default 44
          i32.const -838416910
          loop (type 8) (param i32) (result f32) ;; label = @4
            br_table 1 (;@3;) 3 (;@1;) 3 (;@1;)
            struct.new_default 19
            i32.const 2048
            i64.load16_u
            i32.const -8
            i32.load
            return_call 0
            f32.abs
            struct.new_default 9
            loop (type 6) ;; label = @5
              f32.const -0x1p+113 (;=-10384594000000000000000000000000000;)
              f32.ceil
              f32.abs
              f32.floor
              i32.const 268435456
              i32.load8_u
              try_table (catch_all 2 (;@3;)) (catch_all 4 (;@1;)) (catch_all 4 (;@1;)) ;; label = @6
                i32.const -8193
                i32.popcnt
                local.get 0
                i32.load8_u
                if (type 22) (param i32) (result f32) ;; label = @7
                  loop (type 7) ;; label = @8
                    f32.const 0x1.7d26f6p-30 (;=0.0000000013866236;)
                    memory.size
                    i64.load32_s align=2
                    local.get 1
                    i32.load offset=1130998770
                    br_table 0 (;@8;) 2 (;@6;) 3 (;@5;) 5 (;@3;) 7 (;@1;) 0 (;@8;)
                    i32.wrap_i64
                    f32.load
                    f32.min
                    i64.trunc_f32_s
                    i64.popcnt
                    try_table (type 25) (result i32) (catch_all 3 (;@5;)) (catch_all 2 (;@6;)) (catch_all 5 (;@3;)) (catch_all 7 (;@1;)) (catch_all 2 (;@6;)) (catch_all 0 (;@8;)) (catch_all 2 (;@6;)) ;; label = @9
                      try_table (type 7) (catch_all 8 (;@1;)) (catch_all 8 (;@1;)) (catch_all 8 (;@1;)) (catch_all 8 (;@1;)) ;; label = @10
                        local.get 0
                        i32.load16_s align=1
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                else
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 31) (param i32 i32 f64))
)
