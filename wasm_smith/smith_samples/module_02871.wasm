(module
  (rec
    (type (;0;) (struct (field (mut i16)) (field (mut i64)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut funcref)) (field i16)))
    (type (;1;) (sub (func)))
    (type (;2;) (sub (array i8)))
    (type (;3;) (sub (struct (field i16) (field (mut i16)) (field i8) (field i16) (field i8) (field i32) (field (mut i32)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field (mut f32)) (field i16) (field i16))))
    (type (;4;) (func (param f64 nullref)))
    (type (;5;) (struct (field i8) (field (mut i8)) (field (mut f32)) (field i16) (field (mut i31ref)) (field (mut i8))))
    (type (;6;) (sub (array (mut i8))))
    (type (;7;) (sub (array i16)))
    (type (;8;) (array (mut i8)))
    (type (;9;) (sub (func (param i64 f32 (ref null 0) f32))))
    (type (;10;) (func (param f32 i32 i64 f32 funcref i64 f32 i64 i64 arrayref) (result i32 f32 f64)))
    (type (;11;) (array (mut i16)))
    (type (;12;) (sub (array i16)))
    (type (;13;) (array i8))
    (type (;14;) (sub (func (result i64))))
    (type (;15;) (func))
    (type (;16;) (array i16))
    (type (;17;) (array i16))
    (type (;18;) (array i16))
    (type (;19;) (func (result f64 i64 i32)))
    (type (;20;) (sub (array (mut i32))))
    (type (;21;) (array i8))
    (type (;22;) (struct (field i8) (field i8) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut i16))))
    (type (;23;) (struct (field i8) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field nullref) (field (mut i16)) (field (mut f64))))
    (type (;24;) (sub (struct (field (mut i16)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field (mut i16)))))
    (type (;25;) (struct (field i16) (field (mut i32)) (field i16) (field (mut f32)) (field (mut funcref)) (field (mut i8)) (field (mut f64)) (field f32) (field i8) (field i8) (field i32) (field f64) (field (mut nullexternref)) (field (mut i16)) (field i16) (field i64) (field f32) (field (mut i8))))
    (type (;26;) (func (param f32) (result i64)))
    (type (;27;) (sub (array (mut i8))))
    (type (;28;) (array i16))
    (type (;29;) (array (mut i8)))
    (type (;30;) (sub (func (param structref) (result f64))))
    (type (;31;) (sub (func)))
    (type (;32;) (sub (func (param f32 i32))))
    (type (;33;) (array (mut i8)))
  )
  (import "U]n" "" (memory (;0;) i64 0 222427869169840 shared))
  (import "t\u{5c}" "" (table (;0;) i64 2935 654891 anyref))
  (tag (;0;) (type 31))
  (tag (;1;) (type 15))
  (tag (;2;) (type 15))
  (global (;0;) (mut i32) i32.const 0)
  (global (;1;) (mut i64) i64.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (export "" (func 1))
  (export ">s" (table 0))
  (func (;0;) (type 26) (param f32) (result i64)
    i32.const -16385
    i64.const -4132164008342261330
    i64.popcnt
    f64.reinterpret_i64
    i64.trunc_sat_f64_u
    i32.wrap_i64
    f32.reinterpret_i32
    f32.abs
    loop (type 26) (param f32) (result i64) ;; label = @1
      f32.sqrt
      f32.trunc
      call 0
      f64.load align=4
      nop
      nop
      nop
      memory.size
      f32.const 0x1p-126 (;=0.000000000000000000000000000000000000011754944;)
      local.tee 0
      i64.trunc_f32_s
      f64.convert_i64_s
      f64.ceil
      f64.neg
      ref.null 1
      table.size 0
      i64.load16_s
      i64.extend16_s
      i64.load32_s align=1
      ref.null 29
      array.len
      f32.const 0x1.c0255ap+17 (;=229450.7;)
      i32.trunc_sat_f32_s
      ref.null 8
      f32.const 0x1.a956p+14 (;=27221.5;)
      i32.reinterpret_f32
      memory.size
      memory.grow
      i64.clz
      i64.load16_u
      i32.load8_s
      i32.and
      i32.eqz
      f64.const 0x1.aa158a729be11p-547 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036128321023377374;)
      block ;; label = @2
        try_table (type 1) (catch 0 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) ;; label = @3
          f64.const 0x1.70d5bc6b62023p+993 (;=120608452372514370000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
          f32.const -0x1.85d4ecp+100 (;=-1930353200000000000000000000000;)
          data.drop 1
          i32.trunc_f32_u
          f32.reinterpret_i32
          local.tee 0
          f32.neg
          memory.size
          i32.load16_s align=1
          i32.eqz
          f32.convert_i32_u
          f32.ge
          f32.const -0x1p-23 (;=-0.00000011920929;)
          i64.trunc_sat_f32_s
          i64.const 8388607
          struct.new_default 25
          try_table (type 15) (catch_all 0 (;@3;)) (catch_all 1 (;@2;)) (catch 1 0 (;@3;)) (catch 2 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch 1 1 (;@2;)) (catch_all 0 (;@3;)) ;; label = @4
            i64.const -576460752303423488
            br 4
            f32.const 0x1.2c870ap+58 (;=338363880000000000;)
            try_table (type 1) (catch 1 2 (;@2;)) (catch 0 2 (;@2;)) (catch 2 0 (;@4;)) (catch_all 0 (;@4;)) (catch_all 1 (;@3;)) (catch 1 0 (;@4;)) (catch_all 2 (;@2;)) (catch 2 1 (;@3;)) (catch 0 2 (;@2;)) ;; label = @5
              local.get 0
              i32.const -209474822
              table.size 0
              i64.load16_u align=1
              i64.load8_u
              try_table (type 1) (catch 0 3 (;@2;)) ;; label = @6
                i64.const -538963151440070848
                i32.load8_s
                i64.extend_i32_s
                i64.popcnt
                i64.load8_u
                i64.popcnt
                loop (type 1) ;; label = @7
                  try_table (type 19) (result f64 i64 i32) (catch_all 2 (;@5;)) (catch_all 3 (;@4;)) (catch 0 4 (;@3;)) (catch_all 4 (;@3;)) (catch_all 2 (;@5;)) (catch 2 4 (;@3;)) ;; label = @8
                    loop (result f64) ;; label = @9
                      i32.const -78010403
                      br_table 0 (;@9;) 2 (;@7;) 3 (;@6;) 4 (;@5;) 5 (;@4;) 6 (;@3;) 7 (;@2;) 5 (;@4;)
                      i64.const 2976214995846347620
                      struct.new_default 25
                      try_table (catch_all 4 (;@5;)) (catch 2 0 (;@9;)) (catch_all 2 (;@7;)) ;; label = @10
                        i64.const -2405570026432193973
                        i64.load8_u
                        f64.convert_i64_u
                        br 4 (;@6;)
                        i64.trunc_sat_f64_u
                        i64.extend8_s
                        i64.load8_u
                        i32.load align=1
                        i64.extend_i32_u
                        data.drop 0
                        i64.popcnt
                        f64.load align=2
                        f64.const -nan:0xffffdffffffff (;=NaN;)
                        i32.const 16777215
                        global.get 0
                        i32.xor
                        global.set 0
                        i64.reinterpret_f64
                        global.get 1
                        i64.xor
                        global.set 1
                        i64.reinterpret_f64
                        global.get 1
                        i64.xor
                        global.set 1
                      end
                      drop
                      global.get 2
                      i64.xor
                      global.set 2
                      f64.const -nan:0xfe00000000000 (;=NaN;)
                    end
                    i64.const 7484918762362970292
                    i32.const 2097152
                  end
                  global.get 0
                  i32.xor
                  global.set 0
                  global.get 2
                  i64.xor
                  global.set 2
                  i64.reinterpret_f64
                  global.get 1
                  i64.xor
                  global.set 1
                end
                global.get 2
                i64.xor
                global.set 2
              end
              global.get 2
              i64.xor
              global.set 2
              global.get 0
              i32.xor
              global.set 0
              drop
            end
            drop
          end
          unreachable
        end
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 9) (param i64 f32 (ref null 0) f32))
  (data (;0;) "")
  (data (;1;) "w\80")
)
