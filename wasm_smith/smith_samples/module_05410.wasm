(module
  (rec
    (type (;0;) (func))
    (type (;1;) (struct (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field i16) (field (mut f32)) (field (mut f64)) (field i16) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field f64) (field i16) (field (mut exnref)) (field i8)))
    (type (;2;) (array (mut i16)))
    (type (;3;) (sub (array (mut i8))))
    (type (;4;) (array i8))
    (type (;5;) (sub (array (mut i16))))
    (type (;6;) (array (mut i16)))
    (type (;7;) (func (param f64) (result f32 exnref i32)))
    (type (;8;) (array i8))
    (type (;9;) (sub (func)))
    (type (;10;) (sub (func (param f32))))
    (type (;11;) (sub (array i32)))
    (type (;12;) (sub (struct (field i16))))
    (type (;13;) (sub (struct)))
    (type (;14;) (sub (func)))
    (type (;15;) (struct (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i8) (field i16)))
    (type (;16;) (sub (array (mut i16))))
    (type (;17;) (array i8))
    (type (;18;) (array f64))
    (type (;19;) (struct))
    (type (;20;) (array i8))
    (type (;21;) (array i8))
    (type (;22;) (struct (field i16)))
    (type (;23;) (array i16))
    (type (;24;) (sub 14 (func)))
    (type (;25;) (sub (struct (field i64) (field (mut i16)) (field (mut i16)) (field i16) (field i64) (field f64) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field (mut exnref)) (field (mut f64)) (field i8) (field (mut i16)) (field (mut i64)) (field f64))))
    (type (;26;) (sub (struct (field (mut i32)) (field (mut arrayref)) (field (mut i32)) (field (mut i8)) (field (mut structref)) (field (mut f64)) (field i8) (field (mut f64)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut funcref)) (field i64) (field (mut i32)) (field i8) (field i16) (field f64))))
    (type (;27;) (sub (array i16)))
    (type (;28;) (sub (array i16)))
    (type (;29;) (struct))
    (type (;30;) (sub (array (mut i16))))
    (type (;31;) (sub 30 (array (mut i16))))
    (type (;32;) (array f32))
    (type (;33;) (sub 5 (array (mut i16))))
    (type (;34;) (struct (field (mut i8)) (field (mut (ref null 5))) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8))))
    (type (;35;) (array (mut i16)))
    (type (;36;) (sub (func)))
    (type (;37;) (sub (array (mut (ref null 30)))))
    (type (;38;) (sub (struct (field i8) (field i8) (field (mut i8)) (field i64) (field i8) (field i8) (field (mut f32)) (field (mut i16)) (field (mut (ref null 33))))))
    (type (;39;) (sub (array (mut structref))))
    (type (;40;) (sub (array i16)))
    (type (;41;) (array (mut i16)))
    (type (;42;) (func (result i32)))
    (type (;43;) (sub (struct (field i16) (field (mut i16)) (field i32) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i64)))))
    (type (;44;) (struct (field (mut i64)) (field (mut i64)) (field f64) (field i16) (field (mut f64)) (field (mut nullexternref)) (field (mut i8)) (field (mut i16)) (field i16) (field i8) (field (mut (ref null 33))) (field (mut i16)) (field i16)))
    (type (;45;) (struct (field i16) (field (mut i16)) (field (mut i31ref)) (field i8) (field (mut i64)) (field (mut i8)) (field (mut i32)) (field i8) (field (mut f64)) (field (mut i16)) (field i64) (field f64) (field (mut i32)) (field (mut i8))))
    (type (;46;) (sub (func)))
    (type (;47;) (array (mut nullref)))
    (type (;48;) (sub (func (param f32))))
    (type (;49;) (sub (func (param i64))))
    (type (;50;) (func (param i32) (result f64 i64)))
    (type (;51;) (func (param i64 (ref null 10)) (result i32)))
    (type (;52;) (sub (array i32)))
    (type (;53;) (array (ref null 21)))
    (type (;54;) (array (mut i16)))
    (type (;55;) (sub (array (mut i16))))
    (type (;56;) (sub (struct (field i8) (field i8) (field (mut i8)) (field i8) (field i16) (field i8))))
    (type (;57;) (sub (array (mut i16))))
    (type (;58;) (sub (func (result i64 f32 f64 f64 i32 i64 f64))))
    (type (;59;) (struct (field i8) (field (mut funcref)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i32) (field i16) (field i8) (field f32) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i16))))
    (type (;60;) (struct (field i16) (field f64) (field (mut f32)) (field i8) (field i32) (field i16) (field i32) (field i16) (field (mut f32)) (field (mut nullfuncref)) (field f64) (field i16) (field (mut i32)) (field i64) (field i16) (field f32) (field i16)))
    (type (;61;) (sub (array (ref null 24))))
  )
  (import "" "" (table (;0;) i64 48 941568 nullfuncref))
  (tag (;0;) (type 46))
  (tag (;1;) (type 24))
  (func (;0;) (type 10) (param f32)
    br 0
    try_table (catch_all 0) ;; label = @1
      struct.new 19
      struct.new_default 12
      f32.const -0x1.2b5dbep+68 (;=-345145700000000000000;)
      f32.floor
      f32.ceil
      i32.trunc_sat_f32_s
      br 1
      array.new_default 21
      struct.new_default 1
      ref.cast (ref none)
      i64.const -34359738368
      i64.popcnt
      f64.const 0x1.p-1030 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008691694759794;)
      i64.trunc_f64_u
      f32.const 0x1.p-145 (;=0.000000000000000000000000000000000000000000022;)
      f32.abs
      i32.const 1919608902
      f32.const -0x1.b68cb4p+19 (;=-898149.6;)
      f32.const 0x1p-95 (;=0.00000000000000000000000000002524355;)
      f32.ne
      i32.clz
      br_table 0 (;@1;) 1 0 (;@1;)
      ref.null 4
      local.get 0
      i32.trunc_f32_s
      array.new_fixed 54 0
      local.get 0
      f32.ceil
      i64.trunc_sat_f32_u
      f32.convert_i64_u
      f32.nearest
      f32.neg
      i32.const 941569
      i32.extend8_s
      i32.ctz
      array.new_fixed 2 0
      i32.const 2048
      if (type 58) (result i64 f32 f64 f64 i32 i64 f64) ;; label = @2
        try_table (type 46) (catch 1 2) (catch 0 1 (;@1;)) (catch 0 1 (;@1;)) (catch 0 1 (;@1;)) (catch 1 2) (catch 1 2) (catch 1 2) (catch 1 2) (catch_all 2) ;; label = @3
          i32.const -652289380
          block (type 46) ;; label = @4
            table.size 0
            try_table (result i32) (catch 1 1 (;@3;)) (catch_all 3 (;@1;)) (catch 1 3 (;@1;)) (catch 0 3 (;@1;)) (catch 0 0 (;@4;)) (catch 1 0 (;@4;)) ;; label = @5
              i64.const 6483990009883877454
              loop ;; label = @6
                block (result f64) ;; label = @7
                  local.get 0
                  f32.nearest
                  try_table (type 48) (param f32) ;; label = @8
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      else
        unreachable
      end
      unreachable
    end
  )
)
