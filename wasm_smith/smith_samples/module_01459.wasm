(module
  (rec
    (type (;0;) (array (mut i8)))
    (type (;1;) (sub (array i8)))
    (type (;2;) (func (param f32 f64)))
    (type (;3;) (func (param i32) (result i32)))
  )
  (rec
    (type (;4;) (struct (field (mut nullref)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i16)) (field f64) (field f64) (field i8) (field i64) (field (mut i16)) (field i16) (field i16) (field (ref null 0)) (field (mut i8)) (field i8) (field i16)))
    (type (;5;) (sub (func (result i32))))
    (type (;6;) (struct (field (mut i32)) (field i8) (field i64) (field (mut i8)) (field arrayref)))
    (type (;7;) (sub final 5 (func (result i32))))
    (type (;8;) (sub (struct (field (mut i8)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field i16) (field nullexternref) (field i16) (field i64) (field i16) (field (mut f32)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field f32) (field i32) (field (mut f32)) (field (mut i16)))))
    (type (;9;) (struct (field (mut externref)) (field (mut i64)) (field i8) (field i8) (field (mut f32))))
    (type (;10;) (struct (field i16) (field (mut (ref null 5))) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field i8) (field f64) (field (mut i64)) (field i8) (field (mut i64)) (field (mut f64)) (field i8) (field i8) (field i8) (field f32) (field (mut i8)) (field (mut i16))))
    (type (;11;) (struct (field (mut i16)) (field anyref) (field (mut eqref)) (field (mut i16)) (field i16) (field (mut f32)) (field (mut i32)) (field (mut i8)) (field (mut i32))))
    (type (;12;) (sub (struct (field i16) (field f32) (field (mut i16)))))
    (type (;13;) (sub (func (result f64 i64))))
    (type (;14;) (struct (field i32) (field anyref) (field (mut i8)) (field (mut i8)) (field (mut exnref)) (field (mut i16))))
    (type (;15;) (struct (field i8) (field (mut i16))))
    (type (;16;) (array (mut i16)))
    (type (;17;) (sub (func (param i32 i64) (result f64 f64))))
    (type (;18;) (array i8))
    (type (;19;) (sub (struct (field i32) (field (mut i8)))))
    (type (;20;) (sub (struct (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field (mut nullfuncref)))))
    (type (;21;) (array (mut i32)))
    (type (;22;) (sub (array (mut i64))))
    (type (;23;) (sub (struct (field (mut i64)) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut f64)) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field i8) (field f32) (field i16) (field (mut i8)) (field i8) (field (mut i16)))))
    (type (;24;) (sub (struct (field i16) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field f64) (field (mut i16)) (field i16) (field f64) (field (mut (ref null 17))) (field (mut i64)) (field (mut i32)) (field (mut structref)) (field i32) (field (mut i32)) (field i16) (field (mut i8)) (field i32))))
    (type (;25;) (sub (func (param (ref null 20)))))
    (type (;26;) (sub (array (mut i8))))
    (type (;27;) (sub (array i8)))
    (type (;28;) (array (mut i64)))
    (type (;29;) (sub (func)))
    (type (;30;) (sub (struct (field i32) (field (mut i16)) (field (mut i16)) (field i8) (field (mut i16)))))
    (type (;31;) (array (mut i8)))
    (type (;32;) (struct (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut i64)) (field i32) (field (mut i8)) (field (mut i32)) (field i16) (field anyref) (field i16) (field (mut i8)) (field i8) (field (mut i16))))
    (type (;33;) (struct (field (mut i16)) (field i16) (field (mut i16)) (field i32) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i64) (field (mut i64)) (field (mut i8)) (field i8) (field f64)))
    (type (;34;) (func (param i32) (result f64)))
    (type (;35;) (sub (func)))
    (type (;36;) (sub (array (mut i16))))
    (type (;37;) (sub (array i16)))
    (type (;38;) (sub (array (mut i8))))
    (type (;39;) (struct (field i16) (field i8) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i32)) (field (mut i8)) (field i16) (field i16) (field i16) (field i8) (field i8) (field i8) (field (mut i16)) (field (mut i64)) (field (mut i32)) (field i32)))
    (type (;40;) (sub (array i16)))
    (type (;41;) (sub (struct (field (mut i16)) (field i16) (field (mut i32)) (field (mut i64)) (field i16) (field i16) (field (mut i8)) (field exnref) (field i16) (field i32) (field (mut i8)) (field f32) (field i8) (field i8) (field (mut i32)))))
    (type (;42;) (sub (array (mut i32))))
    (type (;43;) (struct (field (mut f32)) (field i64) (field i8) (field (mut i8)) (field f64) (field i8) (field (mut structref)) (field f32) (field (mut i16)) (field i8) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i8))))
    (type (;44;) (sub (struct (field (mut i16)) (field i8) (field i8) (field i8) (field (mut i16)) (field (mut exnref)) (field (mut i16)) (field f64))))
    (type (;45;) (sub (struct (field i16) (field i64) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field f32) (field i16) (field (mut i8)) (field i32) (field (mut i16)) (field (mut i16)) (field i32) (field i8) (field (mut f64)) (field i16) (field f32))))
    (type (;46;) (func (param eqref f64 i64)))
    (type (;47;) (sub (array i8)))
    (type (;48;) (sub (struct (field f64) (field (mut i8)) (field (ref null 27)) (field i8) (field i8) (field eqref) (field i16))))
    (type (;49;) (struct (field i8) (field i16)))
    (type (;50;) (func (result f32)))
    (type (;51;) (sub (struct (field (mut (ref null 18))) (field (mut i8)) (field f64))))
  )
  (import "L" "" (tag (;0;) (type 2) (param f32 f64)))
  (import "" "" (func (;0;) (type 29)))
  (import "" "" (tag (;1;) (type 29)))
  (import "D\u{618}\u{97} " "" (table (;0;) i64 32 (ref null 13)))
  (tag (;2;) (type 2) (param f32 f64))
  (start 1)
  (elem (;0;) structref)
  (elem (;1;) (table 0) (i64.const 21) nullfuncref (ref.null nofunc) (ref.null nofunc) (ref.null nofunc))
  (func (;1;) (type 35)
    (local f32)
    f64.const 0x1.206302edd71ffp-948 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000473477633425236;)
    i32.trunc_f64_s
    if (type 50) (result f32) ;; label = @1
      return_call 0
      f64.const -0x1.846a05ba0410dp+246 (;=-171567100159066260000000000000000000000000000000000000000000000000000000000;)
      i32.trunc_sat_f64_s
      f64.const 0x1.090ba5267b9f4p+568 (;=1000271715388146300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
      unreachable
    else
      unreachable
    end
    unreachable
  )
)
