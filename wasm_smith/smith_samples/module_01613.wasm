(module
  (rec
    (type (;0;) (array i8))
    (type (;1;) (struct (field (mut i64)) (field i32) (field i32) (field (mut i8)) (field (mut f64)) (field (mut structref)) (field f32) (field i8) (field i16) (field (mut i8)) (field i16) (field i8) (field i16) (field i16) (field i16) (field i8)))
    (type (;2;) (struct (field (mut i16)) (field i8) (field i8)))
    (type (;3;) (sub (func)))
    (type (;4;) (func (param i32 anyref)))
    (type (;5;) (array i8))
    (type (;6;) (array i8))
    (type (;7;) (struct (field (mut i8)) (field i16) (field i8)))
    (type (;8;) (sub (struct (field (mut i16)) (field (mut f64)) (field (mut i8)) (field arrayref) (field (mut i8)) (field (mut i32)) (field (mut (ref null 0))) (field (mut i16)) (field (mut i8)))))
    (type (;9;) (sub (struct (field i8) (field i16) (field i8) (field (mut i32)) (field i64) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16))))
    (type (;10;) (func))
    (type (;11;) (sub (func (param nullfuncref i32 i64))))
    (type (;12;) (array i8))
    (type (;13;) (sub (array (mut i16))))
    (type (;14;) (sub (func (result f64 f64 f32 i64 i32 i32 f64 f32))))
    (type (;15;) (func (result i64)))
    (type (;16;) (func (param f64) (result f64)))
    (type (;17;) (struct (field i8) (field (mut i16)) (field i16) (field (mut i16)) (field i32) (field (mut i16)) (field (mut i8)) (field i8) (field i16) (field (mut i64)) (field (mut i16))))
    (type (;18;) (sub (array i16)))
  )
  (rec
    (type (;19;) (func (result (ref null 6))))
    (type (;20;) (sub (struct (field f32) (field i8) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field i16) (field f32) (field i8) (field i8) (field i16) (field i64) (field (mut i8)) (field i8) (field (mut i32)) (field f32))))
    (type (;21;) (sub (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut anyref)) (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field (mut i32)) (field f32) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field i16) (field i8) (field (mut i16)) (field i16))))
    (type (;22;) (array i8))
    (type (;23;) (sub (func (param i32 nullexternref nullexternref arrayref))))
    (type (;24;) (sub (func)))
    (type (;25;) (func (result i32)))
    (type (;26;) (sub (func (result f32))))
    (type (;27;) (sub (func (param i64))))
    (type (;28;) (func (param f32)))
    (type (;29;) (func (param f64)))
    (type (;30;) (array i8))
    (type (;31;) (sub (func)))
    (type (;32;) (struct (field (mut (ref null 22))) (field f32) (field (mut i8))))
    (type (;33;) (array i16))
    (type (;34;) (sub (struct (field eqref) (field i16) (field (mut i64)) (field i16) (field (mut i16)) (field (mut (ref null 5))) (field (mut i16)) (field i8) (field i8) (field (mut nullexternref)) (field (mut i8)) (field (mut (ref null 28))))))
    (type (;35;) (struct (field i8) (field (mut i8)) (field (mut f64)) (field i32) (field i16) (field i16) (field (mut i8)) (field f32) (field i16)))
    (type (;36;) (sub (struct (field i8) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i8) (field i32) (field nullref) (field (mut exnref)))))
    (type (;37;) (sub (array i8)))
    (type (;38;) (func (param i32) (result f32)))
    (type (;39;) (sub (func)))
    (type (;40;) (sub (array (mut i8))))
    (type (;41;) (sub (struct (field (mut i8)) (field (mut f32)) (field (mut f32)) (field (mut i16)) (field i16) (field i64) (field f64))))
    (type (;42;) (array (mut f32)))
    (type (;43;) (array i64))
    (type (;44;) (sub (array (mut i16))))
    (type (;45;) (sub (func (result f64))))
    (type (;46;) (array i16))
    (type (;47;) (func (param f32) (result arrayref i32)))
    (type (;48;) (sub (array i8)))
    (type (;49;) (sub (struct (field i32) (field (mut funcref)) (field i16) (field (ref null 3)) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field i32) (field i32) (field (mut i8)) (field i8) (field (mut i16)) (field i16) (field i16))))
    (type (;50;) (sub (struct (field (mut i16)) (field i8) (field i32))))
    (type (;51;) (struct (field i8) (field (mut i16)) (field i16) (field i32) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16)))
    (type (;52;) (func (result i32)))
    (type (;53;) (array f32))
    (type (;54;) (sub (struct (field (mut i16)) (field nullfuncref) (field (mut f64)) (field i8) (field (mut i32)) (field i32) (field (mut i8)) (field f64) (field i16) (field i8) (field i16) (field (mut i32)) (field f64) (field (mut i64)) (field f64) (field i8))))
    (type (;55;) (sub (array i8)))
    (type (;56;) (array (mut i8)))
  )
  (rec
    (type (;57;) (sub (array i16)))
    (type (;58;) (sub (array i8)))
    (type (;59;) (struct (field f64) (field i64) (field (mut i8)) (field (mut i8)) (field (mut (ref null 39))) (field i8) (field i16) (field i16) (field i8) (field (mut i8))))
    (type (;60;) (array (mut i16)))
    (type (;61;) (struct))
    (type (;62;) (sub (func)))
    (type (;63;) (sub (array i16)))
    (type (;64;) (sub (struct (field (mut i16)) (field i8) (field i32) (field i16) (field (mut i8)))))
    (type (;65;) (array (mut i8)))
    (type (;66;) (sub (struct (field (mut f32)) (field i16) (field (mut i16)) (field i8) (field i8) (field i8) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field i32) (field (mut i16)) (field (mut i16)))))
    (type (;67;) (struct (field i64) (field i32) (field f32) (field (mut i32))))
    (type (;68;) (sub (struct)))
    (type (;69;) (array f32))
    (type (;70;) (sub (array i16)))
    (type (;71;) (sub (array (mut i8))))
    (type (;72;) (sub (array (mut i8))))
    (type (;73;) (func (param structref) (result i32)))
    (type (;74;) (sub (array (mut i8))))
    (type (;75;) (sub (array i16)))
    (type (;76;) (struct (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut f64)) (field i16) (field (mut i64)) (field (mut i31ref)) (field (mut i64)) (field f64)))
    (type (;77;) (func (param f64 f32 (ref null 68)) (result f64 i32 f32 f64 f64 f64)))
    (type (;78;) (sub 3 (func)))
    (type (;79;) (sub 3 (func)))
    (type (;80;) (sub 3 (func)))
    (type (;81;) (sub 3 (func)))
    (type (;82;) (sub 3 (func)))
  )
  (func (;0;) (type 3))
)
