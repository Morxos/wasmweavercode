(module
  (rec
    (type (;0;) (struct (field i8) (field i32) (field i16) (field (mut i8)) (field f64) (field (mut i16)) (field i16) (field (mut i8)) (field i16) (field exnref) (field i16)))
    (type (;1;) (struct (field (mut i16)) (field f64) (field exnref) (field i16) (field i31ref) (field i8) (field i16)))
    (type (;2;) (array i16))
    (type (;3;) (sub (struct (field i8) (field i8) (field (mut structref)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut f32)) (field i16) (field i64) (field (mut i16)) (field i16) (field f32))))
    (type (;4;) (func))
    (type (;5;) (sub (struct (field (mut f64)) (field i16) (field i16) (field f32) (field (mut f32)) (field (mut i16)) (field (mut i64)) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field i16) (field (mut i16)))))
    (type (;6;) (array f64))
    (type (;7;) (sub (array i8)))
    (type (;8;) (sub (struct (field i16) (field i16) (field nullref) (field (mut funcref)) (field (ref null 0)) (field (mut i64)) (field i16) (field i16) (field (mut i8)) (field (mut i16)) (field i32) (field (mut i8)) (field i8))))
    (type (;9;) (func (result f64)))
    (type (;10;) (struct (field i8) (field (mut f32)) (field (mut i64)) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field i8) (field (mut i16)) (field i32) (field (mut f32)) (field (mut i64)) (field (mut i8)) (field (mut f32)) (field (mut f64)) (field i8)))
    (type (;11;) (sub (func (result f32 (ref null 5) i32))))
    (type (;12;) (sub (func)))
    (type (;13;) (struct (field i16) (field (mut i8)) (field i8) (field (ref null 6)) (field (mut i8)) (field i8) (field (mut i64)) (field i8) (field (mut i64)) (field (mut (ref null 4))) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field f32) (field (mut f32)) (field (mut i8)) (field (mut i16))))
    (type (;14;) (sub 7 (array i8)))
    (type (;15;) (sub final 14 (array i8)))
    (type (;16;) (sub (func (param f64 nullexternref))))
    (type (;17;) (sub (struct (field i16) (field (mut i8)) (field i32) (field (mut i64)) (field i32) (field i16) (field i16) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut funcref)))))
    (type (;18;) (sub (struct (field (mut i32)) (field (ref null 2)) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i8) (field i8) (field i8) (field i32) (field (mut i8)))))
    (type (;19;) (array (mut i16)))
    (type (;20;) (sub (array (mut i8))))
    (type (;21;) (struct (field i64) (field i8) (field (mut i8)) (field (mut i8)) (field i8)))
    (type (;22;) (array (mut i8)))
    (type (;23;) (sub final 18 (struct (field (mut i32)) (field nullref) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i8) (field i8) (field i8) (field i32) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field (mut i32)) (field f64) (field i16))))
    (type (;24;) (struct (field (mut i8)) (field (mut f64)) (field i16) (field i8) (field (mut i8))))
    (type (;25;) (sub (struct (field (mut i8)) (field f32) (field i8) (field i16) (field i8) (field (mut i16)) (field i8) (field i8) (field i16) (field i8) (field i8) (field i8) (field (mut i16)))))
    (type (;26;) (func (result f64)))
    (type (;27;) (func (result i64 f32)))
    (type (;28;) (sub (struct (field (mut i8)) (field i8))))
    (type (;29;) (sub final 12 (func)))
  )
  (memory (;0;) 1352 52060)
  (global (;0;) (mut f32) f32.const -0x1.acc95ep+92 (;=-8293939000000000000000000000;))
  (export "\u{14a}&*" (memory 0))
  (start 0)
  (elem (;0;) declare (ref null 9))
  (func (;0;) (type 29)
    br 0
    return_call 0
    ref.null 9
    ref.test (ref null 9)
    array.new_default 14
    return_call 0
    i32.const -2097152
    i32.const 3
    i64.load8_u offset=53861797
    i64.clz
    i64.extend32_s
    i64.store32 offset=9660006 align=2
    array.len
    i32.ctz
    i64.load16_u offset=47613539 align=1
    i64.ctz
    i64.clz
    i32.wrap_i64
    i64.extend_i32_u
    call 0
    f32.convert_i64_u
    f32.sqrt
    i32.const -1380503565
    i64.load offset=40715515 align=1
    call 0
    ref.null 23
    loop (result i32) ;; label = @1
      struct.new_default 3
      f32.const -0x1.249d48p-100 (;=-0.0000000000000000000000000000009016877;)
      block (type 26) (result f64) ;; label = @2
        call 0
        elem.drop 0
        try_table (type 4) (catch_all 2) (catch_all 1 (;@1;)) (catch_all 2) (catch_all 2) (catch_all 1 (;@1;)) (catch_all 2) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 2) ;; label = @3
          block (type 27) (result i64 f32) ;; label = @4
            i32.const 545176931
            global.get 0
            i64.const -4778090183053028890
            block (type 27) (result i64 f32) ;; label = @5
              memory.size
              return_call 0
              loop (type 12) ;; label = @6
                nop
                return_call 0
                return
                f64.const 0x1.p-1035 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002716154612436;)
                ref.null 24
                return_call 0
                f32.const -nan:0x6fffff (;=NaN;)
                return_call 0
                nop
                i32.const 128
                br_table 0 (;@6;) 3 (;@3;) 5 (;@1;) 6 0 (;@6;)
                f32.abs
                f32.abs
                i32.const 67108864
                i32.load8_s offset=30011511
                i32.load16_u offset=16229628 align=1
                i64.load8_s offset=26880283
                global.get 0
                i32.reinterpret_f32
                ref.i31
                i32.const -808002277
                try_table (type 26) (result f64) (catch_all 6) (catch_all 6) (catch_all 0 (;@6;)) (catch_all 0 (;@6;)) ;; label = @7
                  try_table (type 12) (catch_all 4 (;@3;)) (catch_all 1 (;@6;)) ;; label = @8
                    f64.const 0x1.ffffffffffffcp-1024 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536;)
                    i64.trunc_sat_f64_u
                    memory.size
                    i32.load8_u offset=68215112
                    i32.load8_s offset=6245406
                    global.get 0
                    call 0
                    i32.trunc_sat_f32_s
                    f32.convert_i32_u
                    f32.trunc
                    br 5 (;@3;)
                    f32.const -0x1.7f4374p-115 (;=-0.000000000000000000000000000000000036041925;)
                    f32.floor
                    i32.trunc_sat_f32_u
                    struct.new_default 1
                    br 5 (;@3;)
                    return_call 0
                    br 8
                    return_call 0
                    block (type 11) (result f32 (ref null 5) i32) ;; label = @9
                      ref.null array
                      try_table (type 29) (catch_all 8 (;@1;)) ;; label = @10
                        try_table (type 27) (result i64 f32) (catch_all 4 (;@6;)) (catch_all 2 (;@8;)) (catch_all 2 (;@8;)) (catch_all 9 (;@1;)) (catch_all 7 (;@3;)) (catch_all 10) ;; label = @11
                          loop (type 12) ;; label = @12
                            block ;; label = @13
                              i32.const 7
                              i64.load8_u offset=40869030
                              try_table (type 12) (catch_all 1 (;@12;)) (catch_all 3 (;@10;)) (catch_all 3 (;@10;)) ;; label = @14
                                i64.const 0
                                unreachable
                              end
                              unreachable
                            end
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
