(module
  (rec
    (type (;0;) (func (param i64 f64)))
    (type (;1;) (array i8))
    (type (;2;) (func (param arrayref) (result f32)))
    (type (;3;) (sub (func (result f64 i64 anyref))))
    (type (;4;) (struct (field (mut i8)) (field (mut i16)) (field (mut f64)) (field (mut i32)) (field (mut i16)) (field (mut i64)) (field (mut f32))))
    (type (;5;) (sub (func (param i32 i64 i32 i64 f32 f64))))
    (type (;6;) (struct))
    (type (;7;) (struct (field i64) (field (mut f64)) (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field i16) (field (mut i8)) (field i8) (field exnref) (field f64) (field (mut funcref)) (field i64)))
  )
  (memory (;0;) i64 0 17016315513905)
  (global (;0;) (mut i32) i32.const 0)
  (global (;1;) (mut i64) i64.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (export "" (global 0))
  (export "1" (global 1))
  (export "\u{e}d" (global 2))
  (elem (;0;) declare eqref)
  (elem (;1;) nullref (ref.null none))
  (func (;0;) (type 5) (param i32 i64 i32 i64 f32 f64)
    (local (ref null 5))
    ref.null 2
    ref.cast nullfuncref
    struct.new 6
    loop ;; label = @1
      try_table (type 3) (result f64 i64 anyref) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 0 (;@1;)) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 1) (catch_all 0 (;@1;)) ;; label = @2
        data.drop 0
        memory.size
        f32.load
        f32.const 0x1.62p-103 (;=0.00000000000000000000000000000013635584;)
        f32.sub
        i64.trunc_f32_u
        i64.load32_s
        i64.eqz
        i32.extend8_s
        data.drop 0
        local.set 0
        loop (result i32) ;; label = @3
          i32.const 563234481
        end
        global.get 0
        i32.xor
        global.set 0
        f64.const -nan:0xfffffffdfffff (;=NaN;)
        i64.const 1048575
        ref.null any
      end
      drop
      global.get 1
      i64.xor
      global.set 1
      i64.reinterpret_f64
      global.get 2
      i64.xor
      global.set 2
    end
    drop
    drop
  )
  (data (;0;) "&\17\b3")
)
