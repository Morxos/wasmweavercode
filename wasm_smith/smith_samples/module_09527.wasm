(module
  (rec
    (type (;0;) (struct (field i8) (field i16) (field i16) (field i16) (field (mut f64)) (field funcref) (field (mut i16)) (field (mut i16)) (field i8) (field i16) (field (mut f32)) (field (mut nullfuncref)) (field f64)))
    (type (;1;) (array (mut i8)))
    (type (;2;) (array i8))
    (type (;3;) (array (mut i16)))
    (type (;4;) (func (param f64 f32) (result i32 i32)))
    (type (;5;) (sub (func (result f64 f64 f32))))
    (type (;6;) (sub (array i16)))
    (type (;7;) (array (mut i8)))
    (type (;8;) (struct (field (mut i8)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i64)) (field (mut f32)) (field (mut i8)) (field (mut f32)) (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i32)) (field i64) (field i8) (field (mut i16)) (field (mut i32)) (field i8)))
    (type (;9;) (struct (field (mut i16)) (field (mut i16)) (field f64) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i64) (field i64) (field i16) (field (mut i32)) (field i8) (field i8)))
    (type (;10;) (func))
    (type (;11;) (array (mut i16)))
    (type (;12;) (array (mut f64)))
    (type (;13;) (struct (field f64) (field f32) (field i8) (field (mut i8))))
    (type (;14;) (sub (struct (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field f64) (field (mut i8)))))
    (type (;15;) (struct (field i8) (field (mut f64)) (field (mut i32)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut f64)) (field i32) (field (mut i16)) (field i16) (field i8) (field (mut f32)) (field i8) (field i8) (field f32) (field i8)))
    (type (;16;) (sub (func (result i32))))
    (type (;17;) (sub (array (mut i16))))
    (type (;18;) (array i8))
    (type (;19;) (sub (struct)))
    (type (;20;) (sub (func (param f64 f64))))
    (type (;21;) (sub (array i8)))
    (type (;22;) (struct (field (mut i32))))
    (type (;23;) (sub (struct (field (mut i8)) (field i8) (field i16) (field eqref) (field i64) (field (mut (ref null 4))) (field i32) (field i8) (field (mut i8)) (field f64))))
    (type (;24;) (struct (field i8) (field (mut f32)) (field (mut f64)) (field i8) (field i64) (field i8) (field (mut i8))))
    (type (;25;) (array f64))
    (type (;26;) (sub (struct (field (mut i8)) (field (mut i32)) (field i64) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field i16) (field i16) (field (mut i8)) (field i8) (field (mut i32)) (field i8))))
    (type (;27;) (array (mut i8)))
    (type (;28;) (struct (field (mut i8))))
    (type (;29;) (sub final 5 (func (result f64 f64 f32))))
    (type (;30;) (sub (array i32)))
    (type (;31;) (func (param f64 i32) (result i64)))
    (type (;32;) (sub (array (mut i8))))
    (type (;33;) (sub (func (result i64 i32))))
    (type (;34;) (sub (struct)))
    (type (;35;) (struct (field i32) (field i16) (field i16) (field i16) (field i16) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i8) (field (mut i32)) (field i16) (field (mut f32))))
    (type (;36;) (sub (array f32)))
    (type (;37;) (struct (field (mut f32)) (field i16) (field i16) (field i8) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field i8)))
    (type (;38;) (array (mut i16)))
    (type (;39;) (sub (func)))
    (type (;40;) (array (mut i8)))
    (type (;41;) (sub final 5 (func (result f64 f64 f32))))
    (type (;42;) (sub (func (param i32 f32))))
    (type (;43;) (sub (array (mut i8))))
    (type (;44;) (sub (struct (field i8) (field (mut i16)))))
    (type (;45;) (sub (struct (field i64) (field (mut i8)) (field i16) (field (mut i16)) (field f64) (field (mut i16)) (field i64) (field (mut i8)) (field i8) (field i16) (field f32) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i16) (field i16))))
    (type (;46;) (func (param i64) (result f32 f32 i64)))
    (type (;47;) (struct (field i16) (field (mut f64)) (field i16) (field i8) (field (mut eqref)) (field (mut i8)) (field f32) (field (ref null 35)) (field i8)))
    (type (;48;) (sub (func)))
    (type (;49;) (sub (func)))
    (type (;50;) (struct (field i16) (field i16) (field (mut (ref null 39))) (field i16) (field i16) (field i8) (field i8)))
    (type (;51;) (array (mut i16)))
    (type (;52;) (sub (struct (field (mut i64)))))
    (type (;53;) (sub (struct (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field i16) (field (mut i8)) (field i16) (field f32) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8)) (field f64) (field (mut i8)) (field (mut i8)))))
    (type (;54;) (sub (array f64)))
    (type (;55;) (sub (struct (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field i16) (field i8) (field i64) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i64) (field (mut i16)) (field (mut i8)))))
    (type (;56;) (func (result f64 i64 i32 f32)))
    (type (;57;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut i64)) (field i8) (field (mut i31ref)) (field i8))))
    (type (;58;) (sub (array (ref null 26))))
    (type (;59;) (sub (func (result f32 i64 i32 f32))))
    (type (;60;) (func))
    (type (;61;) (func (param i32 f32 f64) (result i64)))
    (type (;62;) (array (mut f32)))
    (type (;63;) (array (mut i16)))
    (type (;64;) (struct (field (mut i64)) (field (mut i8)) (field (mut i64)) (field (ref null 36)) (field i16) (field (mut i8)) (field funcref) (field i8) (field (mut i8)) (field (mut i16))))
  )
  (table (;0;) 0 (ref null 53))
  (memory (;0;) 217 12418)
  (tag (;0;) (type 10))
  (tag (;1;) (type 20) (param f64 f64))
  (export "t&" (memory 0))
  (start 0)
  (elem (;0;) declare externref)
  (elem (;1;) eqref)
  (elem (;2;) declare (ref null 47) (ref.null none) (ref.null 47) (ref.null 47) (ref.null none))
  (elem (;3;) declare eqref (ref.null 51))
  (elem (;4;) declare (ref null 40) (ref.null 40))
  (func (;0;) (type 48)
    loop (type 41) (result f64 f64 f32) ;; label = @1
      table.size 0
      f32.convert_i32_s
      i32.const 8191
      i32.load16_s offset=12727083 align=1
      if (type 41) (result f64 f64 f32) ;; label = @2
        data.drop 1
        unreachable
      else
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 42) (param i32 f32))
  (data (;0;) "\91\d9")
  (data (;1;) (i32.const 3811286) "")
)
