(module
  (rec
    (type (;0;) (array i64))
    (type (;1;) (func))
    (type (;2;) (sub (struct (field f32) (field i16) (field i8) (field (mut i32)) (field (mut i8)) (field anyref) (field i32))))
    (type (;3;) (sub (func (param f32 f64) (result i64))))
    (type (;4;) (struct (field (mut i8)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field i32) (field (mut i64)) (field (mut i8)) (field (mut f64)) (field (mut f64)) (field (mut i8)) (field i8) (field i64) (field (mut i16)) (field (mut i8)) (field (mut i16))))
    (type (;5;) (sub (func)))
    (type (;6;) (array (mut i8)))
    (type (;7;) (array f32))
    (type (;8;) (sub (struct (field (mut f32)) (field i64) (field i16) (field i16) (field (mut i8)) (field i8) (field i64) (field i32) (field i16) (field (mut i16)) (field i8))))
    (type (;9;) (sub (array f64)))
    (type (;10;) (func (param (ref null 9) f64 nullfuncref) (result i32)))
    (type (;11;) (struct (field (mut f64)) (field i8) (field (mut i64)) (field (mut i8)) (field (mut f64)) (field i32) (field (mut f32)) (field i64) (field (mut i16)) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut f32))))
    (type (;12;) (sub (func (param i32))))
    (type (;13;) (sub (struct (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)))))
    (type (;14;) (func))
    (type (;15;) (struct (field (mut i64)) (field (mut i8)) (field i8) (field (mut i64)) (field i16) (field (mut i16)) (field i16) (field i64) (field (mut i16)) (field (mut i64)) (field i64) (field (mut nullfuncref))))
    (type (;16;) (sub (array (mut i8))))
    (type (;17;) (array (mut i8)))
    (type (;18;) (struct (field i8) (field (mut i64)) (field (mut i8)) (field (mut f32)) (field (mut i32)) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field (ref null 16)) (field (mut i16)) (field nullfuncref) (field f64) (field (mut i16)) (field (mut i8)) (field (ref null 9)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field funcref)))
    (type (;19;) (array (mut i16)))
    (type (;20;) (struct))
    (type (;21;) (sub (struct (field (mut i8)) (field i8))))
    (type (;22;) (sub (array nullref)))
    (type (;23;) (sub (array i16)))
    (type (;24;) (sub (struct (field i16) (field (mut f64)) (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field exnref) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field i16) (field f64) (field i8) (field (mut i8)) (field i64) (field (mut i16)) (field i16))))
    (type (;25;) (sub (struct (field (mut f32)) (field i8) (field (mut i16)) (field i32) (field i8) (field (mut i16)) (field i8) (field i16) (field i8) (field i8) (field i8) (field i8) (field i8) (field i64))))
    (type (;26;) (func (param i64 i64)))
  )
  (import "^\u{5c}c" "" (global (;0;) i32))
  (import "G\u{3c0}8S" "" (memory (;0;) 145))
  (table (;0;) i64 3788 (ref null 1))
  (global (;1;) (mut i32) i32.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (global (;3;) (mut i64) i64.const 0)
  (global (;4;) (mut i32) i32.const 0)
  (export "" (table 0))
  (elem (;0;) (table 0) (i64.const 176) nullfuncref (ref.null nofunc))
  (elem (;1;) (table 0) (i64.const 208) (ref null 1) (ref.null nofunc) (ref.null nofunc))
  (func (;0;) (type 3) (param f32 f64) (result i64)
    (local i32 i64)
    ref.null 8
    ref.as_non_null
    block (type 14) ;; label = @1
      elem.drop 1
      data.drop 1
      struct.new_default 20
      ref.cast (ref none)
      memory.size
      i32.load8_u offset=3804056
      if (result i32) ;; label = @2
        f32.const 0x1.fffffep-126 (;=0.000000000000000000000000000000000000023509886;)
        i64.trunc_f32_s
        try_table (type 1) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) ;; label = @3
          f32.const -0x1.12d3dcp-90 (;=-0.0000000000000000000000000008672029;)
          i32.trunc_sat_f32_s
          i32.extend16_s
          f32.load offset=3565361
          br 2 (;@1;)
          f32.const -0x1.6abe3p-11 (;=-0.0006918772;)
          f32.abs
          i32.trunc_f32_s
          i32.load16_s offset=1431467 align=1
          elem.drop 1
          array.new_fixed 23 0
          memory.size
          i64.load32_u offset=3385175
          loop ;; label = @4
            i32.const -1770851550
            i32.extend8_s
            i64.load32_s offset=7067945 align=2
            f64.convert_i64_s
            f64.abs
            f64.trunc
            i64.trunc_f64_u
            f64.convert_i64_u
            f64.sqrt
            loop (type 14) ;; label = @5
              i32.const 347385612
              i32.const -1301903889
              array.new_fixed 19 1
              ref.null noextern
              br 0 (;@5;)
              try_table (catch_all 1 (;@4;)) (catch_all 1 (;@4;)) (catch_all 4 (;@1;)) (catch_all 1 (;@4;)) (catch_all 0 (;@5;)) (catch_all 1 (;@4;)) (catch_all 4 (;@1;)) ;; label = @6
                i32.const 1655264820
                global.get 1
                i32.xor
                global.set 1
              end
              drop
              drop
              global.get 1
              i32.xor
              global.set 1
            end
            i64.reinterpret_f64
            global.get 2
            i64.xor
            global.set 2
          end
          global.get 3
          i64.xor
          global.set 3
          drop
          global.get 1
          i32.xor
          global.set 1
          i32.reinterpret_f32
          global.get 4
          i32.xor
          global.set 4
        end
        global.get 3
        i64.xor
        global.set 3
        i32.const 1500407714
      else
        i32.const 131071
      end
      global.get 1
      i32.xor
      global.set 1
      drop
    end
    drop
    i64.const 5646488313529159249
  )
  (func (;1;) (type 3) (param f32 f64) (result i64)
    (local f64 i32)
    loop (type 5) ;; label = @1
      f32.const -0x1.447dc8p+27 (;=-170126910;)
      f32.sqrt
      local.get 1
      local.get 3
      try_table (type 5) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 0 (;@1;)) ;; label = @2
        br 0 (;@2;)
        struct.new_default 2
        br_on_null 1 (;@1;)
        nop
        global.get 0
        array.new_default 7
        i32.const -3
        data.drop 0
        block (result f64) ;; label = @3
          ref.null noextern
          data.drop 0
          try_table (type 14) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 2 (;@1;)) ;; label = @4
            i32.const 9502720
            memory.size
            i64.load8_s offset=6664540
            i64.store16 offset=2034085
            i32.const -2048
            i64.load16_u offset=4524294
            elem.drop 0
            i32.const 65536
            f32.convert_i32_s
            block (type 5) ;; label = @5
              i32.const 2078305553
              local.set 3
              ref.null extern
              br 3 (;@2;)
              f32.const 0x1.p-137 (;=0.00000000000000000000000000000000000000000574;)
              global.get 0
              data.drop 1
              f32.load offset=22238
              array.new_fixed 7 1
              ref.test (ref none)
              i32.extend8_s
              local.set 3
              f32.nearest
              i32.reinterpret_f32
              f64.convert_i32_s
              f64.floor
              unreachable
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) (global.get 0) "")
  (data (;1;) (global.get 0) "\b5")
)
