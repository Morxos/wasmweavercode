(module
  (rec
    (type (;0;) (struct (field (mut i8)) (field f64) (field (mut i8)) (field i16) (field (mut funcref)) (field i16) (field (mut f32)) (field i32) (field nullexternref) (field f32) (field (mut i64)) (field (mut i16)) (field f64) (field (mut i8))))
    (type (;1;) (sub (array i32)))
    (type (;2;) (sub (struct (field i31ref) (field (mut i16)) (field i8) (field i16) (field i64) (field (mut f32)) (field (mut i16)) (field funcref) (field f64) (field (mut i64)) (field i16) (field (mut i8)))))
    (type (;3;) (func (result i64 f32 f32)))
    (type (;4;) (struct (field i8) (field i16) (field f32) (field (mut i16)) (field (mut i8))))
    (type (;5;) (array i64))
    (type (;6;) (func (param (ref null 3)) (result f64 f32 arrayref i32)))
    (type (;7;) (array nullexternref))
    (type (;8;) (array f32))
    (type (;9;) (func))
    (type (;10;) (sub (func (result f64 i32))))
    (type (;11;) (sub (func (result i64))))
    (type (;12;) (array i16))
    (type (;13;) (func))
    (type (;14;) (array (mut i16)))
    (type (;15;) (func (result f64 exnref i64 i32)))
    (type (;16;) (sub (array f64)))
    (type (;17;) (func (param i64)))
    (type (;18;) (func (param f64 i32 f64 arrayref f64) (result eqref)))
    (type (;19;) (sub (array i64)))
    (type (;20;) (sub (array f64)))
    (type (;21;) (func))
    (type (;22;) (sub (array i16)))
    (type (;23;) (sub (array (mut nullref))))
    (type (;24;) (func))
    (type (;25;) (struct (field (mut i8)) (field i64) (field (mut i64)) (field arrayref) (field i8) (field f64) (field i64) (field nullfuncref) (field (mut i16)) (field (mut nullref)) (field i8) (field (mut funcref)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut f32))))
    (type (;26;) (sub (func (param f64))))
    (type (;27;) (sub (struct (field i8) (field i8) (field (mut f32)) (field i8) (field (mut i8)) (field i8) (field i16))))
    (type (;28;) (func (result f32 f32 i64 exnref)))
    (type (;29;) (sub final 22 (array i16)))
    (type (;30;) (sub (func)))
    (type (;31;) (sub (func)))
    (type (;32;) (func))
    (type (;33;) (sub (array i16)))
    (type (;34;) (sub (func (param i64))))
    (type (;35;) (sub (func (param f64))))
    (type (;36;) (sub (array (ref null 29))))
    (type (;37;) (sub 35 (func (param f64))))
    (type (;38;) (sub (array f64)))
    (type (;39;) (sub (func (param externref f64 f64))))
    (type (;40;) (sub (array (mut f32))))
    (type (;41;) (sub (array i16)))
    (type (;42;) (struct (field i8) (field (mut i16)) (field i8) (field i64) (field (mut i16)) (field i16)))
    (type (;43;) (struct (field (mut f32)) (field f32) (field i16) (field f64) (field i32) (field i16) (field i16) (field i16) (field i16) (field (mut i64)) (field i16)))
    (type (;44;) (sub (struct (field i16) (field i64) (field (mut i32)) (field f32) (field (mut i16)) (field externref) (field (mut i16)) (field (mut i16)) (field i64) (field (mut i8)))))
    (type (;45;) (sub (array (mut i16))))
    (type (;46;) (sub (func (param i32) (result f32))))
    (type (;47;) (struct (field (mut i8)) (field i16) (field i64) (field i16) (field (mut f64)) (field (mut i64)) (field i32) (field (mut i16)) (field anyref) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field (mut i32)) (field f64)))
    (type (;48;) (array (mut i8)))
    (type (;49;) (array (mut i8)))
    (type (;50;) (sub (struct (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i32) (field i8) (field f32) (field f32) (field i16) (field i8) (field f64) (field (mut structref)) (field f32))))
    (type (;51;) (array (mut i8)))
    (type (;52;) (array (mut i8)))
    (type (;53;) (func (param i31ref (ref null 45)) (result f64)))
    (type (;54;) (func (result i32 f64)))
    (type (;55;) (array i8))
    (type (;56;) (sub (func (param f64))))
    (type (;57;) (sub (array i16)))
    (type (;58;) (sub (array (mut f32))))
    (type (;59;) (sub (func (param f32) (result f32 exnref i64 i32))))
    (type (;60;) (sub (array i16)))
    (type (;61;) (sub (func (param i32) (result f64 f64 nullref f64))))
    (type (;62;) (sub (func (param f64))))
    (type (;63;) (sub (func (result i32))))
    (type (;64;) (sub (array i8)))
    (type (;65;) (sub (array i16)))
    (type (;66;) (sub (func (param f64 f32))))
    (type (;67;) (sub (func (param f32 i32 f32 f64 f32) (result f64 arrayref anyref exnref))))
    (type (;68;) (sub (func (param (ref null 45)) (result f32))))
    (type (;69;) (sub (func (param f32) (result i64 (ref null 37)))))
    (type (;70;) (struct (field (mut i16)) (field (mut i8)) (field (mut i64)) (field i16) (field i8) (field i8)))
    (type (;71;) (func (param i64) (result i32)))
    (type (;72;) (sub (func (result f32))))
    (type (;73;) (sub (array (mut i8))))
    (type (;74;) (struct (field (mut i8)) (field (mut f64)) (field i16) (field (mut i64)) (field (mut i32)) (field i16) (field (mut i16)) (field i8) (field (mut i64)) (field (mut i32)) (field (mut i64)) (field (mut i16)) (field i16)))
    (type (;75;) (sub 45 (array (mut i16))))
    (type (;76;) (sub (array i8)))
    (type (;77;) (sub (struct (field (mut i16)) (field i16) (field (mut i32)) (field i8) (field i8) (field (mut i64)) (field f64) (field i16) (field (ref null 17)) (field i16) (field (mut i8)) (field (mut i16)))))
    (type (;78;) (array (mut f32)))
    (type (;79;) (sub (struct (field i8) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i16) (field i16) (field (mut i16)))))
    (type (;80;) (func (result f64)))
    (type (;81;) (struct (field i16) (field funcref) (field i16) (field i8) (field (mut i8)) (field i8) (field (mut i8)) (field i16) (field (mut i16)) (field (mut structref))))
    (type (;82;) (array (mut f32)))
    (type (;83;) (sub (func (result f32 i32))))
    (type (;84;) (sub (func)))
    (type (;85;) (sub 1 (array i32)))
    (type (;86;) (sub 1 (array i32)))
    (type (;87;) (sub 1 (array i32)))
    (type (;88;) (sub 1 (array i32)))
    (type (;89;) (sub 1 (array i32)))
    (type (;90;) (sub 1 (array i32)))
  )
  (func (;0;) (type 3) (result i64 f32 f32)
    unreachable
  )
)
