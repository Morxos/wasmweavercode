(module
  (rec
    (type (;0;) (sub (func (result f32))))
    (type (;1;) (struct (field (mut i8)) (field i8) (field i16) (field i64) (field (mut i16)) (field (mut i16)) (field i8) (field i16)))
    (type (;2;) (array i16))
    (type (;3;) (sub (array i16)))
    (type (;4;) (sub (func (param i64 i64) (result anyref))))
    (type (;5;) (sub 4 (func (param i64 i64) (result arrayref))))
    (type (;6;) (array (mut i64)))
    (type (;7;) (func (result funcref)))
    (type (;8;) (sub (struct (field (mut i16)) (field (mut i8)) (field i8) (field structref) (field i8) (field (mut i8)) (field i16) (field i8) (field i8) (field i8) (field i8) (field i16))))
    (type (;9;) (array (mut i16)))
    (type (;10;) (struct (field i8) (field (mut i8)) (field f32) (field i16) (field (mut i8)) (field f32) (field (mut i8)) (field i64) (field (mut i8)) (field i16) (field (mut f32)) (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field (mut f64)) (field (mut i16))))
    (type (;11;) (sub final 5 (func (param i64 i64) (result nullref))))
    (type (;12;) (array (mut i32)))
    (type (;13;) (sub (array (mut i8))))
    (type (;14;) (sub (func (param i32) (result f32 i32))))
    (type (;15;) (func (result f64 f64)))
    (type (;16;) (sub (array i32)))
    (type (;17;) (func (result i64)))
    (type (;18;) (sub (array (mut i8))))
    (type (;19;) (func (param f32) (result f32)))
    (type (;20;) (sub (func)))
    (type (;21;) (sub (struct (field (mut i32)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field i32) (field i8) (field anyref) (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field i16))))
    (type (;22;) (struct (field i16) (field (mut i8)) (field (mut i16)) (field i16) (field i64) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field nullref) (field (mut i32)) (field (mut i8))))
    (type (;23;) (func (param f64) (result nullfuncref)))
    (type (;24;) (array i16))
    (type (;25;) (array (mut i8)))
    (type (;26;) (func))
    (type (;27;) (sub (struct)))
    (type (;28;) (sub (func (param f32))))
    (type (;29;) (sub (func)))
    (type (;30;) (func))
    (type (;31;) (func (param f64 f32 f32) (result f32)))
    (type (;32;) (array i64))
    (type (;33;) (sub (array i8)))
    (type (;34;) (sub (array i8)))
    (type (;35;) (sub (array i8)))
    (type (;36;) (sub (array (mut i16))))
    (type (;37;) (sub (array i16)))
    (type (;38;) (func (result nullref)))
    (type (;39;) (sub (array i8)))
    (type (;40;) (sub (func)))
    (type (;41;) (sub (func (param i64))))
    (type (;42;) (sub (struct (field i32) (field (mut i8)) (field (mut f64)))))
    (type (;43;) (sub (struct (field (mut i16)) (field (ref null 14)) (field (mut (ref null 13))) (field (mut nullfuncref)) (field i16) (field i16) (field i8) (field i64))))
    (type (;44;) (sub 41 (func (param i64))))
    (type (;45;) (func (result f32 i32 i32 f64 i32)))
    (type (;46;) (sub (struct (field (mut f64)) (field i16) (field i16) (field (mut i64)) (field i16) (field i16) (field i8) (field (mut i16)) (field i16) (field (mut i16)) (field i16))))
    (type (;47;) (sub (struct (field (mut i16)) (field (mut f32)) (field (mut i8)) (field i16))))
    (type (;48;) (func))
    (type (;49;) (array (mut f32)))
  )
  (import "" "" (memory (;0;) i64 88 11072027316001))
  (import "\u{b}" "" (tag (;0;) (type 40)))
  (global (;0;) (mut f32) f32.const -0x1.5f5d68p-5 (;=-0.04289122;))
  (global (;1;) f32 f32.const 0x1.c9202p+106 (;=144868850000000000000000000000000;))
  (export "" (memory 0))
  (export "'" (memory 0))
  (export "G+\u{1}" (memory 0))
  (func (;0;) (type 4) (param i64 i64) (result anyref)
    (local i32 arrayref f32)
    try_table (type 29) ;; label = @1
      ref.null 34
      local.get 1
      i32.load16_u offset=3862156 align=1
      br_table 1 1
    end
    struct.new 27
    ref.null 42
    nop
    f32.const -0x1.269e3ap-80 (;=-0.0000000000000000000000009519623;)
    i64.trunc_sat_f32_s
    i64.load32_s offset=2442469 align=2
    i64.clz
    i64.load8_u offset=2619893
    f64.convert_i64_s
    f64.floor
    try_table (type 48) ;; label = @1
      block (type 45) (result f32 i32 i32 f64 i32) ;; label = @2
        i32.const -505013628
        try_table (type 26) (catch 0 1 (;@1;)) (catch 0 1 (;@1;)) (catch_all 1 (;@1;)) (catch_all 1 (;@1;)) (catch 0 1 (;@1;)) (catch 0 1 (;@1;)) ;; label = @3
          f64.const -0x1.b6fe20e466007p+46 (;=-120669391624576.11;)
          i32.trunc_f64_s
          array.new_default 9
          ref.cast (ref 9)
          ref.as_non_null
          br_on_non_null 3
          nop
          br 2 (;@1;)
          data.drop 1
          loop (type 20) ;; label = @4
            data.drop 0
            ref.null 49
            try_table (type 7) (result funcref) (catch_all 0 (;@4;)) (catch 0 0 (;@4;)) (catch_all 0 (;@4;)) (catch_all 0 (;@4;)) (catch 0 3 (;@1;)) (catch 0 1 (;@3;)) ;; label = @5
              try_table (type 45) (result f32 i32 i32 f64 i32) (catch_all 2 (;@3;)) (catch 0 4 (;@1;)) ;; label = @6
                i32.const -1104775616
                try_table (type 38) (result nullref) (catch 0 2 (;@4;)) (catch 0 5 (;@1;)) (catch 0 3 (;@3;)) (catch_all 2 (;@4;)) (catch_all 3 (;@3;)) (catch_all 5 (;@1;)) (catch 0 5 (;@1;)) (catch_all 5 (;@1;)) ;; label = @7
                  i32.const 1803849828
                  local.tee 2
                  local.get 3
                  extern.convert_any
                  br_on_null 4 (;@3;)
                  ref.as_non_null
                  any.convert_extern
                  i64.const -5719446668682445023
                  loop (type 0) (result f32) ;; label = @8
                    try_table ;; label = @9
                      f64.const -0x1.3fa996554e35ep+75 (;=-47173851263573305000000;)
                      i64.trunc_f64_u
                      i32.load16_u offset=4003510
                      ref.null eq
                      global.get 1
                      i32.const -1025
                      local.set 2
                      struct.new 27
                      try_table (type 15) (result f64 f64) (catch_all 6 (;@3;)) ;; label = @10
                        try_table (result f32) (catch_all 6 (;@4;)) (catch 0 7 (;@3;)) (catch 0 2 (;@8;)) (catch 0 6 (;@4;)) (catch 0 6 (;@4;)) (catch 0 7 (;@3;)) (catch_all 6 (;@4;)) (catch_all 6 (;@4;)) (catch 0 1 (;@9;)) ;; label = @11
                          global.get 1
                          i64.trunc_f32_s
                          i64.load32_s offset=4577753
                          global.get 1
                          f32.neg
                          f32.neg
                          i32.const 520634730
                          array.new_default 3
                          i64.const 2251799813685247
                          f32.load offset=3706985 align=2
                          try_table (result f32) (catch 0 2 (;@9;)) (catch_all 2 (;@9;)) (catch 0 2 (;@9;)) (catch_all 7 (;@4;)) (catch 0 2 (;@9;)) (catch_all 8 (;@3;)) (catch_all 10 (;@1;)) (catch 0 2 (;@9;)) (catch 0 2 (;@9;)) ;; label = @12
                            br 9 (;@3;)
                            loop (result f64) ;; label = @13
                              nop
                              f32.const 0x1.p-133 (;=0.000000000000000000000000000000000000000091835;)
                              block (type 19) (param f32) (result f32) ;; label = @14
                                global.set 0
                                local.get 4
                                struct.new_default 10
                                ref.null func
                                br_on_non_null 9 (;@5;)
                                nop
                                unreachable
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "\bf\ff")
  (data (;1;) "\ac")
)
