(module
  (rec
    (type (;0;) (sub (struct (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)) (field (mut f32)) (field f32) (field i31ref) (field i16) (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field i8) (field nullref) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)))))
    (type (;1;) (struct (field i16) (field (mut f32)) (field f32) (field f32) (field i16) (field i8) (field i8) (field nullexternref)))
    (type (;2;) (sub (struct (field (mut i8)))))
    (type (;3;) (array (mut f32)))
    (type (;4;) (sub (array i16)))
    (type (;5;) (sub (func (param i64 i32) (result i64 f32))))
    (type (;6;) (sub (array (mut funcref))))
    (type (;7;) (sub (struct (field (mut i8)) (field i16) (field i16) (field (mut i8)) (field i16) (field f64) (field i32) (field (mut f64)) (field (mut i8)) (field (mut i16)) (field arrayref) (field i8))))
    (type (;8;) (sub (struct (field (mut externref)) (field (mut i31ref)) (field i32) (field (mut i32)) (field f64) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field (mut f64)))))
    (type (;9;) (sub (func (result i64 f32 exnref i32 i64))))
    (type (;10;) (array (mut i16)))
    (type (;11;) (sub (struct (field i16) (field i16))))
    (type (;12;) (func))
    (type (;13;) (struct (field i8) (field (mut i16)) (field i16) (field (mut i8)) (field i8) (field i16) (field (mut f32)) (field i16) (field i16)))
    (type (;14;) (sub (array i64)))
    (type (;15;) (sub (func (param nullref i32 f32 i32 f64 f64 f64 i32))))
    (type (;16;) (sub (struct (field (ref null 1)) (field f64) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)) (field f32) (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i8)) (field f64) (field (mut i32)) (field (mut f32)) (field f32) (field i32) (field (mut i16)) (field (mut i8)) (field (mut i16)))))
    (type (;17;) (array (mut i16)))
    (type (;18;) (func (param f64 f64 i64 (ref null 10) i32 arrayref) (result i64 i32 i32 i32 eqref structref)))
    (type (;19;) (sub (func (result i64 i32 f64 i32 i64 i32 i32))))
    (type (;20;) (sub (array f32)))
    (type (;21;) (sub (array i16)))
    (type (;22;) (sub (func (param i64) (result f32 f32 f64))))
    (type (;23;) (struct (field i8) (field i8) (field (mut i16)) (field i32) (field i8) (field (mut f64)) (field (mut f32)) (field (mut f64)) (field i32)))
    (type (;24;) (sub (func)))
    (type (;25;) (array i64))
    (type (;26;) (func (param i64)))
    (type (;27;) (struct (field i8) (field (mut i16)) (field i8) (field (ref null 3)) (field (mut i16)) (field i16) (field (mut i16))))
    (type (;28;) (array i16))
    (type (;29;) (sub (array (mut i31ref))))
    (type (;30;) (sub (func (param f32 i32 f64 i32) (result i64))))
    (type (;31;) (sub (array i32)))
    (type (;32;) (func (param f64 i32)))
    (type (;33;) (struct (field anyref) (field (mut i32)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i16)) (field exnref) (field structref) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field i16) (field (mut i16)) (field (mut nullfuncref)) (field i8) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i16))))
    (type (;34;) (func (param f32 f32)))
    (type (;35;) (struct (field (mut i8)) (field (mut i16)) (field i64) (field (mut f64)) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field i8) (field i8) (field i16) (field i16) (field i8) (field i64) (field f32) (field f64) (field (mut i16)) (field (mut i16))))
    (type (;36;) (struct (field i16) (field (mut i32)) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field f64) (field i8) (field i8) (field i16)))
    (type (;37;) (struct (field (mut i8)) (field (mut i64)) (field (mut i16)) (field f32) (field (mut i32)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field (mut i16)) (field i16)))
    (type (;38;) (sub (array (mut i8))))
    (type (;39;) (sub (struct (field (mut (ref null 11))) (field f32) (field i8) (field (mut f32)) (field (mut i16)) (field i64) (field (mut i16)) (field i8))))
    (type (;40;) (sub final 15 (func (param i31ref i32 f32 i32 f64 f64 f64 i32))))
    (type (;41;) (func (result i32 f64)))
    (type (;42;) (sub (array (mut i8))))
    (type (;43;) (sub (func (param externref (ref null 30) f64))))
    (type (;44;) (array (mut i8)))
    (type (;45;) (struct (field (mut i16)) (field (mut f64)) (field (mut i8)) (field i32) (field i32) (field i16)))
  )
  (memory (;0;) i64 10959 251801397477137 shared)
  (tag (;0;) (type 32) (param f64 i32))
  (export "6" (memory 0))
  (func (;0;) (type 9) (result i64 f32 exnref i32 i64)
    (local i32 i32)
    call 0
    f32.const 0x1.fffffp-129 (;=0.000000000000000000000000000000000000002938734;)
    f32.trunc
    f32.ceil
    f32.nearest
    try_table (type 9) (result i64 f32 exnref i32 i64) ;; label = @1
      loop (type 9) (result i64 f32 exnref i32 i64) ;; label = @2
        data.drop 0
        try_table (type 9) (result i64 f32 exnref i32 i64) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) ;; label = @3
          block (type 24) ;; label = @4
            loop ;; label = @5
              f32.const 0x1.9e0008p-42 (;=0.00000000000036770597;)
              f32.const 0x1.p-132 (;=0.000000000000000000000000000000000000000183671;)
              f32.abs
              i32.trunc_sat_f32_s
              nop
              call 0
              i32.load8_s offset=509342451
              i32.extend8_s
              ref.null 5
              ref.test nullfuncref
              i32.lt_s
              i32.mul
              f32.const 0x1.fff8p-136 (;=0.000000000000000000000000000000000000000022957;)
              struct.new_default 11
              memory.size
              i32.load16_u offset=129178470 align=1
              call 0
              i64.load8_u offset=75245081
              block (type 9) (result i64 f32 exnref i32 i64) ;; label = @6
                try_table (type 41) (result i32 f64) (catch_all 4 (;@2;)) (catch_all 1 (;@5;)) (catch_all 4 (;@2;)) (catch_all 2 (;@4;)) (catch_all 4 (;@2;)) (catch_all 4 (;@2;)) (catch_all 1 (;@5;)) ;; label = @7
                  data.drop 0
                  try_table (catch_all 5 (;@2;)) (catch_all 2 (;@5;)) (catch_all 3 (;@4;)) (catch_all 5 (;@2;)) (catch_all 5 (;@2;)) (catch_all 5 (;@2;)) (catch_all 3 (;@4;)) ;; label = @8
                    local.get 1
                    f32.convert_i32_s
                    br 6 (;@2;)
                    return_call 0
                    f64.const -0x1.fdbc9f60f64ffp-582 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012579070535548348;)
                    call 0
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
          end
          unreachable
        end
      end
    end
    unreachable
  )
  (data (;0;) "U")
  (data (;1;) (i64.const 265417144) "")
)
