(module
  (rec
    (type (;0;) (struct (field i8) (field i32) (field (mut nullref)) (field i8) (field (mut i8)) (field f64) (field structref) (field i8) (field (mut f64)) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field i16) (field (mut f32))))
    (type (;1;) (array (mut exnref)))
    (type (;2;) (array f64))
    (type (;3;) (struct))
    (type (;4;) (array i16))
    (type (;5;) (sub (struct (field i8) (field (mut i8)) (field i8) (field funcref))))
    (type (;6;) (sub (array i32)))
    (type (;7;) (sub (func)))
    (type (;8;) (sub (array (mut i16))))
    (type (;9;) (func (param i64) (result i64 f64 f64)))
    (type (;10;) (sub (array (mut i16))))
    (type (;11;) (sub (array (mut i32))))
    (type (;12;) (sub (func (result anyref i32))))
    (type (;13;) (sub (struct (field i8) (field (mut i8)) (field (mut f64)) (field f64) (field i32) (field (mut nullexternref)) (field (mut f64)) (field (mut i8)) (field i8) (field i32) (field i8))))
    (type (;14;) (struct (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut nullfuncref))))
    (type (;15;) (array (mut i8)))
    (type (;16;) (array i16))
    (type (;17;) (struct (field (mut i16))))
    (type (;18;) (sub (func (param nullfuncref f32))))
    (type (;19;) (struct (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field i8) (field i16) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut structref)) (field i16) (field i32)))
    (type (;20;) (sub (func (param i32))))
    (type (;21;) (struct (field i8) (field f64) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut nullexternref)) (field i8) (field (mut f64)) (field (mut i8)) (field (mut arrayref)) (field i32) (field (mut f64)) (field i16) (field (mut i64)) (field (mut i64)) (field i16)))
    (type (;22;) (sub (array i8)))
    (type (;23;) (sub (array i16)))
    (type (;24;) (sub (array arrayref)))
    (type (;25;) (func))
    (type (;26;) (sub (func)))
    (type (;27;) (sub (array i32)))
    (type (;28;) (array (mut i8)))
    (type (;29;) (struct (field (ref null 0)) (field (mut i16)) (field f64) (field i64) (field (mut i32))))
    (type (;30;) (array (mut i16)))
    (type (;31;) (array i16))
    (type (;32;) (array i32))
    (type (;33;) (func (param f64)))
    (type (;34;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut anyref)) (field f64) (field i8) (field (mut f32)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field i32) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut f64)))))
    (type (;35;) (sub (func (result i32))))
    (type (;36;) (sub (func (result i32 nullexternref f64))))
    (type (;37;) (func (param f64 f32)))
    (type (;38;) (array i8))
    (type (;39;) (array (mut i16)))
    (type (;40;) (array (mut i32)))
    (type (;41;) (struct (field i16) (field i64) (field i8) (field (ref null 25)) (field f64)))
    (type (;42;) (array i16))
    (type (;43;) (sub (struct (field i16) (field i8) (field (ref null 31)) (field (mut i32)) (field i64) (field i8) (field i16) (field (mut nullref)) (field f64) (field i32) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field i64) (field i16))))
    (type (;44;) (sub (func (param f64) (result f32 f32 i64 externref funcref (ref null 14) f32))))
    (type (;45;) (sub final 12 (func (result (ref null 23) i32))))
    (type (;46;) (sub (struct (field i8) (field nullfuncref) (field i32) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)))))
    (type (;47;) (array (mut i16)))
    (type (;48;) (sub (struct (field f64) (field (mut i8)) (field anyref) (field f32) (field f64) (field f64) (field i16) (field (mut funcref)) (field i8) (field (mut i16)) (field i16) (field i64) (field (mut i16)) (field f64))))
    (type (;49;) (sub (func (param f64) (result i32))))
    (type (;50;) (sub (func (param f64 f64))))
    (type (;51;) (sub (array (mut i32))))
    (type (;52;) (struct (field i8) (field i16) (field i16) (field i16) (field (mut i32)) (field (mut i64)) (field (mut i8)) (field i32) (field f64) (field i16) (field i8) (field (mut i16)) (field exnref) (field i16) (field (mut i32)) (field (mut f64)) (field f64) (field (mut i8))))
    (type (;53;) (sub (array (mut i16))))
    (type (;54;) (struct (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field i8) (field (mut i16)) (field (mut i16))))
    (type (;55;) (func (param i64 i32 f32 i32) (result f64 f32 f32 exnref)))
    (type (;56;) (func))
    (type (;57;) (sub (struct (field (mut i16)) (field i16) (field (mut i64)) (field i8) (field anyref) (field i32) (field exnref) (field i16) (field i16) (field i8) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field i8) (field i8) (field (mut i8)))))
    (type (;58;) (sub (array i8)))
    (type (;59;) (func (param i64)))
    (type (;60;) (func (param i32) (result f64 f32)))
    (type (;61;) (sub (struct (field (mut i64)) (field i16) (field i8) (field i8))))
    (type (;62;) (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i8) (field (ref null 26)) (field (mut i8)) (field i32) (field i16) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i16) (field (mut f64)) (field i16) (field i32) (field i8) (field i16)))
    (type (;63;) (sub (array i8)))
    (type (;64;) (array i16))
    (type (;65;) (sub (array (mut (ref null 2)))))
    (type (;66;) (sub (struct (field i8) (field (mut i16)))))
    (type (;67;) (func))
  )
  (table (;0;) 51 (ref null 0))
  (global (;0;) (ref null 36) ref.null 36)
  (global (;1;) f64 f64.const 0x1.55c01c38e22ddp+385 (;=105200410824721840000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;))
  (export "" (global 1))
  (export "\u{b}" (table 0))
  (export "b" (table 0))
  (func (;0;) (type 59) (param i64)
    (local f32 f64 i32)
  )
  (data (;0;) "")
  (data (;1;) "")
  (data (;2;) "")
)
