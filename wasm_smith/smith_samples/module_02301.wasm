(module
  (rec
    (type (;0;) (struct (field (mut f64)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field f64) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field i8) (field i8) (field i32) (field (mut f32)) (field (mut i8)) (field (mut i8))))
    (type (;1;) (sub (func (param f32))))
    (type (;2;) (array i8))
    (type (;3;) (struct))
    (type (;4;) (struct (field (mut i16)) (field nullexternref) (field i16) (field (mut f32))))
    (type (;5;) (sub (func (param i32 i32 externref) (result f64 i32))))
    (type (;6;) (sub (struct (field f64) (field f32) (field (mut i8)) (field f32) (field (mut structref)) (field (mut i64)) (field i32) (field i64) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field (mut f64)) (field (mut i8)))))
    (type (;7;) (func))
    (type (;8;) (sub (func (result f64))))
    (type (;9;) (struct (field (mut i8)) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field i8) (field i8) (field i8) (field (mut i16)) (field i64) (field i16) (field (mut i16)) (field (mut i16)) (field f32)))
    (type (;10;) (func (param i32) (result i32 i32)))
    (type (;11;) (array exnref))
    (type (;12;) (sub (func (result f64 funcref i32))))
    (type (;13;) (struct (field i8) (field i8) (field (mut i8)) (field i16) (field (mut f64)) (field i32) (field i8) (field i8) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field exnref) (field i8) (field (mut i8)) (field (mut i8)) (field i64) (field i8) (field (mut f32)) (field (mut i64))))
    (type (;14;) (struct (field i8) (field eqref) (field (mut f32)) (field i8) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8)) (field exnref) (field (mut i16))))
    (type (;15;) (sub (array (mut i8))))
    (type (;16;) (func))
    (type (;17;) (func (param f64)))
    (type (;18;) (struct (field i8) (field i64) (field i8) (field i8) (field f64) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8))))
    (type (;19;) (array (mut i8)))
    (type (;20;) (sub (func (result i32 f32 f32))))
    (type (;21;) (sub (array f64)))
    (type (;22;) (sub (struct (field i32) (field i16))))
    (type (;23;) (sub (func (result f64))))
    (type (;24;) (array (mut i8)))
    (type (;25;) (sub (func (result eqref))))
    (type (;26;) (sub (array i16)))
    (type (;27;) (struct (field (mut i8)) (field (mut anyref)) (field i8) (field (mut i16)) (field (mut i8)) (field i32) (field i8) (field i16) (field (mut i8)) (field i16)))
    (type (;28;) (func (param i32 f64 f32 i31ref f32) (result f32 f32 i64)))
    (type (;29;) (sub (struct (field i16) (field i8) (field (mut i16)) (field i16) (field i32) (field i8) (field f32) (field (mut i8)))))
    (type (;30;) (func (param i32) (result i32)))
    (type (;31;) (sub (array (mut i8))))
    (type (;32;) (sub (struct (field i16) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i8)) (field i32) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i32)))))
    (type (;33;) (sub (func (param f64 i64 i64 f32 eqref) (result (ref null 31) (ref null 15)))))
    (type (;34;) (func (param f64 f64) (result f64 i32 structref i32 nullref)))
    (type (;35;) (sub (struct (field (mut (ref null 16))) (field (mut i8)) (field (mut i16)) (field (mut i64)) (field f32) (field i16))))
    (type (;36;) (sub (func (param i64 f64 i64) (result i64))))
    (type (;37;) (sub (array (mut arrayref))))
    (type (;38;) (sub (func)))
    (type (;39;) (func (result (ref null 24) i32)))
    (type (;40;) (func (param i32 f64 f64)))
    (type (;41;) (sub (struct (field i32) (field (mut i8)) (field (mut funcref)) (field i16) (field i16) (field i16) (field arrayref) (field (mut i16)))))
    (type (;42;) (sub (array i8)))
    (type (;43;) (array (mut i16)))
    (type (;44;) (func (result f32 f32 f64)))
    (type (;45;) (sub (array (mut i32))))
    (type (;46;) (sub (array (mut i8))))
    (type (;47;) (sub (struct (field i64))))
    (type (;48;) (array nullref))
    (type (;49;) (func))
    (type (;50;) (sub (func (param i32) (result i64))))
    (type (;51;) (sub (func)))
    (type (;52;) (array i32))
    (type (;53;) (sub (struct (field (mut f32)) (field (mut i64)) (field i64) (field i16) (field i32) (field (mut f32)) (field i16) (field (mut i8)) (field (mut i16)))))
    (type (;54;) (sub (func)))
    (type (;55;) (sub (func)))
    (type (;56;) (sub (array i8)))
    (type (;57;) (array i16))
    (type (;58;) (array (mut i64)))
    (type (;59;) (struct (field (mut i8)) (field (mut f64)) (field i16) (field (mut i8)) (field i16) (field (mut i64)) (field i8) (field (mut exnref))))
    (type (;60;) (array (mut i16)))
    (type (;61;) (sub (struct (field i16) (field (mut f32)) (field i16) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field i8) (field i16) (field i16) (field i16) (field (mut i16)) (field i16) (field funcref) (field (mut i8)))))
    (type (;62;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i16)) (field i32) (field i64) (field f64))))
  )
  (import "C" "" (table (;0;) 998914 (ref null 37)))
  (global (;0;) (mut f32) f32.const 0x1.2738e6p+29 (;=619125950;))
  (global (;1;) (mut i32) i32.const 0)
  (start 1)
  (func (;0;) (type 16)
    struct.new_default 47
    table.size 0
    br 0
    i32.extend8_s
    f32.const 0x1.ffp-141 (;=0.000000000000000000000000000000000000000000716;)
    i32.trunc_f32_u
    i32.or
    global.get 0
    global.get 0
    i32.trunc_sat_f32_s
    i32.extend8_s
    try_table (type 7) (catch_all 0) ;; label = @1
      global.get 0
      f32.ceil
      i32.trunc_sat_f32_s
      f32.const -0x1.fffffep+64 (;=-36893486000000000000;)
      i32.trunc_sat_f32_s
      f32.convert_i32_s
      i32.reinterpret_f32
      global.get 1
      i32.xor
      global.set 1
      return_call 0
      i32.ctz
      i64.const -7921766177043505131
      loop ;; label = @2
        try_table (type 12) (result f64 funcref i32) (catch_all 1 (;@1;)) (catch_all 2) (catch_all 2) (catch_all 2) ;; label = @3
          f64.const 0x0p+0 (;=0;)
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 54))
  (func (;2;) (type 12) (result f64 funcref i32)
    unreachable
  )
)
