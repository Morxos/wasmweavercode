(module
  (rec
    (type (;0;) (sub (struct (field i16) (field i32) (field i8) (field (mut i16)) (field eqref) (field i8))))
    (type (;1;) (sub (struct (field (mut i8)) (field i16))))
    (type (;2;) (struct (field (mut i8)) (field (mut i8)) (field i32) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16)))
    (type (;3;) (sub (struct (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i64)) (field f64) (field i64) (field (mut i8)) (field externref) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i8) (field f32) (field (mut i8)))))
    (type (;4;) (sub (struct (field (mut i8)) (field i8) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i8) (field i32) (field i16) (field i16) (field f64) (field i16) (field (mut externref)) (field i16) (field i8) (field (mut i8)))))
    (type (;5;) (sub (struct (field f32) (field (mut i64)) (field i16) (field i16) (field i8) (field i16) (field (mut f32)) (field (mut i16)) (field (mut i64)) (field i16) (field (mut i16)) (field i8) (field (mut structref)) (field (mut i8)))))
    (type (;6;) (sub (func)))
    (type (;7;) (struct (field (mut i8)) (field i8) (field i16) (field i8) (field (mut i8)) (field i8) (field i16) (field i64) (field eqref)))
    (type (;8;) (sub (func (result structref f64 i64))))
    (type (;9;) (sub (struct (field f32) (field (mut i8)) (field i16) (field (mut f64)) (field i8) (field (mut i32)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field (mut i8)) (field f32) (field i8) (field (mut i8)) (field (mut i16)))))
    (type (;10;) (array (mut i32)))
    (type (;11;) (func))
    (type (;12;) (sub (func (param i64))))
    (type (;13;) (array (mut i16)))
    (type (;14;) (sub (array (mut i16))))
    (type (;15;) (array (mut i8)))
    (type (;16;) (func (param i32 i32 f32 f32)))
    (type (;17;) (func (param anyref i64) (result structref f64)))
    (type (;18;) (func (param i31ref) (result f64 i64)))
    (type (;19;) (array (mut i32)))
    (type (;20;) (sub (struct (field i8) (field i8))))
    (type (;21;) (sub (array i16)))
    (type (;22;) (array i16))
    (type (;23;) (sub (func (param i31ref f32 i64))))
    (type (;24;) (sub (func (result i64))))
    (type (;25;) (struct (field i16)))
    (type (;26;) (sub (array (mut i64))))
    (type (;27;) (sub (array (mut f64))))
    (type (;28;) (array i8))
    (type (;29;) (func))
    (type (;30;) (sub (array (mut i8))))
    (type (;31;) (func (param i64 f64 arrayref f64 f64 f32)))
    (type (;32;) (sub (array i8)))
    (type (;33;) (sub (struct (field (mut i8)) (field i8) (field i16) (field (mut i16)) (field (mut i8)) (field (mut (ref null 24))) (field i16) (field (mut i16)) (field i64) (field i16) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field i8))))
    (type (;34;) (struct (field i32) (field i8) (field i8) (field i8) (field (mut i16)) (field (mut f64)) (field f64) (field (mut i16))))
    (type (;35;) (sub (func (result (ref null 5)))))
    (type (;36;) (sub (array f32)))
    (type (;37;) (struct (field f32) (field (mut i8)) (field i8) (field i32) (field i16) (field (mut i64)) (field i16) (field i64) (field (mut f32)) (field (mut i8)) (field i8) (field i16) (field (mut i64)) (field i16) (field (mut i32)) (field (mut i16)) (field (mut externref)) (field (mut f64)) (field i16)))
    (type (;38;) (func))
    (type (;39;) (struct (field (mut i16)) (field i64)))
    (type (;40;) (sub final 5 (struct (field f32) (field (mut i64)) (field i16) (field i16) (field i8) (field i16) (field (mut f32)) (field (mut i16)) (field (mut i64)) (field i16) (field (mut i16)) (field i8) (field (mut structref)) (field (mut i8)) (field (mut i8)) (field i16) (field i16))))
    (type (;41;) (func (param i64 nullref (ref null 33))))
    (type (;42;) (array i16))
    (type (;43;) (struct (field nullexternref) (field (mut nullexternref))))
    (type (;44;) (sub final 32 (array i8)))
    (type (;45;) (sub final 35 (func (result nullref))))
    (type (;46;) (sub (func (param f64))))
    (type (;47;) (sub (struct (field i16) (field (mut (ref null 5))) (field i8) (field (mut i32)))))
    (type (;48;) (array (mut i8)))
    (type (;49;) (sub (struct (field i8) (field (mut f64)) (field i8) (field i8) (field (mut f64)) (field i16) (field (mut i16)) (field i8) (field (mut i8)) (field f32) (field i8) (field i8) (field f64) (field (mut i8)) (field (mut i8)) (field (mut i32)) (field (mut i32)) (field i8))))
    (type (;50;) (struct (field (mut i64))))
    (type (;51;) (func))
    (type (;52;) (func (result (ref null 45) f64)))
    (type (;53;) (func (param f32 i32) (result f64)))
    (type (;54;) (sub (array (mut i16))))
    (type (;55;) (sub (array (mut i64))))
    (type (;56;) (sub (func (param f64 f64 f64) (result f32))))
    (type (;57;) (sub (func)))
    (type (;58;) (sub (func)))
  )
  (import "" "" (table (;0;) 0 667000 (ref null 48)))
  (memory (;0;) 12209)
  (export "" (table 0))
  (func (;0;) (type 29)
    (local f32 (ref null 17))
    f32.const -0x1.0676b6p-51 (;=-0.00000000000000045530197;)
    array.new_fixed 36 0
    br 0
    return_call 0
    ref.null 14
    ref.eq
    i32.popcnt
    array.new 36
    extern.convert_any
    i32.const -2049
    local.get 0
    local.tee 0
    i64.trunc_f32_s
    i32.wrap_i64
    block (type 45) (result nullref) ;; label = @1
      br 1
      block (type 8) (result structref f64 i64) ;; label = @2
        memory.size
        f32.const 0x1.efa59p+21 (;=4060338;)
        i32.trunc_sat_f32_s
        i32.store8 offset=202076874
        block (type 6) ;; label = @3
          br 3
          memory.size
          array.new_fixed 15 0
          call 0
          ref.null array
          try_table (type 35) (result (ref null 5)) (catch_all 0 (;@3;)) (catch_all 3) (catch_all 3) (catch_all 3) (catch_all 0 (;@3;)) (catch_all 0 (;@3;)) ;; label = @4
            table.size 0
            i32.extend16_s
            i32.extend8_s
            i64.extend_i32_s
            f64.reinterpret_i64
            call 0
            f64.neg
            table.size 0
            if (type 29) ;; label = @5
              block (type 11) ;; label = @6
                br 3 (;@3;)
                f64.const 0x1.7d87fff8p-1045 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003953162625;)
                i64.trunc_f64_s
                call 0
                f32.const -nan:0x7fff80 (;=NaN;)
                block (type 11) ;; label = @7
                  memory.size
                  f64.load offset=68155446 align=1
                  unreachable
                end
                unreachable
              end
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
