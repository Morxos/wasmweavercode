(module
  (rec
    (type (;0;) (sub (array (mut i16))))
    (type (;1;) (array (mut i8)))
    (type (;2;) (sub (func (param i64 i64))))
    (type (;3;) (sub (array i8)))
    (type (;4;) (func (result i32)))
    (type (;5;) (sub (struct (field (mut i8)) (field (mut i16)) (field i8) (field (mut i8)) (field f64) (field (mut anyref)) (field i16) (field (mut i16)) (field (mut externref)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i64)))))
    (type (;6;) (struct (field i8) (field i8) (field (mut i8)) (field f64) (field (mut i16)) (field i16) (field (mut i8)) (field i32) (field f64) (field (mut i16)) (field (mut i16)) (field i16) (field (mut i16)) (field i16) (field f32)))
    (type (;7;) (sub (array (mut i16))))
    (type (;8;) (sub (func (param f64 f32 f64 eqref))))
    (type (;9;) (array i8))
    (type (;10;) (sub (func (result i64 i64))))
    (type (;11;) (sub (func (param i32 i64))))
    (type (;12;) (func))
    (type (;13;) (sub (array (mut f64))))
    (type (;14;) (sub (struct (field (mut i8)) (field (mut i16)) (field funcref) (field (mut f32)) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field i8) (field i8) (field (mut f32)) (field (mut i8)) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i8) (field i8))))
    (type (;15;) (sub (struct (field (mut i8)) (field (mut i64)) (field (mut i8)))))
    (type (;16;) (array (mut i8)))
    (type (;17;) (sub (struct (field (mut i8)) (field (mut i32)) (field (mut f32)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i8)))))
    (type (;18;) (sub (func (result i64 funcref i32))))
    (type (;19;) (sub (func)))
    (type (;20;) (sub (struct (field (mut i16)) (field f32) (field i16) (field (mut i16)) (field (mut i8)) (field i64) (field i16) (field (mut f64)) (field (mut i8)) (field (mut i64)) (field (mut f64)) (field i32) (field (mut f32)) (field i32) (field (mut i8)) (field (mut i32)) (field (mut i64)) (field nullexternref) (field (mut i16)) (field (mut f64)))))
    (type (;21;) (sub (struct (field f64) (field i8) (field (mut anyref)) (field i16) (field i8) (field i8) (field (mut eqref)) (field (mut i16)) (field i16) (field i8) (field (mut i8)) (field (mut i16)))))
    (type (;22;) (sub 14 (struct (field (mut i8)) (field (mut i16)) (field (ref null 8)) (field (mut f32)) (field (mut i8)) (field (mut i64)) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i32)) (field i8) (field i8) (field (mut f32)) (field (mut i8)) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field f32) (field f32) (field f64) (field (mut f32)) (field (mut i8)))))
    (type (;23;) (array i16))
    (type (;24;) (struct (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut f32)) (field i8) (field (mut f32)) (field (mut i64)) (field i16)))
    (type (;25;) (sub (struct (field (mut f64)) (field i64) (field (mut arrayref)) (field i8) (field (mut f64)) (field i16))))
    (type (;26;) (struct (field i8) (field (mut i64)) (field (mut i64)) (field i8) (field (mut i32)) (field (mut i8)) (field i8) (field i16)))
    (type (;27;) (sub 13 (array (mut f64))))
    (type (;28;) (sub (struct (field (mut i16)) (field i16) (field (mut i32)))))
    (type (;29;) (sub final 18 (func (result i64 (ref null 4) i32))))
    (type (;30;) (sub (struct (field i8) (field (mut eqref)) (field (mut i8)) (field (mut i8)))))
    (type (;31;) (array (mut i16)))
    (type (;32;) (array (mut f32)))
    (type (;33;) (struct (field (mut i8)) (field (ref null 21)) (field i32) (field i16) (field i8) (field funcref) (field (mut eqref)) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field structref) (field (mut i8)) (field i8) (field i64) (field (mut i32)) (field (mut i8)) (field i16) (field i16)))
    (type (;34;) (array (mut i8)))
    (type (;35;) (sub (array i8)))
    (type (;36;) (func (result f32)))
    (type (;37;) (sub (array f32)))
    (type (;38;) (sub (array (mut f32))))
    (type (;39;) (sub (func)))
    (type (;40;) (sub (struct (field i32) (field i16) (field (mut nullref)) (field (mut f64)) (field (mut i16)) (field f64) (field (mut i16)) (field (mut i16)) (field i16) (field i8) (field i16) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field (mut funcref)) (field i16))))
    (type (;41;) (sub (func (param f32))))
    (type (;42;) (sub (array i8)))
  )
  (table (;0;) 1 197327 arrayref)
  (global (;0;) f32 f32.const 0x1.c1828p+119 (;=1166994100000000000000000000000000000;))
  (export "" (func 1))
  (func (;0;) (type 8) (param f64 f32 f64 eqref)
    (local (ref null 6) f32 f32)
    call 1
    return_call 1
    try_table (type 4) (result i32) ;; label = @1
      table.size 0
      loop (type 12) ;; label = @2
        try_table (type 36) (result f32) (catch_all 0 (;@2;)) (catch_all 2) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 2) (catch_all 0 (;@2;)) ;; label = @3
          data.drop 0
          global.get 0
          f32.abs
          f32.const 0x1.9391cap+69 (;=930567900000000000000;)
          call 1
          f32.min
          br 0 (;@3;)
          try_table (type 12) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 3) (catch_all 1 (;@2;)) (catch_all 3) ;; label = @4
            global.get 0
            try_table (type 41) (param f32) (catch_all 0 (;@4;)) (catch_all 2 (;@2;)) (catch_all 0 (;@4;)) (catch_all 0 (;@4;)) ;; label = @5
              i32.const -536870912
              i64.extend_i32_u
              loop (type 10) (result i64 i64) ;; label = @6
                call 1
                block ;; label = @7
                  try_table (type 29) (result i64 (ref null 4) i32) (catch_all 3 (;@4;)) (catch_all 3 (;@4;)) (catch_all 0 (;@7;)) (catch_all 5 (;@2;)) (catch_all 1 (;@6;)) (catch_all 0 (;@7;)) (catch_all 1 (;@6;)) (catch_all 2 (;@5;)) ;; label = @8
                    i32.const 1024
                    i32.extend8_s
                    f32.convert_i32_s
                    i32.trunc_sat_f32_u
                    block (type 39) ;; label = @9
                      try_table (type 29) (result i64 (ref null 4) i32) (catch_all 3 (;@6;)) (catch_all 0 (;@9;)) (catch_all 3 (;@6;)) ;; label = @10
                        global.get 0
                        local.get 6
                        i32.trunc_sat_f32_s
                        f64.convert_i32_u
                        f64.const -0x1.aece816f0c68ep+245 (;=-95146185891254200000000000000000000000000000000000000000000000000000000000;)
                        local.set 0
                        i64.trunc_f64_u
                        f64.const -0x1.5f00e99a4e6cp-409 (;=-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001037058689840319;)
                        loop (result f32) ;; label = @11
                          i64.const 6665151025965091351
                          global.get 0
                          block (type 36) (result f32) ;; label = @12
                            data.drop 0
                            f32.const 0x1.a71f7p-73 (;=0.00000000000000000000017499949;)
                            f32.trunc
                            try_table (catch_all 7 (;@5;)) (catch_all 12) (catch_all 12) (catch_all 7 (;@5;)) (catch_all 6 (;@6;)) (catch_all 7 (;@5;)) ;; label = @13
                              i32.const 1431025769
                              i64.extend_i32_s
                              f64.convert_i64_u
                              f32.const 0x1.ffcp-139 (;=0.000000000000000000000000000000000000000002868;)
                              data.drop 0
                              block (type 39) ;; label = @14
                                global.get 0
                                i32.trunc_f32_s
                                block (type 10) (result i64 i64) ;; label = @15
                                  loop (type 10) (result i64 i64) ;; label = @16
                                    return_call 1
                                    table.size 0
                                    f64.convert_i32_u
                                    f64.neg
                                    f64.floor
                                    i32.trunc_sat_f64_s
                                    i32.clz
                                    array.new_fixed 7 0
                                    f64.const 0x0p+0 (;=0;)
                                    unreachable
                                  end
                                end
                                unreachable
                              end
                              unreachable
                            end
                          end
                          unreachable
                        end
                        unreachable
                      end
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
          end
          unreachable
        end
        unreachable
      end
    end
    unreachable
  )
  (func (;1;) (type 12))
  (data (;0;) "")
)
