(module
  (rec
    (type (;0;) (func (param i32) (result i32 i64)))
    (type (;1;) (sub (array (mut i64))))
    (type (;2;) (struct (field i16) (field (mut f32)) (field i32) (field i32) (field i8) (field i8) (field arrayref)))
    (type (;3;) (sub (func (param f64))))
    (type (;4;) (func (param arrayref f64)))
    (type (;5;) (sub (array (mut i16))))
    (type (;6;) (sub (struct (field f64) (field i8) (field i8) (field (mut i8)) (field (mut i32)) (field i16) (field f32) (field (mut i8)) (field (mut i16)))))
    (type (;7;) (sub (func (param i32))))
    (type (;8;) (func (param i32 i64)))
    (type (;9;) (struct (field i8) (field (mut i16)) (field f32) (field f32) (field (mut i8)) (field (mut i8)) (field (mut i16))))
    (type (;10;) (sub (func (param eqref) (result f64))))
    (type (;11;) (sub (struct (field i8) (field i16) (field i32) (field (mut i16)) (field i16) (field (mut i16)) (field (mut i8)) (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field (mut i16)) (field i16) (field (mut i8)))))
    (type (;12;) (struct (field i8) (field f64) (field (mut i16)) (field (mut i16)) (field f64) (field i8) (field (mut f32)) (field i8) (field (mut i64))))
    (type (;13;) (func))
    (type (;14;) (array (mut i16)))
    (type (;15;) (sub (array i8)))
    (type (;16;) (struct (field i16) (field i16) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i64))))
    (type (;17;) (sub (struct (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut i64)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field (mut eqref)) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field i16) (field i8))))
    (type (;18;) (sub (struct (field i32) (field i64) (field (mut i16)) (field (mut i8)) (field i16) (field i8) (field i8) (field (mut i8)) (field (mut i32)) (field i16) (field (mut i16)) (field i16) (field (mut i8)) (field f64))))
    (type (;19;) (struct (field (mut i8)) (field i8) (field (mut i8)) (field i32) (field i64) (field (mut f32)) (field (mut f64)) (field i8) (field (mut i8)) (field i16) (field (mut i8))))
    (type (;20;) (struct (field (mut i16)) (field i16) (field (mut f64)) (field (mut i16)) (field (mut i32))))
    (type (;21;) (sub (array i64)))
    (type (;22;) (struct (field (mut i16)) (field i16) (field (mut f64))))
    (type (;23;) (struct (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field i16) (field f32) (field i8) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field (mut i8)) (field i8) (field f64)))
    (type (;24;) (sub (struct (field (mut i64)) (field i8) (field (mut f64)) (field (mut i16)) (field (mut i8)) (field (mut i32)) (field (mut i8)) (field i16) (field (ref null 4)) (field (mut i32)) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field (mut f32)))))
    (type (;25;) (sub (array (mut i8))))
  )
  (import "\u{19b9}x\u{7}\u{e}" "" (table (;0;) i64 1811 (ref null 23)))
  (global (;0;) (mut i32) i32.const 594096266)
  (global (;1;) (mut i32) i32.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (global (;3;) (mut i32) i32.const 0)
  (global (;4;) (mut i64) i64.const 0)
  (elem (;0;) declare anyref)
  (elem (;1;) anyref)
  (func (;0;) (type 0) (param i32) (result i32 i64)
    (local f32)
    global.get 0
    i32.clz
    i32.extend8_s
    f64.convert_i32_s
    i64.trunc_sat_f64_u
    block (result eqref) ;; label = @1
      f64.const -0x1.715cae27e5e13p+697 (;=-948678948894064500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
      i64.trunc_f64_s
      array.new_fixed 21 0
      br_on_cast_fail 0 (;@1;) (ref 21) (ref 21)
      ref.null noextern
      table.size 0
      f32.convert_i64_u
      f64.const -0x1.4311dddcdd121p+930 (;=-11453872745938763000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
      i32.trunc_sat_f64_u
      i32.clz
      i32.ctz
      i32.eqz
      i32.clz
      return_call 0
      f64.const 0x1.defa07d74c134p-646 (;=0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006407626769291747;)
      i64.trunc_sat_f64_u
      nop
      i64.rotr
      table.get 0
      ref.as_non_null
      f32.const 0x1.222222p-93 (;=0.00000000000000000000000000011443742;)
      i32.trunc_sat_f32_u
      loop (type 13) ;; label = @2
        try_table (result (ref null 19)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) ;; label = @3
          f64.const 0x1.04ca89d523996p+315 (;=67998846304757540000000000000000000000000000000000000000000000000000000000000000000000000000000;)
          f64.const -0x1.53e3153e3ce6cp+406 (;=-219418318769241500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
          f64.nearest
          try_table (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) (catch_all 1 (;@2;)) ;; label = @4
            f64.const -nan:0xffeffffffffff (;=NaN;)
            f64.floor
            f64.trunc
            global.get 0
            i32.eqz
            i64.extend_i32_u
            struct.new_default 9
            br_on_null 0 (;@4;)
            f64.const 0x1.1f1b269bb52fp+830 (;=8029690239848320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
            i32.const 1957208292
            f32.convert_i32_u
            global.get 0
            i64.const -33
            f32.convert_i64_s
            local.get 0
            f32.convert_i32_s
            f32.add
            global.get 0
            f32.const 0x1.ec4bbap+122 (;=10224584000000000000000000000000000000;)
            f32.nearest
            global.get 0
            struct.new_default 19
            i64.const -72340172838076674
            f64.const -0x1.91bbc946f19b1p-690 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030549289791309432;)
            f64.trunc
            i32.trunc_sat_f64_s
            local.tee 0
            return_call 0
            i64.extend8_s
            f32.convert_i64_s
            i32.const 1482912474
            f32.const 0x1.aaaaaap+43 (;=14660155000000;)
            ref.null 14
            struct.new_default 20
            br_on_null 3 (;@1;)
            i32.const -999252230
            block (type 0) (param i32) (result i32 i64) ;; label = @5
              loop (type 13) ;; label = @6
                f32.const 0x1.d6368cp-46 (;=0.000000000000026102069;)
                local.tee 1
                f64.const 0x1.3866f7000e319p+888 (;=2518316302011439700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                i64.reinterpret_f64
                i64.eqz
                br_if 4 (;@2;)
                struct.new_default 2
                ref.null 14
                block (type 10) (param eqref) (result f64) ;; label = @7
                  br_on_non_null 6 (;@1;)
                  f64.const -nan:0xfe00000000000 (;=NaN;)
                  i32.trunc_sat_f64_u
                  f64.const -0x1.bf2335d3d06aep-189 (;=-0.0000000000000000000000000000000000000000000000000000000022260349946328667;)
                  i32.trunc_f64_s
                  ref.i31
                  extern.convert_any
                  i64.const 7312893530952298078
                  f64.convert_i64_u
                  i32.trunc_sat_f64_u
                  i32.eqz
                  ref.null 14
                  loop (type 13) ;; label = @8
                    loop ;; label = @9
                      try_table (type 13) (catch_all 1 (;@8;)) (catch_all 7 (;@2;)) ;; label = @10
                        elem.drop 0
                        local.get 0
                        try_table (result (ref null 0)) (catch_all 4 (;@6;)) ;; label = @11
                          elem.drop 1
                          ref.null 0
                        end
                        drop
                        global.get 1
                        i32.xor
                        global.set 1
                      end
                    end
                  end
                  drop
                  global.get 1
                  i32.xor
                  global.set 1
                  drop
                  global.get 1
                  i32.xor
                  global.set 1
                  f64.const 0x1.p-1065 (;=0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000253;)
                end
                i64.reinterpret_f64
                global.get 2
                i64.xor
                global.set 2
                drop
                i32.reinterpret_f32
                global.get 3
                i32.xor
                global.set 3
              end
              i64.const 1048576
            end
            global.get 4
            i64.xor
            global.set 4
            global.get 1
            i32.xor
            global.set 1
            drop
            drop
            i32.reinterpret_f32
            global.get 3
            i32.xor
            global.set 3
            global.get 1
            i32.xor
            global.set 1
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
            drop
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
)
