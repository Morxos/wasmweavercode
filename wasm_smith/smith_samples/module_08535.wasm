(module
  (rec
    (type (;0;) (sub (func (param f64))))
    (type (;1;) (func (param f32)))
    (type (;2;) (sub (func)))
    (type (;3;) (struct (field (mut i8)) (field i8) (field (mut i8))))
    (type (;4;) (func (param f64 i32) (result i32 i64)))
    (type (;5;) (sub 0 (func (param f64))))
    (type (;6;) (func (param i64 i32)))
    (type (;7;) (func))
    (type (;8;) (array i8))
    (type (;9;) (sub (array i8)))
    (type (;10;) (struct (field (mut i16)) (field i32) (field (mut i16)) (field (mut i8)) (field (mut i32)) (field (mut i16)) (field i8) (field (mut i64)) (field (mut i8)) (field i8) (field (mut i8))))
    (type (;11;) (sub final 9 (array i8)))
    (type (;12;) (sub (array (mut i16))))
    (type (;13;) (sub (array (mut i32))))
    (type (;14;) (sub (struct (field i8) (field i16) (field i16) (field i16))))
    (type (;15;) (struct (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i64)) (field i8) (field (mut i16)) (field f32) (field i8) (field (mut f32)) (field (mut funcref)) (field f32) (field (mut i8)) (field i8) (field (mut anyref)) (field (mut i16)) (field f64) (field i16)))
    (type (;16;) (func (param f64)))
    (type (;17;) (struct (field i16) (field i16) (field i16) (field (mut i8)) (field f64) (field funcref) (field i16) (field i8) (field i16) (field i16) (field i16) (field i8) (field (mut i32)) (field i8)))
    (type (;18;) (struct (field i8) (field i16) (field (mut i16)) (field f32) (field (mut i16)) (field i8) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field i8) (field i16) (field (mut i8)) (field i8) (field (mut i64)) (field (mut i16))))
    (type (;19;) (sub (struct (field (mut i8)) (field f64) (field (mut f32)) (field (mut i16)) (field i16) (field (mut f64)) (field i16) (field (mut i16)) (field (mut i64)) (field (mut i8)) (field i16) (field i8) (field (mut i8)) (field (mut f32)) (field i8) (field nullexternref))))
    (type (;20;) (sub (array (mut i16))))
    (type (;21;) (sub (struct (field f64) (field i8) (field (mut i32)) (field i8))))
    (type (;22;) (struct (field (mut i8)) (field (mut f64)) (field (mut i8)) (field i8)))
    (type (;23;) (array f32))
    (type (;24;) (sub (struct (field (mut i8)) (field i8) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field (mut i8)))))
    (type (;25;) (func (param f32 i64)))
    (type (;26;) (struct (field (mut i64)) (field i8) (field anyref) (field i16) (field i16) (field i64) (field i8) (field i8) (field i8) (field i8) (field i64) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut (ref null 2))) (field i16) (field i32) (field i64) (field i64)))
    (type (;27;) (sub (struct (field i16) (field i32))))
    (type (;28;) (struct (field f64) (field (mut i8)) (field i8) (field (mut i8)) (field (mut f32)) (field (mut i64)) (field i64) (field i8) (field i32) (field (mut i32)) (field i8) (field i16)))
    (type (;29;) (sub (array (mut i64))))
    (type (;30;) (sub (struct (field (mut i16)) (field i8) (field i8) (field i8) (field (mut i8)) (field i16) (field i8) (field f64) (field i16) (field (mut i16)) (field (mut i16)) (field f64) (field i64) (field (mut (ref null 4))) (field i16) (field (mut i16)))))
    (type (;31;) (struct (field (mut i8)) (field f64)))
    (type (;32;) (struct (field (mut i16)) (field (mut i8)) (field (mut i64)) (field i8) (field i32) (field (mut i32)) (field (mut i16)) (field (mut f64)) (field i16) (field (mut i16)) (field (mut f64)) (field (mut i32)) (field i8) (field funcref)))
    (type (;33;) (array f64))
    (type (;34;) (sub (func (result f32 i64 i64))))
  )
  (import "j?<" "" (tag (;0;) (type 6) (param i64 i32)))
  (import "N" "" (table (;0;) 23 eqref))
  (memory (;0;) i64 576)
  (tag (;1;) (type 2))
  (global (;0;) (mut i64) i64.const 0)
  (global (;1;) (mut i32) i32.const 0)
  (global (;2;) (mut i64) i64.const 0)
  (export "H" (func 2))
  (elem (;0;) (table 0) (i32.const 16) (ref null 12))
  (elem (;1;) (table 0) (i32.const 0) structref (ref.null 30) (ref.null struct) (ref.null struct) (ref.null 30) (ref.null 10))
  (func (;0;) (type 5) (param f64)
    (local i64 f64 f32)
    try_table (catch 1 0) (catch_all 0) (catch 1 0) (catch 1 0) ;; label = @1
      block (type 2) ;; label = @2
        try_table (type 2) (catch 1 1 (;@1;)) (catch 1 0 (;@2;)) (catch_all 1 (;@1;)) ;; label = @3
          try_table (result f64) (catch 1 2 (;@1;)) (catch_all 2 (;@1;)) (catch 1 2 (;@1;)) (catch_all 2 (;@1;)) (catch_all 1 (;@2;)) (catch 1 3) (catch_all 1 (;@2;)) (catch 1 3) ;; label = @4
            elem.drop 0
            memory.size
            local.set 1
            block ;; label = @5
              elem.drop 1
              block ;; label = @6
                memory.size
                i32.wrap_i64
                br_table 0 (;@6;) 1 (;@5;) 3 (;@3;) 4 (;@2;) 5 (;@1;) 6 4 (;@2;)
                block (type 34) (result f32 i64 i64) ;; label = @7
                  struct.new_default 18
                  elem.drop 0
                  table.size 0
                  table.get 0
                  br_on_null 1 (;@6;)
                  ref.eq
                  i32.ctz
                  loop ;; label = @8
                  end
                  i32.eqz
                  f32.reinterpret_i32
                  i32.const -1009370248
                  i32.const 2144699
                  i32.lt_s
                  f64.const 0x1p-52 (;=0.0000000000000002220446049250313;)
                  i64.trunc_sat_f64_s
                  local.set 1
                  f32.convert_i32_s
                  memory.size
                  memory.size
                  i64.extend16_s
                  i64.xor
                  block ;; label = @8
                  end
                  global.get 0
                  i64.xor
                  global.set 0
                  i32.reinterpret_f32
                  global.get 1
                  i32.xor
                  global.set 1
                  i64.const -4097046663434465586
                  i64.const -4523692032264078882
                end
                global.get 0
                i64.xor
                global.set 0
                global.get 0
                i64.xor
                global.set 0
                i32.reinterpret_f32
                global.get 1
                i32.xor
                global.set 1
              end
            end
            f64.const 0x1.578091b044b3ep-889 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003251048447278141;)
          end
          i64.reinterpret_f64
          global.get 2
          i64.xor
          global.set 2
        end
      end
    end
  )
  (func (;1;) (type 5) (param f64)
    table.size 0
    br_table 0 0
    f32.const 0x1.7p-145 (;=0.000000000000000000000000000000000000000000032;)
    memory.size
    i32.load8_u offset=17632368
    i64.extend_i32_u
    call 2
    throw 1
    br 0
    loop (type 2) ;; label = @1
      nop
    end
    elem.drop 0
    loop (result f32) ;; label = @1
      br 1
      f64.const -0x1p+993 (;=-83711609936427130000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
      f64.neg
      array.new_fixed 33 0
      extern.convert_any
      ref.test (ref extern)
      i32.extend8_s
      f64.const -0x1.d3d694e479589p-551 (;=-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024792944749099662;)
      elem.drop 1
      f32.demote_f64
      i64.trunc_f32_s
      i64.load offset=18446744073709551615 align=1
      i32.load8_u offset=17342068
      i32.rem_s
      i32.ctz
      try_table (result i32) (catch 1 0 (;@1;)) (catch_all 0 (;@1;)) (catch_all 1) (catch 1 0 (;@1;)) ;; label = @2
        table.size 0
        i64.extend_i32_u
        i64.eqz
        f64.convert_i32_u
        i64.trunc_f64_u
        i64.const 56
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;2;) (type 25) (param f32 i64))
)
