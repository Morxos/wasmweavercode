(module
  (rec
    (type (;0;) (sub (struct (field i16) (field i64) (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field i16) (field i8) (field i16))))
    (type (;1;) (sub (struct (field (mut i64)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field i16) (field (mut i8)) (field i16) (field i8) (field (mut i16)) (field i8) (field i64) (field (mut i8)) (field i8) (field (mut i64)) (field i32) (field f64) (field (mut i64)))))
    (type (;2;) (func (result externref i31ref f32)))
    (type (;3;) (sub (struct (field i64) (field i8) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field nullexternref) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field i16))))
    (type (;4;) (sub (func)))
    (type (;5;) (func (result f64 f32 f32)))
    (type (;6;) (sub (func (param i32 i32))))
    (type (;7;) (struct (field (mut (ref null 6))) (field i8) (field (mut i16)) (field (mut f64)) (field (mut f32)) (field i32) (field (mut i8)) (field i64) (field (mut i16)) (field (mut i8)) (field i8) (field (mut eqref)) (field (mut i16)) (field (mut i8)) (field i16) (field (mut f32))))
    (type (;8;) (func (result f64 exnref (ref null 7))))
    (type (;9;) (func))
    (type (;10;) (array i16))
    (type (;11;) (sub (array nullref)))
    (type (;12;) (struct (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field i16) (field (mut i8)) (field i8) (field (mut i16)) (field (mut exnref)) (field (mut i16)) (field (mut i16)) (field i16) (field i16) (field i8) (field i8) (field i8)))
    (type (;13;) (sub (func (param f64 f64 f32 (ref null 2) f64 f64 i32 f64 i64))))
    (type (;14;) (sub (struct (field (mut i32)) (field (mut i8)) (field i64) (field (mut i8)) (field (mut i8)) (field i8) (field i64))))
    (type (;15;) (func (param i64 f32 structref) (result f64)))
    (type (;16;) (sub (struct (field f64) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field i32) (field f32) (field (mut i8)) (field i32))))
    (type (;17;) (func (result i64)))
    (type (;18;) (array (mut i8)))
    (type (;19;) (func))
    (type (;20;) (func (param f32)))
    (type (;21;) (struct (field f32) (field (mut i64)) (field (mut f32)) (field structref) (field i16) (field f64) (field f32) (field i8) (field i64) (field i8) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i64)) (field (mut i16))))
    (type (;22;) (array f32))
    (type (;23;) (array (mut i16)))
    (type (;24;) (struct (field i16) (field (mut i64)) (field i8) (field (mut i16)) (field (mut i16)) (field (mut f32)) (field (mut i16))))
    (type (;25;) (struct (field (mut f32)) (field (mut i8)) (field i8) (field (mut i8)) (field i16) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field (mut i32)) (field (mut i16)) (field i8) (field (mut anyref)) (field i16) (field i8) (field i8)))
    (type (;26;) (sub (func (result arrayref i32))))
    (type (;27;) (struct (field (mut arrayref)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field i32) (field (mut nullexternref)) (field (mut i64)) (field f64)))
    (type (;28;) (sub (struct (field i8) (field i16) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i64)) (field i64) (field (mut i64)) (field (mut i64)) (field (mut i32)))))
    (type (;29;) (sub (func)))
    (type (;30;) (func (param f32 i64 f64 f32 i64) (result f32)))
    (type (;31;) (sub (array i16)))
    (type (;32;) (struct (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field i16) (field i16) (field i16) (field i8) (field i8) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field (mut f32)) (field (mut f64)) (field i64)))
    (type (;33;) (sub (array i8)))
    (type (;34;) (sub (array (mut i32))))
    (type (;35;) (func (result f32 i64)))
    (type (;36;) (sub (func (param i32) (result i64 i32 f64))))
    (type (;37;) (func (param f32)))
    (type (;38;) (sub (func (result f64))))
    (type (;39;) (sub 16 (struct (field f64) (field i16) (field (mut i16)) (field i16) (field (mut i16)) (field i32) (field f32) (field (mut i8)) (field i32) (field (mut i16)))))
    (type (;40;) (array (mut f32)))
    (type (;41;) (sub (array (mut i16))))
    (type (;42;) (array (mut i16)))
    (type (;43;) (struct (field (mut i8)) (field i8) (field (mut i16)) (field (mut f32)) (field (mut i8)) (field (mut i16))))
  )
  (import "" "" (tag (;0;) (type 4)))
  (table (;0;) i64 8107 893392 nullref)
  (memory (;0;) i64 0)
  (tag (;1;) (type 13) (param f64 f64 f32 (ref null 2) f64 f64 i32 f64 i64))
  (tag (;2;) (type 29))
  (global (;0;) f32 f32.const -0x1.7b4bd4p+74 (;=-27987120000000000000000;))
  (start 0)
  (func (;0;) (type 19)
    (local i64 i32)
    f64.const 0x0p+0 (;=0;)
    global.get 0
    call 1
    i32.trunc_f32_u
    if (type 8) (result f64 exnref (ref null 7)) ;; label = @1
      return_call 0
      loop (type 35) (result f32 i64) ;; label = @2
        br 2
        table.size 0
        f32.convert_i64_s
        memory.size
        table.size 0
        i64.load32_u offset=18446744073709551615 align=2
        table.get 0
        try_table (type 5) (result f64 f32 f32) (catch 0 2) (catch 0 0 (;@2;)) (catch 0 2) (catch_all 2) (catch 2 0 (;@2;)) (catch_all 2) ;; label = @3
          f32.const -nan:0x7ffbff (;=NaN;)
          f32.const 0x0p+0 (;=0;)
          f32.nearest
          f32.add
          i32.reinterpret_f32
          local.get 1
          return_call 0
          i32.mul
          ref.null 12
          memory.size
          global.get 0
          f32.const 0x1.fffp-137 (;=0.000000000000000000000000000000000000000011478;)
          f32.sqrt
          f32.const -0x1.04eef4p+106 (;=-82693100000000000000000000000000;)
          i32.const 16384
          f64.convert_i32_s
          f64.const -nan:0xffffffffffffb (;=NaN;)
          i64.trunc_f64_s
          f64.convert_i64_u
          f64.ne
          br_table 1 (;@2;) 3 1 (;@2;)
          f32.ge
          call 1
          i32.trunc_sat_f32_u
          f32.const -0x1.a2e96p-118 (;=-0.0000000000000000000000000000000000049242824;)
          i32.trunc_f32_s
          local.set 1
          memory.size
          i32.load16_s
          i32.xor
          loop (type 8) (result f64 exnref (ref null 7)) ;; label = @4
            memory.size
            block ;; label = @5
              i64.const -65536
              f32.convert_i64_u
              call 2
              array.new_fixed 34 0
              memory.size
              return_call 0
              local.set 0
              struct.new_default 43
              br 0 (;@5;)
              loop ;; label = @6
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    else
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 5) (result f64 f32 f32)
    unreachable
  )
  (func (;2;) (type 26) (result arrayref i32)
    unreachable
  )
  (func (;3;) (type 36) (param i32) (result i64 i32 f64)
    unreachable
  )
)
