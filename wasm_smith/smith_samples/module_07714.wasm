(module
  (rec
    (type (;0;) (func (param i32 i64 f32 eqref arrayref)))
    (type (;1;) (sub (array i16)))
    (type (;2;) (array i8))
    (type (;3;) (sub (struct (field i16) (field (mut i64)))))
    (type (;4;) (sub (func (param i32))))
    (type (;5;) (array i16))
    (type (;6;) (func (param f64)))
    (type (;7;) (func (param f64) (result externref i64 f64)))
    (type (;8;) (sub (array (mut i8))))
    (type (;9;) (sub (array (mut i16))))
    (type (;10;) (sub (array i8)))
    (type (;11;) (sub (array i8)))
    (type (;12;) (sub (array (mut i8))))
    (type (;13;) (array nullref))
    (type (;14;) (array i64))
    (type (;15;) (sub (array (mut i64))))
    (type (;16;) (sub (struct (field (mut i64)) (field (mut f32)) (field (mut i32)) (field (mut (ref null 9))) (field (mut i16)) (field (mut f64)))))
    (type (;17;) (sub (func (param (ref null 4)) (result f32 f32 i64))))
    (type (;18;) (sub (struct (field i8) (field (mut i16)) (field (mut f32)))))
    (type (;19;) (func (result f32)))
    (type (;20;) (sub (array i8)))
    (type (;21;) (func (result f64)))
    (type (;22;) (func))
    (type (;23;) (struct (field (mut f32)) (field (mut i64)) (field i16) (field i16) (field i16) (field (mut i16)) (field i8) (field i8) (field (mut f64)) (field i32) (field i8) (field i8) (field i8) (field i8)))
    (type (;24;) (sub (struct (field i16) (field (mut nullfuncref)) (field (mut (ref null 21))) (field i16))))
    (type (;25;) (array (mut i8)))
    (type (;26;) (array i32))
    (type (;27;) (sub (array (mut f64))))
    (type (;28;) (sub (array (mut i16))))
    (type (;29;) (struct (field (mut i16)) (field (mut i8)) (field i32) (field f32) (field (mut i16)) (field i8) (field (mut i16)) (field arrayref) (field (mut i8)) (field i8) (field (mut i32)) (field (mut i64)) (field i8) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i64)) (field (mut i64))))
    (type (;30;) (array i8))
    (type (;31;) (array f64))
    (type (;32;) (sub (struct (field i8) (field (mut i32)) (field i16) (field i16) (field i16) (field i16))))
    (type (;33;) (sub (struct (field (mut i8)))))
    (type (;34;) (array i16))
    (type (;35;) (sub (array (mut (ref null 2)))))
    (type (;36;) (sub (struct (field f64) (field (mut f64)) (field f64) (field i8) (field i8) (field i16) (field (mut i8)) (field i8) (field i8))))
    (type (;37;) (sub (array i32)))
    (type (;38;) (struct (field (mut i16))))
    (type (;39;) (struct (field (mut f32)) (field i8) (field (ref null 4)) (field (mut i16)) (field i32) (field i16) (field i8) (field i8) (field i16) (field (mut i16)) (field i32) (field (mut f64))))
    (type (;40;) (array i16))
    (type (;41;) (sub (func (param i64))))
    (type (;42;) (sub (struct (field (mut i16)) (field i8) (field i8) (field i8) (field i16) (field (mut i8)) (field i16) (field (mut (ref null 28))) (field (mut i8)) (field i16) (field f32) (field (mut i8)) (field i8) (field i16) (field i8) (field (mut arrayref)) (field i64) (field (mut i64)) (field (mut i8)))))
    (type (;43;) (sub (array i32)))
    (type (;44;) (sub 28 (array (mut i16))))
    (type (;45;) (sub (struct (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut eqref)) (field i16) (field f64) (field (mut i32)) (field (mut i8)) (field i16) (field i16) (field (mut i32)) (field (mut i16)) (field i8) (field i8) (field f32) (field (mut i16)) (field i16))))
  )
  (memory (;0;) 0 2729 shared)
  (tag (;0;) (type 41) (param i64))
  (tag (;1;) (type 41) (param i64))
  (tag (;2;) (type 22))
  (global (;0;) (mut f32) f32.const -0x1.1f3328p+5 (;=-35.89998;))
  (global (;1;) (mut f32) f32.const 0x1.73f698p-63 (;=0.00000000000000000015753257;))
  (global (;2;) (mut f32) f32.const -0x1.cc941ep-112 (;=-0.00000000000000000000000000000000034650081;))
  (global (;3;) i32 i32.const 817251510)
  (export "2s" (global 3))
  (elem (;0;) structref (ref.null 45))
  (func (;0;) (type 4) (param i32)
    struct.new_default 38
    f32.const 0x1.dbf6c4p-81 (;=0.0000000000000000000000007689612;)
    f32.const -0x1.649cacp+55 (;=-50188677000000000;)
    f32.nearest
    f32.ge
    i64.load16_u align=1
    global.get 2
    f32.nearest
    f64.const 0x1.4a5521df5b43ep-93 (;=0.00000000000000000000000000013029321646029698;)
    local.get 0
    ref.null 10
    block ;; label = @1
      i32.const -131073
      i64.extend_i32_s
      f32.const -nan:0x325755 (;=NaN;)
      try_table (type 19) (result f32) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) (catch 2 0 (;@1;)) ;; label = @2
        f64.const -0x1.685459749dcf8p+936 (;=-817590399517911200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
        block (type 19) (result f32) ;; label = @3
          elem.drop 0
          i32.const 967400653
          loop (result f64) ;; label = @4
            global.get 2
            local.get 0
            i64.extend_i32_s
            br 4
            f64.convert_i64_s
            i32.const -2051593394
            block (type 22) ;; label = @5
            end
            br_table 0 (;@4;) 3 (;@1;) 4 0 (;@4;)
            elem.drop 0
            f64.nearest
            br 4
            f32.demote_f64
            try_table (type 21) (result f64) (catch 2 3 (;@1;)) (catch 2 0 (;@4;)) ;; label = @5
              elem.drop 0
              block (result f32) ;; label = @6
                block (type 19) (result f32) ;; label = @7
                  f64.const 0x1.add684276581ep+380 (;=4134882257637543000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                  elem.drop 0
                  ref.null 39
                  struct.get 39 10
                  br_table 3 (;@4;) 6 (;@1;) 7 3 (;@4;)
                  f64.trunc
                  i32.trunc_sat_f64_u
                  if (result i32) ;; label = @8
                    f64.const -0x1.fffffffffffffp+1022 (;=-89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                    i32.trunc_f64_s
                    f64.convert_i32_u
                    i32.trunc_f64_u
                    array.new_default 1
                    block (result i64) ;; label = @9
                      try_table (result i64) (catch 2 9) (catch_all 9) (catch_all 9) (catch 2 9) (catch_all 5 (;@4;)) (catch_all 5 (;@4;)) (catch_all 8 (;@1;)) (catch_all 8 (;@1;)) ;; label = @10
                        try_table (result f32) ;; label = @11
                          f64.const -0x1p+1009 (;=-5486124068793689000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)
                          f64.const -nan:0xfffffffff0000 (;=NaN;)
                          memory.size
                          br 7 (;@4;)
                          i64.const -2305843009213693953
                          i32.const 436818637
                          memory.grow
                          memory.size
                          memory.size
                          local.tee 0
                          i32.div_s
                          i32.eqz
                          local.set 0
                          block (type 21) (result f64) ;; label = @12
                            loop (type 19) (result f32) ;; label = @13
                              nop
                              block (result i32) ;; label = @14
                                elem.drop 0
                                global.get 2
                                i64.trunc_sat_f32_s
                                i64.extend8_s
                                i64.ctz
                                i32.wrap_i64
                                i32.ctz
                                block (type 22) ;; label = @15
                                  try_table (type 22) (catch_all 2 (;@13;)) (catch_all 0 (;@15;)) (catch 2 11 (;@4;)) ;; label = @16
                                    nop
                                  end
                                end
                              end
                              unreachable
                            end
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                    end
                    unreachable
                  else
                    unreachable
                  end
                  unreachable
                end
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (data (;0;) "")
  (data (;1;) "\c0t\fd\0d\5c6")
  (data (;2;) "")
)
