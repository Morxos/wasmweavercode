(module
  (rec
    (type (;0;) (sub (func)))
    (type (;1;) (sub (struct (field (mut i16)) (field i8) (field (mut anyref)) (field i8) (field funcref))))
    (type (;2;) (sub (func)))
    (type (;3;) (sub (func (param i64))))
    (type (;4;) (sub (array i8)))
    (type (;5;) (struct (field (mut eqref)) (field i8) (field i16) (field i64) (field (mut i8)) (field i16) (field i32) (field i8) (field (mut i16)) (field (mut structref)) (field i8) (field i8) (field (mut i8)) (field (mut nullexternref)) (field i8) (field (mut i16))))
    (type (;6;) (array (mut i16)))
    (type (;7;) (sub (func)))
    (type (;8;) (struct (field i16) (field i8) (field (mut i16)) (field i16) (field i32) (field i16) (field i64) (field i16) (field (mut i16)) (field i8) (field i16) (field (mut f32)) (field i16) (field i8) (field i16) (field (mut f32)) (field (mut i8))))
    (type (;9;) (func (param i64 i64 f32)))
    (type (;10;) (array (mut i16)))
    (type (;11;) (array (mut i16)))
    (type (;12;) (sub (func (result nullref i64))))
    (type (;13;) (sub (array (mut i8))))
    (type (;14;) (sub (array i32)))
    (type (;15;) (sub (struct (field (mut f32)) (field (mut i8)) (field i16))))
    (type (;16;) (array i8))
    (type (;17;) (sub (func (result i64 f64 (ref null 13) i64 i64 i64))))
    (type (;18;) (sub (array i32)))
    (type (;19;) (func (param i32) (result i64 f32 i64 i64)))
    (type (;20;) (array i16))
    (type (;21;) (func (param i32 i64 i64)))
    (type (;22;) (array i8))
    (type (;23;) (func (result arrayref)))
    (type (;24;) (array (mut i64)))
    (type (;25;) (sub 3 (func (param i64))))
    (type (;26;) (func (param i32) (result f32)))
    (type (;27;) (sub (array (mut i16))))
    (type (;28;) (func (result i32)))
    (type (;29;) (sub (struct (field (mut i8)) (field i64) (field (mut i8)) (field (mut i8)) (field i16) (field i32) (field i16) (field (mut i8)) (field (mut i16)) (field f64) (field i16))))
    (type (;30;) (struct (field i16) (field i8) (field (mut i16)) (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field (mut i16)) (field i16) (field i8) (field i8) (field i32) (field i16) (field i64) (field (mut i8)) (field f64)))
    (type (;31;) (sub (array (mut i16))))
    (type (;32;) (func (param i32) (result i32 nullref)))
    (type (;33;) (func))
    (type (;34;) (sub (array (mut i16))))
    (type (;35;) (sub (func (result (ref null 1) f64 f64))))
    (type (;36;) (sub (array i8)))
    (type (;37;) (func))
    (type (;38;) (sub (array (mut f64))))
    (type (;39;) (struct (field f32) (field i8) (field i64) (field (mut f64)) (field (mut f64)) (field (mut i16)) (field i16) (field i16) (field i64) (field (mut i8)) (field i8) (field i16) (field i16) (field (mut f32)) (field i8)))
    (type (;40;) (struct (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8))))
    (type (;41;) (struct (field (mut i16)) (field i8) (field i16) (field i16) (field funcref) (field i16)))
    (type (;42;) (sub (array (mut i16))))
    (type (;43;) (struct (field (mut i8)) (field (mut i16)) (field i16) (field (mut i16)) (field i8) (field i8) (field i16) (field i32) (field i8) (field (mut i32)) (field (mut i8)) (field i32) (field (mut (ref null 10))) (field i16) (field exnref)))
    (type (;44;) (array i64))
    (type (;45;) (array f32))
    (type (;46;) (struct (field i16) (field f64) (field (mut i16))))
    (type (;47;) (array (mut i8)))
    (type (;48;) (sub (struct (field (ref null 17)) (field i8) (field (mut f32)) (field (mut f32)) (field i16) (field (mut i8)))))
    (type (;49;) (sub (array (mut i16))))
    (type (;50;) (sub (func (param i32 f64))))
    (type (;51;) (sub (struct (field (mut i8)) (field (mut i8)) (field f64) (field i8) (field i8) (field (mut i8)) (field (mut i8)) (field i8) (field i8) (field (mut i8)) (field (mut i16)) (field (mut i16)))))
    (type (;52;) (sub (struct (field (mut i32)) (field (mut i8)) (field (mut f32)) (field (mut i16)) (field i8) (field i8) (field (mut i8)) (field i16) (field (mut f32)) (field i8) (field (mut i16)) (field i8) (field i8) (field i64) (field (mut i16)) (field i16) (field i16) (field (mut i16)) (field i16) (field (mut structref)))))
    (type (;53;) (sub (array eqref)))
    (type (;54;) (array (mut anyref)))
    (type (;55;) (func (param i32)))
    (type (;56;) (struct (field (mut (ref null 20))) (field (mut f64)) (field i16) (field i64) (field (mut i8)) (field i8) (field (mut i16)) (field i8) (field (mut i8)) (field i32) (field i16) (field (mut i16)) (field i64)))
    (type (;57;) (struct (field i32) (field (mut (ref null 10))) (field (mut i64)) (field i8) (field (mut i32)) (field (mut i8)) (field i16) (field (mut i16))))
    (type (;58;) (sub (struct (field i8) (field (mut i32)) (field i8) (field i8) (field i16) (field f64) (field i16) (field i16) (field (mut f32)) (field (mut i16)) (field (mut f32)) (field i16) (field i8))))
    (type (;59;) (array (mut f32)))
    (type (;60;) (sub (func (param f32))))
    (type (;61;) (array f32))
    (type (;62;) (sub (array i8)))
    (type (;63;) (sub (func)))
    (type (;64;) (struct (field (mut f32)) (field (mut f64)) (field (mut i16))))
    (type (;65;) (func))
    (type (;66;) (func (param f32)))
    (type (;67;) (sub (array i16)))
    (type (;68;) (func (param i64) (result i32 (ref null 24))))
  )
  (rec
    (type (;69;) (func))
    (type (;70;) (struct (field i16) (field i16) (field i16) (field i64) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8)) (field (mut i8)) (field f32) (field (mut i8)) (field (mut i16)) (field (mut i16))))
    (type (;71;) (func))
    (type (;72;) (array (ref null 44)))
    (type (;73;) (sub (func (result f32))))
  )
  (rec
    (type (;74;) (func (param f64)))
    (type (;75;) (array (mut i8)))
  )
  (import "N" "" (global (;0;) i64))
  (import "\u{14}\u{12}" "" (tag (;0;) (type 25) (param i64)))
  (import "" "" (table (;0;) 0 118844 (ref null 20)))
  (tag (;1;) (type 69))
  (tag (;2;) (type 37))
  (export "\u{c}d" (global 0))
  (export "\u{e}LZH\u{22}" (global 0))
  (export "" (func 0))
  (func (;0;) (type 50) (param i32 f64))
)
