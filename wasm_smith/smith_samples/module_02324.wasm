(module
  (rec
    (type (;0;) (sub (func (param f32))))
    (type (;1;) (sub (array i8)))
    (type (;2;) (func (result f32)))
    (type (;3;) (sub (array i16)))
    (type (;4;) (func (param i64 i64 i64 f32) (result i64)))
    (type (;5;) (sub (func)))
    (type (;6;) (array f64))
    (type (;7;) (sub (struct (field i8) (field (mut i8)))))
    (type (;8;) (sub (struct (field (mut i8)) (field i16) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i16)) (field nullfuncref) (field i16) (field i64) (field (mut i32)) (field nullref) (field (mut i16)) (field (mut i64)) (field (mut i16)) (field i32))))
    (type (;9;) (func (result f64 arrayref i32 eqref f32)))
    (type (;10;) (sub (func (param externref i64 i64 nullfuncref i32) (result f64 f32 i64))))
    (type (;11;) (sub (struct (field (mut i8)) (field externref) (field (mut i32)) (field (mut i8)) (field i64) (field f32))))
    (type (;12;) (sub (array (mut i8))))
    (type (;13;) (array (mut i8)))
    (type (;14;) (func (result i32)))
    (type (;15;) (struct (field (mut i8)) (field i16) (field (mut i16)) (field i16) (field i16) (field (mut i16))))
    (type (;16;) (sub (struct (field i8) (field (mut i64)) (field i8) (field i16) (field f64) (field (mut i64)))))
    (type (;17;) (array i64))
    (type (;18;) (sub (array f64)))
    (type (;19;) (sub (func)))
    (type (;20;) (sub (struct (field i16) (field i8) (field (mut i16)) (field (mut i64)) (field f32) (field (ref null 2)) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i8)) (field (mut i8)) (field i16) (field (mut (ref null 0))) (field (mut i16)))))
    (type (;21;) (struct (field (mut i8)) (field (mut (ref null 0))) (field i8) (field (mut i16)) (field (mut i31ref)) (field i16) (field i16) (field (mut i16)) (field f64) (field (mut i32)) (field (ref null 7)) (field (mut i16)) (field (mut i16)) (field i8)))
    (type (;22;) (sub (struct (field i16) (field i16) (field f32) (field i16) (field (mut i8)) (field (mut i8)) (field i8) (field (ref null 2)) (field (mut i16)) (field (mut i16)) (field (mut f64)) (field i16) (field i64) (field i64))))
    (type (;23;) (sub (struct (field (mut i32)) (field i16) (field i32) (field i8) (field i64) (field (mut i64)) (field i8) (field i8) (field i8) (field i16) (field i8) (field (mut i16)) (field i64))))
    (type (;24;) (sub (func (param i64))))
    (type (;25;) (func (result i32)))
    (type (;26;) (sub (struct (field i16) (field (mut i64)) (field i16) (field i16) (field i16))))
    (type (;27;) (array (mut f32)))
    (type (;28;) (func))
    (type (;29;) (sub (struct (field (mut i16)))))
    (type (;30;) (sub (struct (field i16) (field (mut i8)) (field (mut i64)) (field i8) (field i16) (field (mut i8)) (field (mut arrayref)) (field i8) (field i8) (field i8) (field i16) (field (mut i8)))))
    (type (;31;) (func (param funcref)))
    (type (;32;) (struct (field i16) (field i8) (field i64) (field i64) (field (mut i8)) (field (mut funcref)) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field (mut i8)) (field (mut i16)) (field f32) (field (mut f32)) (field i16) (field (mut i16)) (field (mut (ref null 13))) (field f32) (field i16)))
    (type (;33;) (sub (array i8)))
    (type (;34;) (sub (array i64)))
    (type (;35;) (sub (array i8)))
    (type (;36;) (array (mut f32)))
    (type (;37;) (sub (func (param (ref null 24) f32 i64) (result f32))))
    (type (;38;) (array f64))
    (type (;39;) (sub (struct (field (mut i16)) (field (mut i8)) (field i8) (field i16) (field i16) (field i16) (field f32) (field (mut i32)) (field nullfuncref) (field (mut i64)) (field (mut i16)) (field (mut i8)) (field i64) (field nullref) (field f32) (field (mut i16)) (field i8) (field (mut f64)) (field (mut i16)) (field (mut i64)))))
    (type (;40;) (sub (func)))
    (type (;41;) (array i16))
    (type (;42;) (sub (struct (field nullfuncref) (field i16) (field i8))))
    (type (;43;) (func))
    (type (;44;) (array (mut i16)))
    (type (;45;) (struct))
    (type (;46;) (sub final 11 (struct (field (mut i8)) (field nullexternref) (field (mut i32)) (field (mut i8)) (field i64) (field f32) (field i8) (field (mut i8)) (field (mut i8)))))
    (type (;47;) (sub (struct (field f64) (field (mut i16)))))
    (type (;48;) (array i8))
    (type (;49;) (sub (struct (field i8) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i8)) (field (mut i8)) (field i16) (field (mut i16)))))
    (type (;50;) (func))
  )
  (table (;0;) i64 6 (ref null 16))
  (memory (;0;) 3)
  (tag (;0;) (type 40))
  (tag (;1;) (type 0) (param f32))
  (tag (;2;) (type 43))
  (global (;0;) i64 i64.const 7472972887632812395)
  (export "" (func 0))
  (func (;0;) (type 19)
    (local i32)
    global.get 0
    f64.convert_i64_u
    nop
    f64.floor
    i32.trunc_sat_f64_u
    i32.popcnt
    if (type 25) (result i32) ;; label = @1
      ref.null 45
      loop (type 50) ;; label = @2
      end
      br_on_null 1
      i64.const 2143289344
      struct.new 45
      f32.const -0x1.e806d2p+20 (;=-1998957.1;)
      br 1
      f32.ceil
      struct.new_default 26
      ref.as_non_null
      ref.as_non_null
      loop (type 40) ;; label = @2
        memory.size
        try_table (result (ref null 12)) (catch_all 0 (;@2;)) (catch_all 0 (;@2;)) ;; label = @3
          call 0
          f32.const -0x1p+127 (;=-170141180000000000000000000000000000000;)
          table.size 0
          f32.const -0x1.9bfd8ep+60 (;=-1855440000000000000;)
          i64.trunc_sat_f32_s
          f32.convert_i64_s
          loop (type 50) ;; label = @4
          end
          f32.trunc
          struct.new 45
          ref.cast (ref 45)
          f32.const -nan:0x6fffff (;=NaN;)
          block (type 19) ;; label = @4
            try_table (type 50) ;; label = @5
              struct.new 45
              global.get 0
              array.new_fixed 17 0
              ref.null array
              try_table (type 40) ;; label = @6
                return_call 0
                ref.null 20
                local.get 0
                loop (type 25) (result i32) ;; label = @7
                  call 0
                  local.get 0
                  local.tee 0
                  if (type 50) ;; label = @8
                    i64.const -4239079253839924314
                    i32.wrap_i64
                    i64.extend_i32_u
                    i64.eqz
                    memory.size
                    array.new_default 34
                    block (type 19) ;; label = @9
                      try_table (catch 2 3 (;@6;)) (catch_all 2 (;@7;)) (catch 2 4 (;@5;)) (catch 0 3 (;@6;)) ;; label = @10
                        loop (type 5) ;; label = @11
                          ref.null 33
                          unreachable
                        end
                      end
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
          end
          unreachable
        end
        unreachable
      end
      unreachable
    else
      unreachable
    end
    unreachable
  )
)
