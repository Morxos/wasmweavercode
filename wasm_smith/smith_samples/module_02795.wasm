(module
  (rec
    (type (;0;) (sub (array i16)))
    (type (;1;) (sub (func (param f32 i64) (result f32))))
    (type (;2;) (sub (struct (field i64) (field (mut i16)) (field i64) (field (mut f32)))))
    (type (;3;) (array (mut i16)))
    (type (;4;) (struct (field (mut i64)) (field i16) (field i16) (field i8) (field i16) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field i8)))
    (type (;5;) (sub (func)))
    (type (;6;) (array (mut i8)))
    (type (;7;) (sub (func (param i32 i64 f64) (result i32))))
    (type (;8;) (struct (field i8) (field i16) (field (mut i64))))
    (type (;9;) (struct (field i32) (field i64)))
    (type (;10;) (struct (field (mut i16)) (field i16) (field (mut i8)) (field i16) (field i8) (field i8)))
    (type (;11;) (sub (func (param i64 i32 i64))))
    (type (;12;) (sub (func (result i64))))
    (type (;13;) (array funcref))
    (type (;14;) (array (mut i8)))
    (type (;15;) (struct (field (mut i32)) (field (mut f32)) (field (mut i16))))
    (type (;16;) (array (mut f32)))
    (type (;17;) (struct (field f32) (field i8) (field (mut i8)) (field (mut f64)) (field (mut i8)) (field i16) (field (mut i64)) (field (mut i8)) (field arrayref) (field (mut f64)) (field f32) (field i64) (field (mut i8)) (field (mut (ref null 16))) (field (mut i8)) (field (mut i16)) (field (mut i8)) (field (ref null 14)) (field (mut i8))))
    (type (;18;) (sub (array (mut i16))))
    (type (;19;) (func (param i64 i32 i64)))
    (type (;20;) (sub (array f32)))
    (type (;21;) (sub (struct (field i16) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field i64))))
    (type (;22;) (sub (struct (field i8) (field f64) (field (mut funcref)) (field f64) (field (mut i16)) (field (mut i16)) (field (mut i8)) (field (mut i8)) (field (mut i64)) (field i8))))
    (type (;23;) (sub (array (mut i16))))
    (type (;24;) (sub (array (mut i16))))
    (type (;25;) (sub (func (param eqref) (result (ref null 21)))))
    (type (;26;) (struct (field nullfuncref) (field (mut externref)) (field (mut i64)) (field (mut i8)) (field (mut i16)) (field i8) (field (mut i16)) (field (mut i8)) (field f64) (field (mut i64)) (field (mut i8)) (field (mut i8)) (field i8) (field (mut i16)) (field (mut i16)) (field i16) (field (mut (ref null 11))) (field f64) (field i16)))
    (type (;27;) (array i16))
    (type (;28;) (sub (struct (field (mut i8)) (field i8) (field (mut i8)) (field (mut i16)) (field f32) (field (mut i64)) (field (mut i8)) (field i8) (field (ref null 11)) (field (mut i16)) (field (mut i16)) (field i32) (field (mut i64)) (field (mut f64)) (field i16) (field funcref) (field i8) (field (mut structref)) (field i8))))
    (type (;29;) (func (param i32 i32 i32 (ref null 15) f32 i64 i32) (result (ref null 11) i32)))
    (type (;30;) (array eqref))
    (type (;31;) (sub (struct (field f64) (field (mut i16)) (field (mut i8)) (field (mut f32)) (field (mut i8)) (field (mut i16)) (field i8) (field i16) (field i32) (field (mut i32)))))
    (type (;32;) (sub (struct (field i31ref) (field i16) (field f64) (field i16) (field (mut i16)) (field (mut i32)) (field i16) (field i8))))
    (type (;33;) (struct (field (mut i16)) (field f32) (field (mut i64)) (field f64) (field (mut i16))))
    (type (;34;) (array i64))
    (type (;35;) (struct (field (mut i8)) (field f64) (field i8) (field (mut i16))))
    (type (;36;) (struct (field (mut (ref null 23))) (field i16) (field i16) (field (mut i16)) (field i16) (field i8) (field i16) (field (mut f64)) (field i16) (field f32)))
  )
  (import "0" "" (global (;0;) f64))
  (import "\u{2}\u{17}" "" (memory (;0;) 148 23040))
  (tag (;0;) (type 11) (param i64 i32 i64))
  (tag (;1;) (type 5))
  (elem (;0;) structref (ref.null 36) (ref.null 8))
  (func (;0;) (type 1) (param f32 i64) (result f32)
    loop ;; label = @1
      struct.new_default 32
      array.new_fixed 30 0
      ref.null 32
      ref.test (ref null 32)
      i32.ctz
      i32.load8_u offset=2229683
      f32.convert_i32_u
      i32.trunc_sat_f32_s
      block ;; label = @2
        ref.null 6
        elem.drop 0
        elem.drop 0
        array.new_fixed 30 0
        ref.null 8
        ref.eq
        i32.const 1418705519
        i32.le_s
        f32.convert_i32_u
        f32.ceil
        i64.trunc_sat_f32_u
        f64.const 0x1.d35fc019d7125p-593 (;=0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000563166973613415;)
        i64.trunc_sat_f64_s
        i64.clz
        local.set 1
        i32.const -1073741825
        i32.clz
        i32.const 212631414
        br_if 0 (;@2;)
        f32.load offset=2248843
        f32.const 0x1.fffffp+52 (;=9007195000000000;)
        global.get 0
        loop (type 12) (result i64) ;; label = @3
          f32.const -0x1.bc2aep-72 (;=-0.00000000000000000000036740673;)
          f32.ceil
          f32.trunc
          i32.trunc_f32_u
          array.new_fixed 18 0
          ref.as_non_null
          local.get 0
          f64.promote_f32
          global.get 0
          br 0 (;@3;)
          br 0 (;@3;)
          i32.trunc_f64_s
          f32.load offset=3936807189 align=2
          loop (type 12) (result i64) ;; label = @4
            f32.const 0x1.9182d8p-37 (;=0.000000000011411632;)
            i64.const 3346715896682220187
            block ;; label = @5
              struct.new_default 15
              extern.convert_any
              any.convert_extern
              f64.const -nan:0xffffffff7ffff (;=NaN;)
              loop (result i64) ;; label = @6
                loop (result nullfuncref) ;; label = @7
                  loop (type 5) ;; label = @8
                    elem.drop 0
                    local.get 0
                    memory.size
                    f64.convert_i32_s
                    i64.trunc_f64_s
                    i64.extend32_s
                    i32.wrap_i64
                    i64.load offset=6930459 align=1
                    i32.wrap_i64
                    if (type 12) (result i64) ;; label = @9
                      try_table (type 12) (result i64) (catch 1 6 (;@3;)) (catch 1 5 (;@4;)) (catch_all 5 (;@4;)) (catch_all 3 (;@6;)) ;; label = @10
                        memory.size
                        i64.load8_s offset=9377950
                        f32.convert_i64_s
                        f64.promote_f32
                        f64.trunc
                        block (type 5) ;; label = @11
                          memory.size
                          i64.load32_u offset=4572699
                          f64.reinterpret_i64
                          loop (type 5) ;; label = @12
                            f32.const 0x1.p-143 (;=0.00000000000000000000000000000000000000000009;)
                            f32.sqrt
                            br 10 (;@2;)
                            f32.nearest
                            f32.abs
                            global.get 0
                            i32.const -313026182
                            f32.load offset=4914945
                            unreachable
                            unreachable
                          end
                          unreachable
                        end
                        unreachable
                      end
                    else
                      unreachable
                    end
                    unreachable
                  end
                  unreachable
                end
                unreachable
              end
              unreachable
            end
            unreachable
          end
          unreachable
        end
        unreachable
      end
      unreachable
    end
    unreachable
  )
  (func (;1;) (type 29) (param i32 i32 i32 (ref null 15) f32 i64 i32) (result (ref null 11) i32)
    unreachable
  )
  (func (;2;) (type 1) (param f32 i64) (result f32)
    unreachable
  )
)
